{"markdown": "# Welcome to Rails\n\n## What's Rails?\n\nRails is a web-application framework that includes everything needed to\ncreate database-backed web applications according to the\n[Model-View-Controller (MVC)](https://en.wikipedia.org/wiki/Model-view-controller)\npattern.\n\nUnderstanding the MVC pattern is key to understanding Rails. MVC divides your\napplication into three layers: Model, View, and Controller, each with a specific responsibility.\n\n## Model layer\n\nThe _**Model layer**_ represents the domain model (such as Account, Product,\nPerson, Post, etc.) and encapsulates the business logic specific to\nyour application. In Rails, database-backed model classes are derived from\n`ActiveRecord::Base`. [Active Record](activerecord/README.rdoc) allows you to present the data from\ndatabase rows as objects and embellish these data objects with business logic\nmethods.\nAlthough most Rails models are backed by a database, models can also be ordinary\nRuby classes, or Ruby classes that implement a set of interfaces as provided by\nthe [Active Model](activemodel/README.rdoc) module.\n\n## View layer\n\nThe _**View layer**_ is composed of \"templates\" that are responsible for providing\nappropriate representations of your application's resources. Templates can\ncome in a variety of formats, but most view templates are HTML with embedded\nRuby code (ERB files). Views are typically rendered to generate a controller response\nor to generate the body of an email. In Rails, View generation is handled by [Action View](actionview/README.rdoc).\n\n## Controller layer\n\nThe _**Controller layer**_ is responsible for handling incoming HTTP requests and\nproviding a suitable response. Usually, this means returning HTML, but Rails controllers\ncan also generate XML, JSON, PDFs, mobile-specific views, and more. Controllers load and\nmanipulate models, and render view templates in order to generate the appropriate HTTP response.\nIn Rails, incoming requests are routed by Action Dispatch to an appropriate controller, and\ncontroller classes are derived from `ActionController::Base`. Action Dispatch and Action Controller\nare bundled together in [Action Pack](actionpack/README.rdoc).\n\n## Frameworks and libraries\n\n[Active Record](activerecord/README.rdoc), [Active Model](activemodel/README.rdoc), [Action Pack](actionpack/README.rdoc), and [Action View](actionview/README.rdoc) can each be used independently outside Rails.\n\nIn addition to that, Rails also comes with:\n\n- [Action Mailer](actionmailer/README.rdoc), a library to generate and send emails\n- [Action Mailbox](actionmailbox/README.md), a library to receive emails within a Rails application\n- [Active Job](activejob/README.md), a framework for declaring jobs and making them run on a variety of queuing backends\n- [Action Cable](actioncable/README.md), a framework to integrate WebSockets with a Rails application\n- [Active Storage](activestorage/README.md), a library to attach cloud and local files to Rails applications\n- [Action Text](actiontext/README.md), a library to handle rich text content\n- [Active Support](activesupport/README.rdoc), a collection of utility classes and standard library extensions that are useful for Rails, and may also be used independently outside Rails\n\n## Getting Started\n\n1. Install Rails at the command prompt if you haven't yet:\n\n\t```bash\n\t$ gem install rails\n\t```\n\n2. At the command prompt, create a new Rails application:\n\n\t```bash\n\t$ rails new myapp\n\t```\n\n   where \"myapp\" is the application name.\n\n3. Change directory to `myapp` and start the web server:\n\n\t```bash\n\t$ cd myapp\n\t$ bin/rails server\n\t```\n   Run with `--help` or `-h` for options.\n\n4. Go to `http://localhost:3000` and you'll see the Rails bootscreen with your Rails and Ruby versions.\n\n5. Follow the guidelines to start developing your application. You may find\n   the following resources handy:\n    * [Getting Started with Rails](https://guides.rubyonrails.org/getting_started.html)\n    * [Ruby on Rails Guides](https://guides.rubyonrails.org)\n    * [The API Documentation](https://api.rubyonrails.org)\n\n## Contributing\n\nWe encourage you to contribute to Ruby on Rails! Please check out the\n[Contributing to Ruby on Rails guide](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for guidelines about how to proceed. [Join us!](https://contributors.rubyonrails.org)\n\nTrying to report a possible security vulnerability in Rails? Please\ncheck out our [security policy](https://rubyonrails.org/security) for\nguidelines about how to proceed.\n\nEveryone interacting in Rails and its sub-projects' codebases, issue trackers, chat rooms, and mailing lists is expected to follow the Rails [code of conduct](https://rubyonrails.org/conduct).\n\n## License\n\nRuby on Rails is released under the [MIT License](https://opensource.org/licenses/MIT).\n"}
[{"title":"Apple Privacy Manifest","body":"### Summary\n\nAbout: https:\/\/developer.apple.com\/news\/?id=r1henawx\r\n\r\nI found the use of NSFileModificationDate in react-native-maps and (mach_absolute_time, NSFileCreationDate, NSFileModificationDate, NSURLContentModificationDateKey, NSUserDefaults, NSFileSystemFreeSize, NSURLCreationDateKey, stat) in other libraries of Google Maps.\r\n\r\n\r\nShould we create an Apple Privacy Manifest and declare it?\r\n\r\n\n\n### Reproducible sample code\n\n```TSX\nUsed symbols in binary .\/XCFrameworkIntermediates\/GoogleMaps\/Maps\/GoogleMaps.framework\/GoogleMaps: mach_absolute_time, NSFileCreationDate, NSFileModificationDate, NSURLContentModificationDateKey, NSUserDefaults\r\nUsed symbols in binary .\/XCFrameworkIntermediates\/GoogleMaps\/Base\/GoogleMapsBase.framework\/GoogleMapsBase: NSFileSystemFreeSize, NSURLContentModificationDateKey, NSURLCreationDateKey, NSUserDefaults, stat\r\nUsed symbols in binary .\/React-native-maps\/libreact-native-maps.a: NSFileModificationDate\r\n```\n```\n\n\n### Steps to reproduce\n\nGet it manually from the source code or run the script: https:\/\/github.com\/Wooder\/ios_17_required_reason_api_scanner\n\n### Expected result\n\nDeclare APIs in an Apple Privacy Manifest.\n\n### Actual result\n\nreact-native-maps doesn't declare APIs in an Apple Privacy Manifest.\n\n### React Native Maps Version\n\n1.11.3\n\n### What platforms are you seeing the problem on?\n\niOS (Apple Maps), iOS (Google Maps)\n\n### React Native Version\n\n0.73.5\n\n### What version of Expo are you using?\n\nNot using Expo\n\n### Device(s)\n\nonly IOS\n\n### Additional information\n\n_No response_","comments":[],"labels":["bug"]},{"title":"Custom marker is croping from right to bottom. Only in IOS.","body":"### Summary\n\nCustom marker with a circle animation is not visible completely in IOS only, in Android it is working fine. In IOS it is cropping from right and bottom.\n\n### Reproducible sample code\n\n```TSX\n<MapView\r\n        ref={mapView}\r\n        provider={PROVIDER_GOOGLE}\r\n        style={{...props.style}}\r\n        mapType={props.userType === 'companyAdmin' ? props.basemap : 'standard'}\r\n        showsBuildings\r\n        zoomEnabled={props.zoomEnable}\r\n        rotateEnabled={props.rotateEnable}\r\n        scrollEnabled={props.scrollEnable}\r\n        initialRegion={currentRegion}\r\n        onRegionChange={async (region, details) => {\r\n          await UpdateCurrentRegion(region);\r\n        }}\r\n        onRegionChangeComplete={region => {\r\n          setCurrentRegion(region);\r\n        }}\r\n        followsUserLocation={true}\r\n        onMapReady={checkDeviceTofocus}\r\n        maxZoomLevel={19}\r\n        showsCompass={false}>\r\n        {props.showUserLocation && (\r\n          <MapMarker2\r\n            latitude={realTimeLocation.latitude}\r\n            longitude={realTimeLocation.longitude}\r\n            latitudeDelta={realTimeLocation.latitudeDelta}\r\n            longitudeDelta={realTimeLocation.longitudeDelta}\r\n            zIndex={\r\n              device !== null && device !== undefined ? device.length : 10\r\n            }\r\n          \/>\r\n        )}\r\n        {device !== null &&\r\n          device !== undefined &&\r\n          device.map(\r\n            (e, index) =>\r\n              e.deviceStatus === 1 &&\r\n              e.location &&\r\n              Object.keys(e.location).length !== 0 &&\r\n              e.location.lat.length !== 0 &&\r\n              e.location.lon.length !== 0 && (\r\n                <MapMarker\r\n                  onPress={() => {\r\n                    props.currentId(e.deviceId, e.id, e.location);\r\n                  }}\r\n                  key={index}\r\n                  latitude={e.location.lat}\r\n                  longitude={e.location.lon}\r\n                  latitudeDelta={props.latitudeDelta}\r\n                  longitudeDelta={props.longitudeDelta}\r\n                  PinColorValueOfPointer={e.pinColor ? e.pinColor : 0}\r\n                  zindex={index}\r\n                  radius={e.radius}\r\n                  interpolated={props.interpolated}\r\n                \/>\r\n               \r\n              ),\r\n          )}\r\n      <\/MapView>\r\n\r\n\r\n\r\n\r\nThis is my marker\r\n\r\n<Marker\r\n        style={{\r\n          backgroundColor: 'rgba(246, 78, 96,0.5)',\/\/this is for understanding the width and height of the marker container\r\n          minHeight: CircleRadius,\r\n          minWidth: CircleRadius,\r\n          alignItems: 'center',\r\n          justifyContent: 'flex-end',\r\n        }}\r\n        tracksViewChanges={true}\r\n        zIndex={props.zindex}\r\n        onPress={props.onPress}\r\n        coordinate={{\r\n          latitude: props.latitude,\r\n          longitude: props.longitude,\r\n          latitudeDelta: props.latitudeDelta,\r\n          longitudeDelta: props.longitudeDelta,\r\n        }}>\r\n        <Animated.View\r\n          style={[\r\n            {\r\n              backgroundColor: fillColor,\r\n              minHeight: CircleRadius,\r\n              minWidth: CircleRadius,\r\n              borderWidth: 1,\r\n              borderColor: strokeColor,\r\n              borderRadius: height(100),\r\n              zIndex: 100,\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            },\r\n            (props.PinColorValueOfPointer === 2 ||\r\n              props.PinColorValueOfPointer === 1) && {\r\n              transform: [{scale: props.interpolated}],\r\n            },\r\n          ]}>\r\n          {props.PinColorValueOfPointer === 2 ? (\r\n            <DeviceLocationIconRed \/>\r\n          ) : props.PinColorValueOfPointer === 1 ? (\r\n            <DeviceLocationIconOrange \/>\r\n          ) : props.PinColorValueOfPointer === 0.5 ? (\r\n            <DeviceLocationIcon \/>\r\n          ) : (\r\n            <DeviceLocationIconGreen \/>\r\n          )}\r\n        <\/Animated.View>\r\n      <\/Marker>\r\n\r\n\r\nThis is the animation\r\n const [movingValue] = useState(new Animated.Value(0));\r\n\r\n  useEffect(() => {\r\n    Animated.loop(\r\n      Animated.sequence([\r\n        Animated.timing(movingValue, {\r\n          toValue: 1,\r\n          duration: 1000,\r\n          useNativeDriver: true,\r\n        }),\r\n        Animated.timing(movingValue, {\r\n          toValue: 0,\r\n          duration: 1000,\r\n          useNativeDriver: true,\r\n        }),\r\n      ]),\r\n    ).start();\r\n    return () => {};\r\n  }, []);\r\n\r\n  let interpolated = movingValue.interpolate({\r\n    inputRange: [0, 1],\r\n    outputRange: [0.5, 1],\r\n  });\n```\n\n\n### Steps to reproduce\n\nCreate a custom marker with circle animation in it. Scale the circle like in the code that i have provided in the reproducible code. In IOS the markers circle should not be cropping.\n\n### Expected result\n\n\r\nhttps:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/115549942\/f4307a5b-2c32-4752-9093-3fc641eae659\r\n\r\n\n\n### Actual result\n\n\r\nhttps:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/115549942\/aa03e3ad-b31c-4eb4-ae1d-11719353b67f\r\n\r\n\n\n### React Native Maps Version\n\n\"react-native-maps\": \"^1.8.0\",\n\n### What platforms are you seeing the problem on?\n\niOS (Google Maps)\n\n### React Native Version\n\n\"react-native\": \"0.73.2\",\n\n### What version of Expo are you using?\n\nNot using Expo\n\n### Device(s)\n\niPad mini (5th generation ) \n\n### Additional information\n\nWhen I commented the provider={PROVIDER_GOOGLE} the animation works fine without croping. but I want to use google maps in bot platforms so that is becomes consistent.\r\n","comments":[],"labels":["bug"]},{"title":"download map and save in pdf,png ","body":"### Summary\n\nhi can i download whole save and save in pdf,png...\n\n### Reproducible sample code\n\n```TSX\nhi can i download whole save and save in pdf,png...\n```\n\n\n### Steps to reproduce\n\nunable to find any method for this\r\nhi can i download whole save and save in pdf,png...\n\n### Expected result\n\ndownload whole save and save in pdf,png...\n\n### Actual result\n\nno method found\n\n### React Native Maps Version\n\n1.1.0\n\n### What platforms are you seeing the problem on?\n\nAndroid, iOS (Apple Maps), iOS (Google Maps)\n\n### React Native Version\n\n0.73\n\n### What version of Expo are you using?\n\nNot using Expo\n\n### Device(s)\n\nboth android\/ios\n\n### Additional information\n\nhi can i download whole save and save in pdf,png...","comments":[],"labels":["bug"]},{"title":"Custom marker start flicking without changing the state.","body":"### Summary\r\n\r\nWhen employing React Native Maps version 1.11.1, a peculiar phenomenon emerges: custom markers begin to flicker inexplicably, even when the location remains unchanged. Curiously, this issue is absent in React Native Maps version 1.7.1, where custom markers maintain stability without exhibiting any flickering behavior. I have not changed anything in the code except for the version number. you may review my reproducible example here.\r\n\r\nreact-native-maps v(1.11.1) :\r\nhttps:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/124868535\/2467ba37-6b18-49a5-9d0e-3e33973129d8\r\n\r\nreact-native-maps v(1.7.1) :\r\nhttps:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/124868535\/2020a044-128c-4607-a7b8-a8026133e987\r\n\r\n\r\n\r\n\r\n\r\n### Reproducible sample code\r\n\r\n```TSX\r\nimport React, {useRef, useEffect} from 'react';\r\nimport {View, Image, StatusBar} from 'react-native';\r\nimport MapView, {Marker, PROVIDER_GOOGLE} from 'react-native-maps';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport {appIcons} from '..\/..\/..\/services';\r\nimport {styles} from '.\/styles';\r\n\r\nconst Dashboard = ({navigation}) => {\r\n  \/\/ const dispatch = useDispatch();\r\n  const mapRef = useRef(null);\r\n  const user = useSelector(state => state.user.userLocation);\r\n\r\n\r\n  return (\r\n    <View>\r\n      <MapView\r\n        provider={PROVIDER_GOOGLE}\r\n        ref={mapRef}\r\n        style={styles.mapStyle}\r\n        initialRegion={{\r\n          latitude: user?.position?.lat,\r\n          longitude: user?.position?.lng,\r\n          longitudeDelta: 241.77777099609375,\r\n          latitudeDelta: 353.77777099609375,\r\n        }}>\r\n        <Marker\r\n          draggable={false}\r\n          coordinate={{\r\n            latitude: user?.position?.lat,\r\n            longitude: user?.position?.lng,\r\n            longitudeDelta: 241.77777099609375,\r\n            latitudeDelta: 353.77777099609375,\r\n          }}>\r\n          <Image source={appIcons.mapIcon} style={styles.imageStyle} \/>\r\n          <Image source={appIcons.profileIcon} style={styles.userImage} \/>\r\n        <\/Marker>\r\n      <\/MapView>\r\n    <\/View>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n```\r\n\r\n\r\n### Steps to reproduce\r\n\r\nYou need to use react-native-maps v(1.11.1)\r\nUse the same code\r\n\r\n### Expected result\r\n\r\nhttps:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/124868535\/2020a044-128c-4607-a7b8-a8026133e987\r\n\r\n\r\n\r\n### Actual result\r\n\r\nhttps:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/124868535\/2467ba37-6b18-49a5-9d0e-3e33973129d8\r\n\r\n\r\n### React Native Maps Version\r\n\r\n1.11.1\r\n\r\n### What platforms are you seeing the problem on?\r\n\r\nAndroid\r\n\r\n### React Native Version\r\n\r\n0.73.4\r\n\r\n### What version of Expo are you using?\r\n\r\nNot using Expo\r\n\r\n### Device(s)\r\n\r\nOnePlus 9R\r\n\r\n### Additional information\r\n\r\n_No response_","comments":["I am having the same issue.","Hi, thanks for reporting this. I'm experiencing the same thing so will look for a fix soon. In the meantime you can add the property\r\n`tracksViewChanges={false}` to your marker to avoid the flickering","The issue ocurss when updated to 1.10.3 and the same behavior on 1.11.3 trackViewChanges on false doesn't solve the problem for me. ","@jan-kozinski  thanks :) \r\n\r\nIf I add `tracksViewChanges={false}` on the `Marker` component it seems to remove the flickering for me. I am using react-native-maps 1.11.3. ","Same issue occurs after upgrading to 1.10.0. `tracksViewChanges={false}` apparently solves the issue.","Same issue for me v1.11.3, tracksViewChanges={false} worked as a temp fix","Same here v1.11.3, I'm using animated view (cicle\/radio animation) , the animation doesn't work with `tracksViewChanges={false}`  \r\n\r\nhttps:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/44346970\/c4ea8ed6-49c3-40c1-84c3-09cd37b4cc2c\r\n\r\n","Same issue here: Adding `tracksViewChanges={false}` fixes the flickering, but stops my animation from working. So this is not a solution for me :(","the flickering is caused by the new react maps renderer and was reported here as well https:\/\/github.com\/react-native-maps\/react-native-maps\/issues\/4980"],"labels":["bug"]},{"title":"Marker's `onPress` doesn't return `nativeEvent.position` on iOS","body":"### Summary\n\nThe event from `onPress` for a Marker doesn't return the `position` field that's supposed to be inside `e.nativeEvent` on iOS. This is returned only on Android.\r\n\r\nThis bug is further evinced on [Stack Overflow](https:\/\/stackoverflow.com\/questions\/72015734\/is-there-a-way-to-get-markers-on-screen-position-in-react-native-maps).\n\n### Reproducible sample code\n\n```TSX\n<Marker\r\n  ...\r\n  onPress={(event) => {\r\n   console.log(event.nativeEvent)\r\n  }}\r\n\/>\n```\n\n\n### Steps to reproduce\n\n1. Use this project on iOS.\r\n2. Specify an `onPress` for a `Marker`\r\n3. See that the event's `nativeEvent` does not return a position, only coordinates. (it should return both, per [the docs](https:\/\/github.com\/react-native-maps\/react-native-maps\/blob\/master\/docs\/marker.md))\n\n### Expected result\n\n`nativeEvent` should return a `position` value.\n\n### Actual result\n\n`nativeEvent` does not return a `position` value on iOS.\n\n### React Native Maps Version\n\n1.10.3\n\n### What platforms are you seeing the problem on?\n\niOS (Google Maps)\n\n### React Native Version\n\n0.72.4\n\n### What version of Expo are you using?\n\nSDK 48\n\n### Device(s)\n\niPhone 15 Po\n\n### Additional information\n\n_No response_","comments":["Hi @melyux, thanks for reporting this. I think this is a mistake in the documentation because this marker uses GMSMarker underneath and his position property type is CLLocationCoordinate2D. This type has only latitude, longitude and animatableData.\r\n\r\nSources:\r\nhttps:\/\/developer.apple.com\/documentation\/corelocation\/cllocationcoordinate2d\r\nhttps:\/\/developers.google.com\/maps\/documentation\/ios-sdk\/reference\/interface_g_m_s_marker#property-documentation"],"labels":["bug","good first issue"]},{"title":"AccessibilityLabels for markers doesnt work","body":"### Summary\n\nHello, I tried using appium to create automation tests for my app. Unfortunetelly I faced blocker. I can't catch correctly markers. It seems that adding props accessibilityLabel, accessible, testID dont do anything. I mean these accessibilitylabels of markers are not visible in appium. When I add title prop it became visible but title prop causes showing tooltip above marker which I want to avoid. Will it be fixed or is there any possibilities to don't show the tooltip?\n\n### Reproducible sample code\n\n```TSX\n<Marker\r\n          onPress={onPress(item)}\r\n          coordinate={{ latitude: item.latitude, longitude: item.longitude }}\r\n          tracksViewChanges={markerTracksChanges}\r\n          key={`MapMarker-${index}-${item.latitude}-${item.longitude}`}\r\n          accessibilityLabel={accessibilityKey},\r\n          accessible,\r\n          testID={accessibilityKey},\r\n        >\r\n        ....\r\n          <Image ...\/>\r\n          <Image ...\/>\r\n        <\/Marker>\n```\n\n\n### Steps to reproduce\n\n- have configured and displayed map with markers\r\n- have configured and run appium\n\n### Expected result\n\neither not showing tooltip above marker when I add title prop or working accessibilitylabel without adding title prop\n\n### Actual result\n\naccessibilitylabel is visible in appium only when I add title parameter but it also causes showing tooltip above marker.\n\n### React Native Maps Version\n\n1.7.1\n\n### What platforms are you seeing the problem on?\n\nAndroid\n\n### React Native Version\n\n0.72.10\n\n### What version of Expo are you using?\n\nSDK 48\n\n### Device(s)\n\nAndroid emulator\n\n### Additional information\n\nIm using Expo 49 (in dropdown there isn't such version :( )","comments":["Hi @skibos, thanks for reporting this. I don't have any app with Appium setup to be able to find a better solution for now. I was able to find this one, but it's quite hacky and shouldn't be used as default in situations like this. However you can check and decide if it's okay for you.\r\n\r\n```jsx\r\n<Marker title=\"SomeTitle\">\r\n  <>\r\n    <YourPinComponent> -> Image in your case\r\n    <Callout tooltip={true}>\r\n      <><\/>\r\n    <\/Callout>\r\n  <\/>\r\n<\/Marker>\r\n```\r\n\r\nCallout inside Marker is disabling marker title and description, and we are using empty Callout so it won't be shown.\r\n\r\nI will try to setup app with Appium and rn-maps to be able to find better solution."],"labels":["bug"]},{"title":"Android custom Markers with children content have sporadic flashing\/glitches (see example video)","body":"### Summary\r\n\r\nBeginning with `react-native-maps` version 1.9.0, map Markers composed of children content (described [in the documentation](https:\/\/github.com\/react-native-maps\/react-native-maps\/blob\/master\/docs\/marker.md) as Children Content) are showing sporadic flashes\/glitching on Android. This does not occur with versions 1.8.4 and below.\r\n\r\nIn this particular case, the Markers are being rendered from an iterable list via `map`, and they are of SVG format.  The particular screen in question is only rendering one time (there are not multiple renders taking place).\r\n\r\nThe newest versions of `react-native-maps` were tried as well, with the same flashing occurring (1.10.0, 1.10.3).\r\n\r\n### Reproducible sample code\r\n\r\n```TSX\r\nimport * as React from 'react';\r\nimport { View } from 'react-native';\r\nimport MapView, { Marker } from 'react-native-maps';\r\nimport PinIcon from 'assets\/icon-pin.svg';\r\n\r\n<MapView>\r\n  {markers.map((marker) => {\r\n    return (\r\n      <Marker\r\n        identifier={`id-${marker.id}`}\r\n        key={`key-id-${marker.id}`}\r\n      >\r\n        <View style={styles.pin}>\r\n          <PinIcon\r\n            fill={color}\r\n            height={imageDimensions}\r\n            width={imageDimensions}\r\n          \/>\r\n        <\/View>\r\n      <\/Marker>\r\n    );\r\n  })}\r\n<\/MapView>\r\n\r\nconst styles = StyleSheet.create({\r\n  pin: {\r\n    backgroundColor: 'rgba(0,0,0,0.1)',\r\n    borderRadius: 13,\r\n    height: 25,\r\n    width: 25,\r\n  },\r\n})\r\n```\r\n\r\n\r\n### Steps to reproduce\r\n\r\nCreate a map, and render a `MapView` which includes Markers with children content rendered from an iterable list.  Observe the flashing\/glitching of the markers.\r\n\r\n### Expected result\r\n\r\nExpect no flashing\/glitches in the Marker content to occur.\r\n\r\n### Actual result\r\n\r\nSee the flashing\/glitches below:\r\n\r\nhttps:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/14365371\/033aeb27-b179-488c-a751-6efe3a2817eb\r\n\r\n\r\n\r\n### React Native Maps Version\r\n\r\n1.9.0\r\n\r\n### What platforms are you seeing the problem on?\r\n\r\nAndroid\r\n\r\n### React Native Version\r\n\r\n0.73.4\r\n\r\n### What version of Expo are you using?\r\n\r\nNot using Expo\r\n\r\n### Device(s)\r\n\r\nSamsung Galaxy S21 (Android 13)\r\n\r\n### Additional information\r\n\r\n_No response_","comments":["Ran into a similar issue, if you remove the image as a child and set it as a prop, this should solve the flickering. Below is just some sudo code of your example, you may have to tweak it for your asset.\r\n\r\n```typescript\r\n<MapView>\r\n  {markers.map((marker) => {\r\n    return (\r\n      <Marker\r\n        identifier={`id-${marker.id}`}\r\n        key={`key-id-${marker.id}`} \r\n        image={PinIcon}\/>\r\n    );\r\n  })}\r\n<\/MapView>\r\n```","The problem is that the trackViewChanges function doesn't work properly.\r\n\r\n```\r\nconst [tracksView, setTracksView] = useState(true); \/\/add \r\n\r\nuseEffect(() => { \/\/add\r\n  if(Platform.OS === 'android'){\r\n    setTimeout(()=>{\r\n      setTracksView(false);\r\n    },100)\r\n  }\r\n},[])\r\n\r\n<MapView>\r\n  {markers.map((marker) => {\r\n    return (\r\n      <Marker\r\n        identifier={`id-${marker.id}`}\r\n        key={`key-id-${marker.id}`}\r\n        tracksViewChanges={tracksView} \/\/add\r\n      >\r\n        <View style={styles.pin}>\r\n          <PinIcon\r\n            fill={color}\r\n            height={imageDimensions}\r\n            width={imageDimensions}\r\n          \/>\r\n        <\/View>\r\n      <\/Marker>\r\n    );\r\n  })}\r\n<\/MapView>\r\n```","try to custom marker and set trackView to false\r\n```js\r\nimport React, { ReactNode, useEffect, useState } from 'react';\r\nimport { StyleProp, ViewStyle } from 'react-native';\r\nimport { Marker, MarkerAnimated, MapMarkerProps } from 'react-native-maps';\r\n\r\ninterface Props extends MapMarkerProps {\r\n  animate?: boolean;\r\n  children: ReactNode;\r\n  renderChangeTime?: number;\r\n  style?: StyleProp<ViewStyle>;\r\n}\r\nexport default function OptimizedMarker({\r\n  animate = false,\r\n  children,\r\n  renderChangeTime = 2000,\r\n  ...props\r\n}: Props) {\r\n  const [tracksViewChanges, setViewChanges] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let timerId:NodeJS.Timeout\r\n\r\n    if (tracksViewChanges) {\r\n      timerId = setTimeout(() => {\r\n        setViewChanges(false);\r\n      }, renderChangeTime);\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(timerId);\r\n    };\r\n  }, []);\r\n\r\n  if (animate) {\r\n    return (\r\n      <MarkerAnimated {...props} tracksViewChanges={tracksViewChanges}>\r\n        {children}\r\n      <\/MarkerAnimated>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Marker tracksViewChanges={tracksViewChanges} {...props}>\r\n      {children}\r\n    <\/Marker>\r\n  );\r\n}\r\n```\r\nand try use png instead of svg \r\n\r\n","The issue ocurss when updated to 1.10.3 and the same behavior on 1.11.3 trackViewChanges on false doesn't solve the problem for me. ","> The issue ocurss when updated to 1.10.3 and the same behavior on 1.11.3 trackViewChanges on false doesn't solve the problem for me.\r\n\r\nIn my case trackViewChanges on false solves the issue temporarily but instead stops the Marker to render when entering the app after closing. So now the custom marker performance is either flickering or not render at all"],"labels":["bug"]},{"title":"My map reset to user location","body":"### Summary\n\nHello, i am working on map where i have some pins, and when i click on pins it open bottomsheet. Problem is, that when i click on any marker it reset position, or when i close bottomsheet that has nothing to do with map it reset again on user location. My code is long and in many components so i cant show you everythig but i will show u how Map and Marker works\n\n### Reproducible sample code\n\n```TSX\n<MapView \r\n          showsPointsOfInterest={false} \r\n          ref={mapRef} \r\n          showsUserLocation\r\n          followsUserLocation={true} \r\n          containerHeight={'50%'} \r\n          style={{flex: 1}} \r\n          showsTraffic\r\n          initialRegion={initialRegion}>\r\n\r\n          {waypointLocation ? <DestinationMarkDirection\/> : null}\r\n\r\n          <EventLocationGenerator events={events}\/>\r\n\r\n          {\/* Map legend show all icons like gas stations, shop etc *\/}\r\n          <MapLegend spots={spots}\/> \r\n        <\/MapView>\r\n  )\r\n\r\n\r\n    return (\r\n        spots.map((res, index) =>  { \r\n            const cords = {latitude: res.address.latitude, longitude: res.address.longitude}\r\n            return ( \r\n            <Marker\r\n                onPress={() => handleMarkClick(res._id)}\r\n                key={index}\r\n                coordinate={cords} >\r\n                <SpotsMarkers data={res}\/>\r\n            <\/Marker>\r\n            )\r\n        })\r\n    );\r\n}\r\n\r\n\r\n  return (\r\n    <View style={{flex: 1}}>\r\n      <Map_BuilderDataContext.Provider value={{ setLegendId, newWaypoint, initialRegion }}>\r\n\r\n        {\/* Her eis map *\/}\r\n        {events && spots ? <MapIsReady\/> : <ConnectingToMaps\/>}\r\n\r\n        {\/* <BottomScheet\/> *\/}\r\n        <MyBottomSheet isOpen={isOpen} onClose={() => setIsOpen(false)}>\r\n            <MapLegendDetails legendData={legendData} \/>\r\n        <\/MyBottomSheet>\r\n\r\n\r\n      <\/Map_BuilderDataContext.Provider>\r\n    <\/View>\r\n  )\r\n}\n```\n\n\n### Steps to reproduce\n\n.\n\n### Expected result\n\nI was expecting to not reset to my position all the time\n\n### Actual result\n\nDescription\n\n### React Native Maps Version\n\n1.7.1\n\n### What platforms are you seeing the problem on?\n\nAndroid, iOS (Apple Maps)\n\n### React Native Version\n\n0.72.6\n\n### What version of Expo are you using?\n\nSDK 48\n\n### Device(s)\n\niphone 14 128gb iphone x and some redmi \n\n### Additional information\n\n_No response_","comments":["HI @DETLIXX, thanks for reporting this. Can you try to reproduce it with minimum amount of code? If you have it inside context and passing and you are passing props to map component I can't reproduce it on my environment. From the first look I would say that there might be too many re-renders which are causing this bug. But I wouldn't say it's a library bug. The best way to debug this is creating new screen with map, bottom sheet and mocked data for region and markers and see if it works fine. If it does you can add more functionalities from your map component and at some point you will find out what's wrong.","change `followsUserLocation={true} ` to `followsUserLocation={false} `"],"labels":["bug"]},{"title":"Still using legacy after enableLatestRenderer","body":"### Summary\n\nIn my App.tsx i run\r\n\r\nenableLatestRenderer(); \r\n\r\nBut i still get 'LEGACY' returned in the Android.  My simulator \r\n\r\nI do not use any other Services that use a lower version of Google Maps. \r\n\r\n`if (Platform.OS === 'ios') {\r\n  enableLatestRenderer();\r\n} else {\r\n  enableLatestRenderer().then(res => console.log(res));\r\n}`\r\n\r\nI also tried including specific implementations with successful build: \r\n\r\n`\r\nimplementation(\"com.google.android.gms:play-services-maps:18.2.0\")\r\nimplementation(\"com.google.android.gms:play-services-location:21.1.0\")\r\n`\r\n\r\nI do not know if this is a bug or if I am doing something wrong in my setup. I followed the steps on the Installation guide. \r\n\r\nHope someone can help me fix this issue. \r\nThanks in advance.\n\n### Reproducible sample code\n\n```TSX\n<MapView\r\n        provider={PROVIDER_GOOGLE}\r\n        style={[styles.map]}\r\n        ref={mapRef}\r\n        onPress={onMapClick}\r\n        customMapStyle={mapStyles}\r\n        showsUserLocation\r\n        showsMyLocationButton={false}\r\n        showsCompass={false}\r\n        initialRegion={location}\r\n        onRegionChange={handleOnRegionChange}\r\n        onRegionChangeComplete={handleOnRegionComplete}>\r\n        {children}\r\n      <\/MapView>\n```\n\n\n### Steps to reproduce\n\n`if (Platform.OS === 'ios') {\r\n  enableLatestRenderer();\r\n} else {\r\n  enableLatestRenderer().then(res => console.log(res));\r\n}`\r\n\n\n### Expected result\n\nthat the promise return 'LATEST' \n\n### Actual result\n\npromise returns 'LEGACY'\n\n### React Native Maps Version\n\n^1.10.3\n\n### What platforms are you seeing the problem on?\n\nAndroid, iOS (Google Maps)\n\n### React Native Version\n\n0.72.7\n\n### What version of Expo are you using?\n\nNot using Expo\n\n### Device(s)\n\nAndroid 13.0 (\"Tiramisu\" Api level 33\n\n### Additional information\n\n_No response_","comments":["I got the same issue (but using Expo SDK 50), after updating the Google Play Service in my android emulator it suddenly got changed to \"LATEST\"\r\n\r\nMaybe this could help? \r\n\r\nUpdating Google Play Service: \r\n- In the emulator press the 3 dots on the side of the emulator\r\n- Choose Google Play\r\n- Press the button [Update]","Thanks for this solution @gijsjager. On my phone and emulators it all works fine so renderer is always \"LATEST\" but this may be helpful with old issue with black streets on emulators."],"labels":["bug"]},{"title":"App force close when GPS is disabled from the notification drawer.","body":"### Summary\n\nIn Android version 10, When user using the location services and disabled the location from drawer. App got crash. We tried to debug it on Android studio cat log but didn't able to find any way to fix it in our react native project.\n\n### Reproducible sample code\n\n```TSX\n\"react-native-maps\": \"^1.10.3\",\n```\n\n\n### Steps to reproduce\n\nDisable the locaiton from drawer. Try on and off\n\n### Expected result\n\nApp should not crash\n\n### Actual result\n\nGot Crash\n\n### React Native Maps Version\n\n1.10.3\n\n### What platforms are you seeing the problem on?\n\nAndroid\n\n### React Native Version\n\n0.72.4\n\n### What version of Expo are you using?\n\nNot using Expo\n\n### Device(s)\n\nrealme 3i\n\n### Additional information\n\nFATAL EXCEPTION: mqt_native_modules\r\nProcess: com.enviro, PID: 8697\r\n java.lang.AbstractMethodError: abstract method \"void android.location.LocationListener.onProviderDisabled(java.lang.String)\"\r\n                                                                                                        at android.location.LocationManager$ListenerTransport._handleMessage(LocationManager.java:365)\r\n                                                                                                        at android.location.LocationManager$ListenerTransport.access$000(LocationManager.java:275)\r\n                                                                                                        at android.location.LocationManager$ListenerTransport$1.handleMessage(LocationManager.java:291)\r\n                                                                                                        at android.os.Handler.dispatchMessage(Handler.java:107)\r\n                                                                                                        at android.os.Looper.loop(Looper.java:227)\r\n                                                                                                        at com.facebook.react.bridge.queue.MessageQueueThreadImpl$4.run(MessageQueueThreadImpl.java:228)\r\n                                                                                                        at java.lang.Thread.run(Thread.java:919)\r\n\r\n\r\n<img width=\"1375\" alt=\"Screenshot 2024-02-23 at 4 03 01\u202fPM\" src=\"https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/12099495\/b5d3ea08-8e26-45b2-ab2c-fa28df260daa\">\r\n","comments":["Hi @sourabhsharmait thanks for reporting this bug. Can you provide any reproducible sample? I mean the mapView component and the component in which it is used.\r\nI have tried to reproduce it in android simulator with Android 10, but it works fine. Maybe it is happening only on devices but I don't have any with Android 10 right now. \r\n","In our code, we are using only geolocation library. I dont know why its showing the name of this library folder while trying to debugging in Android Studio.\r\n\r\nThe screenshot above is also share from android studio logs. I guess map library might be internally interconnected with Geo location. For more clarity on this issue, I am sharing below code related to fetching current location. This got crash only when user tried to disable the location form notification drawer.\r\n\r\nimport Geolocation from '@react-native-community\/geolocation';\r\n\r\n\r\n  useEffect(() => {\r\n    getCurrentLocation();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    \/\/ getCurrentLocation();\r\n    const handleAppStateChange = (nextAppState) => {\r\n      console.log('nextAppState', nextAppState);\r\n      if (appState.match(\/inactive|background\/) && nextAppState === 'active') {\r\n        getCurrentLocation();\r\n      }\r\n      setAppState(nextAppState);\r\n\r\n    };\r\n\r\n    const appStateSubscription = AppState.addEventListener('change', handleAppStateChange);\r\n\r\n    return () => {\r\n      appStateSubscription.remove();\r\n    };\r\n  }, [appState]);\r\n\r\n\r\n const getCurrentLocation = async () => {\r\n    try {\r\n      const result = await Promise.race([\r\n        request(\r\n          Platform.OS === \"ios\" ? PERMISSIONS.IOS.LOCATION_WHEN_IN_USE : PERMISSIONS.ANDROID.ACCESS_FINE_LOCATION\r\n        ),\r\n        new Promise((_, reject) => setTimeout(() => reject('Location request timed out'), 7000)),\r\n      ]);\r\n\r\n      setPermissionStatus(result);\r\n      onLocationChange(null);\r\n      if (result === RESULTS.GRANTED) {\r\n        Geolocation.getCurrentPosition(\r\n          (position) => {\r\n            const { latitude, longitude } = position.coords;\r\n            onLocationChange({ latitude, longitude, permissionStatus });\r\n            setRetryCount(0); \/\/ Reset retry count on successful location retrieval\r\n          },\r\n          (error) => {\r\n            onLocationChange(\"location_faild\");\r\n            \/\/ if (error?.message == 'No location provider available.') {\r\n            \/\/   Alert.alert('GPS Disabled',\r\n            \/\/     'To use this app, please enable GPS (location services) on your device. ' +\r\n            \/\/     'You can enable it in your device settings.', [\r\n            \/\/     { text: AppString.OK, style: 'cancel', onPress: () => navigation.goBack() },\r\n            \/\/   ]);\r\n            \/\/   return;\r\n            \/\/ }\r\n            \/\/ if (retryCount < getMaxRetries) {\r\n            \/\/   setRetryCount(retryCount + 1);\r\n            \/\/   setTimeout(getCurrentLocation, 1000); \/\/ Retry Fetch Location here\r\n            \/\/ } else {\r\n            \/\/   onLocationChange(\"Failed\");\r\n            \/\/   console.log(\"Failed to retrieve location\");\r\n            \/\/ }\r\n          },\r\n          { timeout: 60000, enableHighAccuracy: false } \/\/ Added enableHighAccuracy: false\r\n        );\r\n      } else if (result === RESULTS.DENIED) {\r\n        onLocationChange('location_faild');\r\n        alertPopup();\r\n      } else if (result === RESULTS.BLOCKED) {\r\n        onLocationChange('location_faild');\r\n        alertPopup();\r\n      } else if (result == RESULTS.UNAVAILABLE) {\r\n        onLocationChange('location_faild');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      onLocationChange(null);\r\n    }\r\n  };\r\n","Thanks for the code @sourabhsharmait. I think that you should report this bug here https:\/\/github.com\/michalchudziak\/react-native-geolocation. Because even if I reproduce the bug I wouldn't be able to help you since I don't know geolocation source code. \r\nBoth libraries may use the same native location services but I can't see any usage of rn-maps in geolocation library.","Ok @mateki0 I will report this bug on geolocation library. Thanks for the guidance."],"labels":["bug"]},{"title":"IOS Crash when MapView is inside FlatList Header","body":"### Summary\n\nWhen using React Native Maps (react-native-maps) as the header of a FlatList on iOS, the application crashes.\n\n### Reproducible sample code\n\n```TSX\nconst MyComponent = () => {\r\n  const data = [...]; \/\/ Your FlatList data\r\n\r\n  return (\r\n    <FlatList\r\n      data={data}\r\n      keyExtractor={(item) => item.id.toString()}\r\n      ListHeaderComponent={() => (\r\n        <MapView\r\n          style={{ height: 200 }}\r\n          initialRegion={{\r\n            latitude: 37.78825,\r\n            longitude: -122.4324,\r\n            latitudeDelta: 0.0922,\r\n            longitudeDelta: 0.0421,\r\n          }}\r\n        >\r\n          <Marker\r\n            coordinate={{ latitude: 37.78825, longitude: -122.4324 }}\r\n            title=\"Marker Title\"\r\n            description=\"Marker Description\"\r\n          \/>\r\n        <\/MapView>\r\n      )}\r\n      renderItem={({ item }) => (\r\n        <View>\r\n          <Text>{item.name}<\/Text>\r\n          {\/* Other item content *\/}\r\n        <\/View>\r\n      )}\r\n    \/>\r\n  );\r\n};\n```\n\n\n### Steps to reproduce\n\nnstall the react-native-maps library.\r\nCreate a FlatList with a MapView component as its header.\r\nRun the application on an iOS device or simulator.\r\nScroll through the FlatList.\n\n### Expected result\n\nto work!!!\n\n### Actual result\n\n\r\n<img width=\"388\" alt=\"Screenshot 2024-02-23 alle 02 55 28\" src=\"https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/41541220\/72803983-8eb5-44b8-a358-808a91b39dc7\">\r\n\r\n\n\n### React Native Maps Version\n\n1.10.3\n\n### What platforms are you seeing the problem on?\n\niOS (Google Maps)\n\n### React Native Version\n\n0.71.14\n\n### What version of Expo are you using?\n\nSDK 48\n\n### Device(s)\n\niPhone 14\n\n### Additional information\n\n_No response_","comments":["Hi @NiccoloCase, thanks for reporting this but I'm not able to reproduce the crash. Can you try it in bare expo project? I tried to reproduce it on two different react-native and maps versions and in both cases it works fine. Please try to use this command and let me know if it work there. It will help us identify what's wrong. And on which version of iOS system did you encounter it?\r\n\r\n```\r\nnpx create-expo-app -t blank@48\r\n```\r\n\r\nOther than that, here is the issue with the same error and from what I see it was connected with reanimated library.\r\nhttps:\/\/github.com\/react-native-maps\/react-native-maps\/issues\/3983#issuecomment-1405302781"],"labels":["bug"]},{"title":"Polygons always rendering behind UrlTile if caching enabled afterwards","body":"### Summary\r\n\r\nToggling a polygon works fine either if caching is enabled or disabled from the start. But if caching is toggled on\/off after first render, polygons will always be rendered behind the UrlTile.\r\n\r\n\r\nhttps:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/4339443\/781ddb3d-a5e1-4441-9e7b-a0bb50cfa7cf\r\n\r\n\r\n\r\n### Reproducible sample code\r\n\r\n```TSX\r\nA complete reproducible example can be found in this branch: https:\/\/github.com\/draperunner\/react-native-maps\/tree\/urltile-polygon-bug-repro\r\n```\r\n\r\n\r\n### Steps to reproduce\r\n\r\nStart the example app from this repro branch: A complete reproducible example can be found in this branch: https:\/\/github.com\/draperunner\/react-native-maps\/tree\/urltile-polygon-bug-repro\r\n\r\nSee that toggling the polygon is fine, but not after enabling\/disabling the cache.\r\n\r\n### Expected result\r\n\r\nI would expect the polygons to appear on top of the UrlTile, just like they do if caching is never toggled.\r\n\r\n### Actual result\r\n\r\nPolygons appear below the UrlTile if caching of the UrlTile is enabled after the initial render.\r\n\r\n### React Native Maps Version\r\n\r\n1.10.3\r\n\r\n### What platforms are you seeing the problem on?\r\n\r\niOS (Apple Maps)\r\n\r\n### React Native Version\r\n\r\n0.73.0\r\n\r\n### What version of Expo are you using?\r\n\r\nNot using Expo\r\n\r\n### Device(s)\r\n\r\niPhone 15\r\n\r\n### Additional information\r\n\r\nA workaround seems to be to set a new `key`\u00a0on `<UrlTile>` whenever caching is toggled (whenever `tileCachePath` is changed).","comments":[],"labels":["bug"]},{"title":"build(deps): bump ip from 1.1.8 to 1.1.9 in \/example","body":"Bumps [ip](https:\/\/github.com\/indutny\/node-ip) from 1.1.8 to 1.1.9.\n<details>\n<summary>Commits<\/summary>\n<ul>\n<li><a href=\"https:\/\/github.com\/indutny\/node-ip\/commit\/1ecbf2fd8c0cc85e44c3b587d2de641f50dc0217\"><code>1ecbf2f<\/code><\/a> 1.1.9<\/li>\n<li><a href=\"https:\/\/github.com\/indutny\/node-ip\/commit\/6a3ada9b471b09d5f0f5be264911ab564bf67894\"><code>6a3ada9<\/code><\/a> lib: fixed CVE-2023-42282 and added unit test<\/li>\n<li>See full diff in <a href=\"https:\/\/github.com\/indutny\/node-ip\/compare\/v1.1.8...v1.1.9\">compare view<\/a><\/li>\n<\/ul>\n<\/details>\n<br \/>\n\n\n[![Dependabot compatibility score](https:\/\/dependabot-badges.githubapp.com\/badges\/compatibility_score?dependency-name=ip&package-manager=npm_and_yarn&previous-version=1.1.8&new-version=1.1.9)](https:\/\/docs.github.com\/en\/github\/managing-security-vulnerabilities\/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[\/\/]: # (dependabot-automerge-start)\n[\/\/]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options<\/summary>\n<br \/>\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https:\/\/github.com\/react-native-maps\/react-native-maps\/network\/alerts).\n\n<\/details>","comments":[],"labels":["dependencies","javascript"]},{"title":"Fatal Exception: java.lang.NullPointerException: Listener must not be null","body":"### Summary\r\n\r\n```\r\nFatal Exception: java.lang.NullPointerException: Listener must not be null\r\n       at com.google.android.gms.common.internal.Preconditions.checkNotNull(Preconditions.java:9)\r\n       at com.google.android.gms.common.api.internal.ListenerHolders.createListenerKey(ListenerHolders.java:2)\r\n       at com.google.android.gms.location.FusedLocationProviderClient.removeLocationUpdates(FusedLocationProviderClient.java:6)\r\n       at com.rnmaps.maps.FusedLocationSource.deactivate(FusedLocationSource.java:4)\r\n       at com.google.android.gms.maps.zzs.deactivate(zzs.java:2)\r\n       at com.google.android.gms.maps.internal.zzj.zza(zzj.java:8)\r\n       at com.google.android.gms.internal.maps.zzb.onTransact(zzb.java:20)\r\n       at android.os.Binder.transact(Binder.java:1064)\r\n       at com.google.android.gms.maps.internal.ILocationSourceDelegate$Stub$Proxy.deactivate(ILocationSourceDelegate.java:121)\r\n       at org.microg.gms.maps.mapbox.SourceLocationEngine.removeLocationUpdates(SourceLocationEngine.kt:41)\r\n       at org.microg.gms.maps.mapbox.GoogleMapImpl.updateLocationEngineListener(GoogleMap.kt:423)\r\n       at org.microg.gms.maps.mapbox.GoogleMapImpl.setLocationSource(GoogleMap.kt:436)\r\n       at com.google.android.gms.maps.internal.IGoogleMapDelegate$Stub.onTransact(IGoogleMapDelegate.java:474)\r\n       at org.microg.gms.maps.mapbox.GoogleMapImpl.onTransact(GoogleMap.kt:871)\r\n       at android.os.Binder.transact(Binder.java:1064)\r\n       at com.google.android.gms.internal.maps.zza.zzc(zza.java:7)\r\n       at com.google.android.gms.maps.internal.zzg.setLocationSource(zzg.java:9)\r\n       at com.google.android.gms.maps.GoogleMap.setLocationSource(GoogleMap.java:16)\r\n       at com.rnmaps.maps.MapView$15.onHostResume(MapView.java:29)\r\n       at com.facebook.react.bridge.ReactContext$1.run(:17)\r\n       at android.os.Handler.handleCallback(Handler.java:938)\r\n       at android.os.Handler.dispatchMessage(Handler.java:99)\r\n       at com.facebook.react.bridge.queue.MessageQueueThreadHandler.dispatchMessage()\r\n       at android.os.Looper.loopOnce(Looper.java:201)\r\n       at android.os.Looper.loop(Looper.java:288)\r\n       at android.app.ActivityThread.main(ActivityThread.java:7870)\r\n       at java.lang.reflect.Method.invoke(Method.java)\r\n       at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:548)\r\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1003)\r\n```\r\n### Reproducible sample code\r\n\r\n```TSX\r\n<MapView\r\n  initialRegion={{\r\n    latitude: 37.78825,\r\n    longitude: -122.4324,\r\n    latitudeDelta: 0.0922,\r\n    longitudeDelta: 0.0421,\r\n  }}\r\n\/>\r\n```\r\n\r\n\r\n### Steps to reproduce\r\n\r\nOn start\r\n\r\n### Expected result\r\n\r\nno crash\r\n\r\n### Actual result\r\n\r\ncrash\r\n\r\n### React Native Maps Version\r\n\r\n1.1.0\r\n\r\n### What platforms are you seeing the problem on?\r\n\r\nAndroid\r\n\r\n### React Native Version\r\n\r\n0.73.3\r\n\r\n### What version of Expo are you using?\r\n\r\nNot using Expo\r\n\r\n### Device(s)\r\n\r\nVolla Phone Android 12\r\n\r\n### Additional information\r\n\r\n_No response_","comments":["Hi @Willham12 thanks for reporting this problem. I can't reproduce it, maybe it's the case of your phone and it's OS but I don't have access to this or similar device. Can you try to update react-native-maps to the newest version and check if it helps?"],"labels":["bug"]},{"title":"build(deps): bump ip from 1.1.8 to 1.1.9","body":"Bumps [ip](https:\/\/github.com\/indutny\/node-ip) from 1.1.8 to 1.1.9.\n<details>\n<summary>Commits<\/summary>\n<ul>\n<li><a href=\"https:\/\/github.com\/indutny\/node-ip\/commit\/1ecbf2fd8c0cc85e44c3b587d2de641f50dc0217\"><code>1ecbf2f<\/code><\/a> 1.1.9<\/li>\n<li><a href=\"https:\/\/github.com\/indutny\/node-ip\/commit\/6a3ada9b471b09d5f0f5be264911ab564bf67894\"><code>6a3ada9<\/code><\/a> lib: fixed CVE-2023-42282 and added unit test<\/li>\n<li>See full diff in <a href=\"https:\/\/github.com\/indutny\/node-ip\/compare\/v1.1.8...v1.1.9\">compare view<\/a><\/li>\n<\/ul>\n<\/details>\n<br \/>\n\n\n[![Dependabot compatibility score](https:\/\/dependabot-badges.githubapp.com\/badges\/compatibility_score?dependency-name=ip&package-manager=npm_and_yarn&previous-version=1.1.8&new-version=1.1.9)](https:\/\/docs.github.com\/en\/github\/managing-security-vulnerabilities\/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[\/\/]: # (dependabot-automerge-start)\n[\/\/]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options<\/summary>\n<br \/>\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https:\/\/github.com\/react-native-maps\/react-native-maps\/network\/alerts).\n\n<\/details>","comments":[],"labels":["dependencies","javascript"]},{"title":"When rerendering many custom polygons with colors and edges, the app freezes the animations on the map","body":"### Summary\n\nWell, I'm sometimes working on rerendering many polygons, markers and titles on top of these polygons, but I find that the more I try to rerender on screen, the animations and zooming on the map work a lot.\r\n\n\n### Reproducible sample code\n\n```TSX\nexport function Maps = ({\r\n  navigation,\r\n  isFocused,\r\n  app,\r\n  user,\r\n  partner,\r\n  farm,\r\n  presets,\r\n  fields,\r\n  field,\r\n  mapRegion,\r\n  registries,\r\n  loading,\r\n  idUser,\r\n  idFarm,\r\n  tracksViewChanges,\r\n  requestMon,\r\n  requestSync,\r\n  setField,\r\n}) => {\r\n\r\nconst renderTargets = () => {\r\n    const {registries} = this.props;\r\n    return registries\r\n      .filter(item => isToday(new Date(item.dateCollect)))\r\n      .map((item, i) => {\r\n        const {latitude, longitude} = item;\r\n        if (latitude !== null && longitude !== null) {\r\n          return (\r\n            <Marker\r\n              tracksViewChanges={false}\r\n              key={`${item.idMd5}`}\r\n              coordinate={{\r\n                latitude: parseFloat(latitude),\r\n                longitude: parseFloat(longitude),\r\n              }}\r\n              zIndex={item.sync ? 10 : 15}>\r\n              <MyLocation\r\n                width={15}\r\n                height={15}\r\n                fill={item.sync ? 'rgba(0, 255, 132, 1)' : colors.white}\r\n              \/>\r\n              <Callout style={{width: 100}}>\r\n                <Text style={{fontWeight: 'bold', fontSize: 16}}>\r\n                  Registro:\r\n                <\/Text>\r\n                {item.targets.map(tar =>\r\n                  tar.stages.map(stg => (\r\n                    <Text style={{fontSize: 14}} key={stg.idMd5}>\r\n                      {'\u2022'} {stg.value} {stg.stage}\r\n                    <\/Text>\r\n                  )),\r\n                )}\r\n              <\/Callout>\r\n            <\/Marker>\r\n          );\r\n        }\r\n        return <View key={`${item.idMd5}`} \/>;\r\n      });\r\n  };\r\n\r\nconst renderFields = () => {\r\n    const {field, fields, setField} = this.props;\r\n    return fields.map(item => {\r\n      if (item && item.perimeter) {\r\n        return (\r\n          <Polygon\r\n            key={item.id_field}\r\n            tappable\r\n            onPress={() => {\r\n              setField(item);\r\n            }}\r\n            coordinates={item.perimeter}\r\n            strokeWidth={\r\n              field !== null && field.id_field === item.id_field ? 1.1 : 1\r\n            }\r\n            strokeColor={\r\n              field !== null && field.id_field === item.id_field\r\n                ? colors.highLight\r\n                : colors.primary\r\n            }\r\n            fillColor={\r\n              field !== null && field.id_field === item.id_field\r\n                ? colors.pressedField\r\n                : colors.field\r\n            }\r\n            zIndex={-1}\r\n          \/>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n const renderFieldTitles = () => {\r\n    const {fields, setField} = this.props;\r\n\r\n    return fields.map((item, index) => {\r\n      if (item && item.perimeter) {\r\n        return (\r\n          <Marker\r\n            tracksViewChanges={false}\r\n            key={`title-${item.id_field}-${item.name_field}`}\r\n            coordinate={item.centroid}\r\n            style={{alignItems: 'center', justifyContent: 'center'}}\r\n            onPress={() => {\r\n              setField(item);\r\n            }}>\r\n            <FieldName>{item.name_field}<\/FieldName>\r\n          <\/Marker>\r\n        );\r\n      }\r\n      return <><\/>;\r\n    });\r\n  };\r\n\r\n\r\n  return(\r\n  <SafeAreaView\r\n        style={{\r\n          flex: 1,\r\n          alignItems: 'center',\r\n          backgroundColor: colors.primary,\r\n        }}>\r\n        <MapView\r\n          style={{width, height}}\r\n          provider={PROVIDER_GOOGLE}\r\n          ref={this.getMapRef}\r\n          initialRegion={mapRegion}\r\n          rotateEnabled={false}\r\n          onMapReady={this.onMapReady}\r\n          toolbarEnabled={false}\r\n          mapType=\"satellite\"\r\n          disableDefaultUI=\"true\"\r\n          showsUserLocation\r\n          showsMyLocationButton={false}\r\n          moveOnMarkerPress={false}>\r\n          {!isObjEmpty(farm) && !isObjEmpty(fields) && this.renderFields()}\r\n          {!isObjEmpty(farm) &&\r\n            !isObjEmpty(fields) &&\r\n            showFieldsTitle &&\r\n            this.renderFieldTitles()}\r\n\r\n          {!isObjEmpty(farm) && !isObjEmpty(registries) && (\r\n            <RenderTargets\r\n              {...{\r\n                registries,\r\n                tracksViewChanges,\r\n                farm,\r\n              }}\r\n            \/>\r\n          )}\r\n        <\/MapView>\r\n        <Menu\r\n          navigate={navigate}\r\n          stateMapCamera={shouldIAnimate}\r\n          mapCamera={this.mapCamera}\r\n          userLocation={this.animateToUser}\r\n          farmLocation={this.navigateToFarm}\r\n          registryFunc={this.goToRegistry}\r\n          syncFunc={requestSync}\r\n          listFunc={() => {\r\n            if (!loading) {\r\n              navigate('list');\r\n            }\r\n          }}\r\n        \/>\r\n      <\/SafeAreaView>\r\n  )\r\n}\n```\n\n\n### Steps to reproduce\n\nTo reproduce my error, just have a very large array with around 600-700 fields and within them have around 5-25 points to be marked on the map\r\n\n\n### Expected result\n\nthe result I expected was no crashes during zooming or animations within the map taking into account that I need to re-render several points on the screen\r\n\n\n### Actual result\n\nThe current result is when I have a high number of polygons on the screen, the issue of animation and zooming of the map stops a lot, and when I have few, this does not happen\r\n\n\n### React Native Maps Version\n\n1.8.0\n\n### What platforms are you seeing the problem on?\n\nAndroid, iOS (Google Maps)\n\n### React Native Version\n\n0.72.6\n\n### What version of Expo are you using?\n\nNot using Expo\n\n### Device(s)\n\nPixel 2(Android 10)\n\n### Additional information\n\n![image](https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/47609014\/a9f76b17-0cf2-4e30-9aae-b0480f9944e3)\r\n","comments":[],"labels":["bug"]},{"title":"provider={PROVIDER_GOOGLE} doesn't allow onSelect and onDeselect on iOS","body":"### Summary\n\nWhen using provider `google`, the Marker props onSelect and onDeselect do not work on iOS (which supposedly does work). This should either be fixed or specified in the docs that it doesn't for this case.\n\n### Reproducible sample code\n\n```TSX\nimport React from 'react'\r\nimport { Text } from 'react-native'\r\nimport MapView, { Marker, Callout, PROVIDER_GOOGLE } from 'react-native-maps'\r\n\r\n<MapView\r\n  provider={PROVIDER_GOOGLE}\r\n  customMapStyle={MapStyle}\r\n>\r\n  <Marker coordinate={someCoordinate}\r\n    onSelect={() => console.log('onSelect called')}\r\n    onDeselect={() => console.log('onDeselect called')}\r\n  >\r\n    <Callout>\r\n      <Text>Hola<\/Text>\r\n    <\/Callout>\r\n  <\/Marker>\r\n<\/MapView>\n```\n\n\n### Steps to reproduce\n\n1. Find the marker on the map.\r\n2. Press the marker.\r\n3. Check that there is **no** log `onSelect called`.\r\n4. Press anywhere else in the map.\r\n5. Check that there is **no** log `onDeselect called`.\n\n### Expected result\n\nonSelect and onDeselect should work.\n\n### Actual result\n\nonSelect and onDeselect do not work.\n\n### React Native Maps Version\n\n1.10.1\n\n### What platforms are you seeing the problem on?\n\niOS (Google Maps)\n\n### React Native Version\n\n0.70.9\n\n### What version of Expo are you using?\n\nNot using Expo\n\n### Device(s)\n\niPhone 14 Pro simulator\n\n### Additional information\n\n_No response_","comments":["Hi, the onSelect and onDeselect props are not supported on Google Maps. I'll update the readme accordingly. Thanks for reporting!","@jan-kozinski I will merge your pull request to update the docs, but do you want to create a pull request for implementing marker select \/ deselect functionality on google maps ? \r\nsee this from chatgpt:\r\n\r\n> \r\n> Detecting marker selection and deselection in the Google Maps SDK for both iOS and Android involves different approaches tailored to each platform. Below, I'll outline how to implement these functionalities for both environments.\r\n> \r\n> ### For iOS (Google Maps SDK for iOS)\r\n> \r\n> In Google Maps SDK for iOS, you can detect marker selection (tap) and deselection by implementing the `GMSMapViewDelegate` methods. Specifically, you'll use `mapView:didTapMarker:` to detect when a marker is tapped (selected) and potentially `mapView:didTapAtCoordinate:` to manage deselection, since there isn't a direct method for detecting marker deselection.\r\n> \r\n> 1. **Detect Marker Selection:**\r\n>    Implement the `mapView:didTapMarker:` delegate method. This method is called when a marker on the map is tapped.\r\n> \r\n>    ```swift\r\n>    func mapView(_ mapView: GMSMapView, didTap marker: GMSMarker) -> Bool {\r\n>        \/\/ Marker was tapped, implement your logic here\r\n>        return false \/\/ Return true to prevent the map from further processing the tap (like showing the info window)\r\n>    }\r\n>    ```\r\n> \r\n> 2. **Detect Marker Deselection:**\r\n>    Since there's no direct method for marker deselection, one common approach is to detect a tap on the map that's not on a marker. Implement the `mapView:didTapAtCoordinate:` method for this purpose.\r\n> \r\n>    ```swift\r\n>    func mapView(_ mapView: GMSMapView, didTapAt coordinate: CLLocationCoordinate2D) {\r\n>        \/\/ A tap occurred on the map (not on a marker), implement your deselection logic here\r\n>    }\r\n>    ```\r\n> \r\n>    Remember to set your map view's delegate to the class where you implement these methods:\r\n>    ```swift\r\n>    mapView.delegate = self\r\n>    ```\r\n> \r\n> ### For Android (Google Maps API for Android)\r\n> \r\n> In the Google Maps API for Android, you can use the `OnMarkerClickListener` and `OnMapClickListener` interfaces to detect marker selection and deselection.\r\n> \r\n> 1. **Detect Marker Selection:**\r\n>    Implement `OnMarkerClickListener` and set it on your `GoogleMap` object. The `onMarkerClick` method will be called when a marker is clicked.\r\n> \r\n>    ```java\r\n>    googleMap.setOnMarkerClickListener(new GoogleMap.OnMarkerClickListener() {\r\n>        @Override\r\n>        public boolean onMarkerClick(Marker marker) {\r\n>            \/\/ Marker was clicked, implement your logic here\r\n>            return false; \/\/ Return true to indicate that you have consumed the event (i.e., you don't want the default behavior like showing the info window)\r\n>        }\r\n>    });\r\n>    ```\r\n> \r\n> 2. **Detect Marker Deselection:**\r\n>    Implement `OnMapClickListener` to detect taps on the map. This can be used to handle deselection.\r\n> \r\n>    ```java\r\n>    googleMap.setOnMapClickListener(new GoogleMap.OnMapClickListener() {\r\n>        @Override\r\n>        public void onMapClick(LatLng latLng) {\r\n>            \/\/ The map was clicked, implement your deselection logic here\r\n>        }\r\n>    });\r\n>    ```\r\n> \r\n> In both iOS and Android, the general idea is to leverage the map and marker listeners provided by the SDK to implement custom behavior for marker selection and deselection. Adjust the logic inside these listener methods according to your app's requirements.","yeah I surely do wanna look into that, I just didn't want to leave the docs missleading until I figure it out"],"labels":["bug"]},{"title":"Poor performance on Android when markers are added incrementally.","body":"### Summary\n\nWhen using custom markers on Android each time you add a new marker a new `ViewChangesTracker` run loop is started. Each loop re-draws every marker to a Bitmap so you end up with an exponential drop in performance.\r\n\r\nFor example with 20 markers the library is running a 20 loops each rendering every marker to a canvas, resulting in 400 Bitmap renders every 40ms.\r\n\r\nIf you run the sample code below with the performance monitor visible you can watch the FPS drop from 120 down to 10 by the time you get to about 16 markers.\n\n### Reproducible sample code\n\n```TSX\nimport { Button, StyleSheet, Text } from 'react-native';\r\nimport MapView, { MapMarker } from 'react-native-maps';\r\nimport { useState } from 'react';\r\nimport { range } from 'lodash';\r\n\r\nexport const MapPerformance = () => {\r\n    const [count, setCount] = useState(0);\r\n\r\n    return (\r\n        <>\r\n            <Button onPress={() => setCount(count + 1)} title={`${count} Markers`} \/>\r\n            <Button onPress={() => setCount(0)} title='Clear' \/>\r\n            <MapView style={styles.map}>\r\n                {range(count).map(x => (\r\n                    <MapMarker key={x} coordinate={{ latitude: x \/ 2, longitude: x \/ 2 }}>\r\n                        <Text>Custom Marker<\/Text>\r\n                    <\/MapMarker>\r\n                ))}\r\n            <\/MapView>\r\n        <\/>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    map: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n});\n```\n\n\n### Steps to reproduce\n\nRun the sample app and tap the top button a dozen times.\n\n### Expected result\n\nFPS should stay at a reasonable level\n\n### Actual result\n\nFPS drops to 10 and the whole app is sluggish.\n\n### React Native Maps Version\n\n1.8.0\n\n### What platforms are you seeing the problem on?\n\nAndroid\n\n### React Native Version\n\n0.72.4\n\n### What version of Expo are you using?\n\nNot using Expo\n\n### Device(s)\n\nPixel 7 Pro\n\n### Additional information\n\n_No response_","comments":["Hi I have faced an issue with MapView too do not use full dimension it will cause perf with MapView\r\n- you should set trackViewChanges in the marker to false if you are rendering a static marker\r\n- mapView should not use  w 100% and h 100% like that\r\n- for my Attempt I downgraded the w and h and scale with the transform in map view style it is a bit ugly and trick\r\n- one more thing my app needs long-running for the driver the whole day that why I did this \r\n\r\n### After and Before\r\n![image](https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/65760336\/50446cfb-7534-457e-80e2-954613afe5d2)\r\n\r\n\r\n## Environment\r\nexpo-env-info 1.2.0 environment info:\r\n    System:\r\n      OS: macOS 14.1.2\r\n      Shell: 5.9 - \/bin\/zsh\r\n    Binaries:\r\n      Node: 18.19.0 - ~\/.asdf\/installs\/nodejs\/18.19.0\/bin\/node\r\n      Yarn: 1.22.21 - ~\/.asdf\/installs\/nodejs\/18.19.0\/bin\/yarn\r\n      npm: 10.2.5 - ~\/node_modules\/.bin\/npm\r\n      Watchman: 2023.12.04.00 - \/opt\/homebrew\/bin\/watchman\r\n    Managers:\r\n      CocoaPods: 1.14.3 - \/Users\/***\/.asdf\/shims\/pod\r\n    SDKs:\r\n      iOS SDK:\r\n        Platforms: DriverKit 23.2, iOS 17.2, macOS 14.2, tvOS 17.2, watchOS 10.2\r\n      Android SDK:\r\n        API Levels: 29, 31, 33, 34\r\n        Build Tools: 30.0.2, 30.0.3, 33.0.0, 33.0.1, 34.0.0\r\n        System Images: android-34 | Google APIs ARM 64 v8a\r\n    IDEs:\r\n      Android Studio: 2023.1 AI-231.9392.1.2311.11076708\r\n      Xcode: 15.1\/15C65 - \/usr\/bin\/xcodebuild\r\n    npmPackages:\r\n      expo: ^49.0.21 => 49.0.21 \r\n      react: 18.2.0 => 18.2.0 \r\n      react-native: 0.72.6 => 0.72.6 \r\n      react-native-maps: 1.7.1\r\n    Expo Workflow: bare","@chanphiromsok what tools you use to get that screenshoot ?","This could also be linked to my issue https:\/\/github.com\/react-native-maps\/react-native-maps\/issues\/4891.\r\n\r\n> @chanphiromsok what tools you use to get that screenshoot ?\r\n\r\nAs I was interested as well: a quick Google reverse image search led me to https:\/\/flashlight.dev","> @chanphiromsok what tools you use to get that screenshoot ?\n\nI use flashlight https:\/\/github.com\/bamlab\/flashlight","> This could also be linked to my issue https:\/\/github.com\/react-native-maps\/react-native-maps\/issues\/4891.\n> \n> \n> \n> > @chanphiromsok what tools you use to get that screenshoot ?\n> \n> \n> \n> As I was interested as well: a quick Google reverse image search led me to https:\/\/flashlight.dev\n\nThat not related to your issue I have test long running without marker it still the same"],"labels":["bug"]},{"title":"I use OSM but in the bottom show the GOOGLE","body":"### Summary\n\nI use OSM for my MapView but in the bottom Show me the GOOGLE \n\n### Reproducible sample code\n\n```TSX\n<MapView\r\n          style={StyleSheet.absoluteFillObject}\r\n          mapType=\"none\"\r\n          initialRegion={{\r\n            latitude: 37.78825,\r\n            longitude: -122.4324,\r\n            latitudeDelta: 0.0922,\r\n            longitudeDelta: 0.0421,\r\n          }}\r\n          provider={undefined}\r\n          rotateEnabled={false}\r\n          maxZoomLevel={19}\r\n        >\r\n          <UrlTile\r\n            urlTemplate=\"https:\/\/a.tile.openstreetmap.de\/tiles\/osmde\/{z}\/{x}\/{y}.png\"\r\n            shouldReplaceMapContent={true}\r\n            maximumZ={19}\r\n            tileSize={512}\r\n            flipY={false}\r\n          \/>\r\n        <\/MapView>\n```\n\n\n### Steps to reproduce\n\nI want to remove GOOGLE from the bottom\n\n### Expected result\n\nadd a option to remove google \n\n### Actual result\n\nadd a option to remove google \n\n### React Native Maps Version\n\n1.10.0\n\n### What platforms are you seeing the problem on?\n\nAndroid\n\n### React Native Version\n\n0.73.4\n\n### What version of Expo are you using?\n\nSDK 48\n\n### Device(s)\n\nAndroid and iPhone\n\n### Additional information\n\n_No response_","comments":["Hi, @i1kaaasra  I don't think it's possible. You are still using google maps underneath and OSM is just an overlay. We can't add option to disable Google text because it violates their license restrictions.\r\n\r\n\"(b) Attribution.  Customer will display all attribution that (i) Google provides through the Services (including branding, logos, and copyright and trademark notices); or (ii) is specified in the Maps Service Specific Terms. Customer will not modify, obscure, or delete such attribution.\"  - 3.2.2 Requirements for Using the Services\r\n\r\nSource: https:\/\/cloud.google.com\/maps-platform\/terms\/#10-license-restrictions","I use OSM ... and I do not use Google Map\r\n","Even though you are still using one of the two providers to render the whole map under the Tile.\r\nAs it is said in the documentation:\r\n\r\n```\r\nThe map framework to use.\r\n\r\nEither\u00a0\"google\"\u00a0for GoogleMaps, otherwise\u00a0null\u00a0or\u00a0undefined\u00a0to use the native map framework (MapKit\u00a0in iOS and\u00a0GoogleMaps\u00a0in android).\r\n```"],"labels":["bug"]},{"title":"Application crashes on android without any error logged","body":"### Summary\n\nWhen I use MapView in my code, my application crashes only on ANDROID but not on IOS. After some research, the error comes from the initialRegion of the mapView to which I supplied a latitude and longitude string. On IOS there's no problem but on android the application crashes without any log or message to understand the problem.\r\nIf this can help someone stuck.\n\n### Reproducible sample code\n\n```TSX\n<MapView\r\n    provider={MAP_PROVIDER}\r\n    customMapStyle={customMapStyle}\r\n    style={{width: \"100%\", height: \"100%\"}}\r\n    initialRegion={{\r\n        latitude:  48.18,\r\n        longitude: \"12.12\",\r\n        latitudeDelta: 0.005,\r\n        longitudeDelta: 0.005,\r\n    }}\r\n\/>\n```\n\n\n### Steps to reproduce\n\nInitialize a MapView with an initialRegion with a string latitude and\/or longitude.\n\n### Expected result\n\nOn IOS : everything works fine don't need anything (or it can provide a warning to say the lat and long are given in string format).\r\nOn ANDROID : it should work like on IOS and provide a warning or it should at least give an error to understand the issue.\n\n### Actual result\n\nOn IOS : everything works fine (without any error or warning).\r\nOn ANDROID : application crashes (without any error or warning).\n\n### React Native Maps Version\n\n1.7.1\n\n### What platforms are you seeing the problem on?\n\nAndroid\n\n### React Native Version\n\n0.72.6\n\n### What version of Expo are you using?\n\nSDK 48\n\n### Device(s)\n\niPhone 12 Pro, Google Pixel 3a\n\n### Additional information\n\nI use expo 49.0.16.\r\nI've tested on several devices and it's always the same.\r\nI use the google provider for IOS and ANDROID.","comments":["Hi, thanks for reporting. The docs say that the longitude is expected to be a number. Please use the library in accordance to the docs if you expect it to be stable.\r\nhttps:\/\/github.com\/react-native-maps\/react-native-maps\/tree\/master\/docs\/mapview.md"],"labels":["bug"]},{"title":"Calling fitToCoordinates with a single coordinate after calling it with multiple coordinates does not respect edge padding","body":"### Summary\r\n\r\nI am currently using fitToCoordinates on ios with apple maps. I am seeing an issue which occurs when calling fitToCoordinates initially with multiple coordinates and then only providing a single coordinate. When calling fitToCoordinates the first time with a single coordinate, the edge padding is not respected. Calling it another time uses the provided edge padding.\r\n\r\nhttps:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/36011302\/84a06411-e25f-4919-a320-eb2922804fbe\r\n\r\n\r\n\r\n### Reproducible sample code\r\n\r\n```TSX\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport MapView, { EdgePadding, Marker } from \"react-native-maps\";\r\nimport { Button, StyleSheet } from \"react-native\";\r\n\r\nexport function MapTest() {\r\n  const mapRef = useRef<MapView>(null);\r\n  const coordinates = [\r\n    { latitude: 25.2769875, longitude: 55.296249 },\r\n    { latitude: 35.652832, longitude: 139.839478 },\r\n  ];\r\n\r\n  const edgePadding: EdgePadding = {\r\n    top: 0,\r\n    bottom: 500,\r\n    left: 50,\r\n    right: 50,\r\n  };\r\n\r\n  const fitToSingleCoordinate = () => {\r\n    mapRef.current?.fitToCoordinates([coordinates[0]], { edgePadding });\r\n  };\r\n\r\n  useEffect(() => {\r\n    mapRef.current?.fitToCoordinates(coordinates, { edgePadding });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Button onPress={fitToSingleCoordinate} title=\"Test\"><\/Button>\r\n      <MapView ref={mapRef} style={styles.map}>\r\n        {coordinates.map((coordinate, index) => (\r\n          <Marker\r\n            pinColor={\"#0A84FF\"}\r\n            key={index}\r\n            coordinate={coordinate}\r\n          ><\/Marker>\r\n        ))}\r\n      <\/MapView>\r\n    <\/>\r\n  );\r\n}\r\nexport const styles = StyleSheet.create({\r\n  map: {\r\n    flex: 1,\r\n  },\r\n});\r\n```\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Call fitToCoordinates with multiple coordinates and edgePadding\r\n2. Call fitToCoordinates with a single coordinate and edgePadding\r\n\r\n### Expected result\r\n\r\nEdge padding should be respected when calling fitToCoordinates with a single coordinate after calling it with multiple coordinates\r\n\r\n### Actual result\r\n\r\nEdge padding is not respected\r\n\r\n### React Native Maps Version\r\n\r\n1.10.2\r\n\r\n### What platforms are you seeing the problem on?\r\n\r\niOS (Apple Maps)\r\n\r\n### React Native Version\r\n\r\n0.72.6\r\n\r\n### What version of Expo are you using?\r\n\r\nNot using Expo\r\n\r\n### Device(s)\r\n\r\niPhone 14 Pro (16.4)\r\n\r\n### Additional information\r\n\r\n_No response_","comments":[],"labels":["bug"]},{"title":"Polyline doesn't update when the coordinates array is changed.","body":"### Summary\n\nI want to use the Polyline component from React-Native-Maps. It requires an array of coordinates to draw a polyline. However, when I update the coordinate array, the polyline doesn't update accordingly.\n\n### Reproducible sample code\n\n```TSX\nimport React, { useState } from \"react\";\r\nimport { Pressable, StyleSheet, Text, View } from \"react-native\";\r\nimport MapView, { PROVIDER_GOOGLE, Polyline } from \"react-native-maps\";\r\n\r\nconst coordinates = [\r\n  { latitude: 55.861324310302734, longitude: 12.387187004089355 },\r\n  { latitude: 55.8612174987793, longitude: 12.387340545654297 },\r\n  { latitude: 55.86132049560547, longitude: 12.387341499328613 },\r\n  { latitude: 55.86111831665039, longitude: 12.38720417022705 },\r\n  { latitude: 55.861358642578125, longitude: 12.387207984924316 },\r\n  { latitude: 55.86152648925781, longitude: 12.387125015258789 },\r\n  { latitude: 55.866825103759766, longitude: 12.383121490478516 },\r\n  { latitude: 55.87004089355469, longitude: 12.379796028137207 },\r\n  { latitude: 55.87102508544922, longitude: 12.381945610046387 },\r\n  { latitude: 55.870330810546875, longitude: 12.384469985961914 },\r\n  { latitude: 55.870487213134766, longitude: 12.387078285217285 },\r\n  { latitude: 55.86918258666992, longitude: 12.387304306030273 },\r\n  { latitude: 55.86808395385742, longitude: 12.387526512145996 },\r\n  { latitude: 55.8694953918457, longitude: 12.38739013671875 },\r\n  { latitude: 55.86945343017578, longitude: 12.38755989074707 },\r\n  { latitude: 55.86931610107422, longitude: 12.387386322021484 },\r\n  { latitude: 55.868534088134766, longitude: 12.387174606323242 },\r\n  { latitude: 55.86812973022461, longitude: 12.38566780090332 },\r\n  { latitude: 55.8681526184082, longitude: 12.3834867477417 },\r\n  { latitude: 55.86741256713867, longitude: 12.383044242858887 },\r\n  { latitude: 55.867210388183594, longitude: 12.38311767578125 },\r\n  { latitude: 55.86640548706055, longitude: 12.383851051330566 },\r\n  { latitude: 55.865966796875, longitude: 12.382963180541992 },\r\n  { latitude: 55.86558532714844, longitude: 12.38154411315918 },\r\n  { latitude: 55.86520767211914, longitude: 12.379416465759277 },\r\n  { latitude: 55.86503982543945, longitude: 12.377802848815918 },\r\n  { latitude: 55.865150451660156, longitude: 12.377266883850098 },\r\n  { latitude: 55.86438751220703, longitude: 12.37794017791748 },\r\n  { latitude: 55.86368179321289, longitude: 12.378557205200195 },\r\n  { latitude: 55.86301040649414, longitude: 12.378678321838379 },\r\n  { latitude: 55.86231231689453, longitude: 12.378880500793457 },\r\n  { latitude: 55.861732482910156, longitude: 12.379141807556152 },\r\n  { latitude: 55.860328674316406, longitude: 12.380106925964355 },\r\n  { latitude: 55.859867095947266, longitude: 12.38111686706543 },\r\n  { latitude: 55.86044692993164, longitude: 12.381854057312012 },\r\n  { latitude: 55.86052322387695, longitude: 12.383037567138672 },\r\n  { latitude: 55.8613166809082, longitude: 12.387310981750488 },\r\n  { latitude: 55.86186599731445, longitude: 12.387197494506836 },\r\n];\r\n\r\nconst initLocation = {\r\n  latitude: 55.8622166,\r\n  longitude: 12.388021,\r\n};\r\n\r\nexport default function App() {\r\n  const [state, setState] = useState();\r\n  const loadDataFn = () => setState(() => coordinates);\r\n  const clearDataFn = () => setState(() => []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <MapView\r\n        style={styles.map}\r\n        provider={PROVIDER_GOOGLE}\r\n        initialRegion={{\r\n          latitudeDelta: 0.02,\r\n          longitudeDelta: 0.02,\r\n          ...initLocation,\r\n        }}\r\n      >\r\n        <Polyline coordinates={state}><\/Polyline>\r\n      <\/MapView>\r\n      <View style={styles.controls} pointerEvents=\"box-none\">\r\n        <Pressable style={styles.loadData} onPress={loadDataFn}>\r\n          <Text>load data<\/Text>\r\n        <\/Pressable>\r\n        <Pressable style={styles.clearData} onPress={clearDataFn}>\r\n          <Text>clear data<\/Text>\r\n        <\/Pressable>\r\n      <\/View>\r\n    <\/View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  map: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  controls: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  loadData: {\r\n    backgroundColor: \"red\",\r\n    position: \"absolute\",\r\n    left: 50,\r\n    bottom: 100,\r\n    width: 100,\r\n    height: 50,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  clearData: {\r\n    backgroundColor: \"red\",\r\n    position: \"absolute\",\r\n    right: 50,\r\n    bottom: 100,\r\n    width: 100,\r\n    height: 50,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\n```\n\n\n### Steps to reproduce\n\n1. create an new project called \"Polyline\"   `npx create-react-native-app polyline`\r\n2. replace the the code in App.js with my sample code\r\n3.  press load data button, it will show an path that drwed with Polyline\r\n4. when you press clear data button, the polyline is still visible, this is the bug, it should not be visible, since there is no data. \n\n### Expected result\n\nthe Polyline component should not be visible on map when you click clear data button. \r\n\n\n### Actual result\n\nthe Polyline component is still visible even there is no data in array.\r\n![IMG_FC1FF991BF0D-1](https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/11925038\/dfe374b5-3bce-4099-9afb-a5af6269d210)\r\n\n\n### React Native Maps Version\n\n1.10.2\n\n### What platforms are you seeing the problem on?\n\niOS (Google Maps)\n\n### React Native Version\n\n0.73.4\n\n### What version of Expo are you using?\n\nNot using Expo\n\n### Device(s)\n\niPhone 13\n\n### Additional information\n\nthe expo sdk version is 50.0.6","comments":["Hi @panpan31415. Thanks for reporting this issue. I created a fix but it will take a while until it will be merged and deployed.\r\nFor now you can use patch-package and make changes from my PR locally. Or add a check in your code if coordinates array is not empty\r\n```jsx\r\n{ state && state.length > 0 ?\r\n<Polyline coordinates={state}><\/Polyline> \r\n: null\r\n}\r\n```"],"labels":["bug"]},{"title":"Map screen getting freeze when user try to zoom out less then minZoomLevel ","body":"### Summary\n\nMap screen getting freeze when user try to zoom out less then minZoomLevel. working fine on Iphone 14  or above and map screen getting freeze on iphone 13, iphone 12,  iphone 11,  iphone x\r\n\r\n\n\n### Reproducible sample code\n\n```TSX\n<MapView\r\n        zoomEnabled={true}\r\n        minZoomLevel={12}\r\n        maxZoomLevel={20}\r\n        zoomTapEnabled={true}\r\n        showsUserLocation={true}\r\n        userLocationPriority={'high'}\r\n        scrollEnabled={true}\r\n        showsScale={true}\r\n        showsCompass={true}\r\n        userInterfaceStyle={modeType}\r\n        onClusterPress={(cluster, markers) => {\r\n        }}\r\n        showsTraffic={true}\r\n        showsIndoors={true}\r\n        onPress={handleMapPress}\r\n        followsUserLocation={false}\r\n        ref={mapViewRef}\r\n        tracksViewChanges={true}\r\n        clusteringEnabled={props?.cluster == false ? false : true}\r\n        \/\/ for cluster view\r\n        preserveClusterPressBehavior={true}\r\n        loadingEnabled={true}\r\n        mapType={mapType}\r\n        onMapReady={(e)=>{\r\n        }}\r\n        initialRegion={initialLocation}\r\n        onPanDrag={(e)=>{\r\n         debouncedOnRegionChange(e)\r\n        }}\r\n\r\n        style={styles.container}>\r\n\r\n <Marker\r\n                coordinate={{\r\n                  latitude: userLocationHeading.latitude,\r\n                  longitude: userLocationHeading.longitude,\r\n                }}\r\n                anchor={{ x: 0.5, y: 0.5 }}\r\n                rotation={userLocationHeading.heading}\r\n              >\r\n                <HeadingMarker heading={userLocationHeading.heading} \/>\r\n              <\/Marker>\r\n<\/MapView>\n```\n\n\n### Steps to reproduce\n\ntry to zoom out he screen more than the minimum zoom level\n\n### Expected result\n\ni am expect that the map will working fine \n\n### Actual result\n\nmap screen getting freeze \n\n### React Native Maps Version\n\n    \"react-native-maps\": \"^1.10.1\",\n\n### What platforms are you seeing the problem on?\n\niOS (Apple Maps)\n\n### React Native Version\n\nreact-native\": \"0.72.4\n\n### What version of Expo are you using?\n\nNot using Expo\n\n### Device(s)\n\nIphone 12 pro\n\n### Additional information\n\n_No response_","comments":["Hi @Hamza-Akva thanks for reporting this. I was trying to reproduce it on iPhone 12 with iOS 15.5 and iPhone 11 with iOS 17.2 and it works perfectly fine. Is it happening only on certain mapType? Also can you try to reproduce it without onPanDrag prop? Because maybe something in this function is causing this problem and I don't know whats your function body is. And if you can please remove all props non necessary to reproduce this bug, it will be easier for us to reproduce, and fix it.","> Hi @Hamza-Akva thanks for reporting this. I was trying to reproduce it on iPhone 12 with iOS 15.5 and iPhone 11 with iOS 17.2 and it works perfectly fine. Is it happening only on certain mapType? Also can you try to reproduce it without onPanDrag prop? Because maybe something in this function is causing this problem and I don't know whats your function body is. And if you can please remove all props non necessary to reproduce this bug, it will be easier for us to reproduce, and fix it.\n\nHi can you help check react native maps with expo sdk50 when using googlePlaySerivce 21 map can not move in android only","https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/65760336\/fede6880-ba70-4592-92d6-e40a8ecc0b47","Hi @chanphiromsok can you open your own issue with full description and source code? Or if it's exactly the same case please provide your code here","> Hi @chanphiromsok can you open your own issue with full description and source code? Or if it's exactly the same case please provide your code here\n\nHi I have been testing on new project is work fine it maybe conflict with some deps install I will create reproduce repo sample for you because it's a private project","@mateki0  Hi I figure out the issue is I used MapView in the Context and Wrap my whole Navigation inside it after removed it work fined now not freeze\r\n\r\n```js\r\n  <BackgroundGeolocationContext.Provider value={{ listen }}>\r\n      {children}\r\n      <MapView\r\n        liteMode\r\n        style={{ display: 'none' }}\r\n        showsUserLocation={appstate === 'active'}\r\n        userLocationUpdateInterval={500}\r\n        showsBuildings={false}\r\n        showsCompass={false}\r\n        showsScale={false}\r\n        showsPointsOfInterest={false}\r\n        onUserLocationChange={onUserLocationChange}\r\n      \/> \r\n    <\/BackgroundGeolocationContext.Provider>\r\n```","now I remove `liteMode` it work fine I can zoom map as normal","@chanphiromsok does it work fine with liteMode and without your context? If so can you put here the code from this context? ","> @chanphiromsok does it work fine with liteMode and without your context? If so can you put here the code from this context? \n\nsorry I did not test that case but without context map view using  liteMode it work fine on other screens","So do you need any help from our side? Because I'm a bit lost here now ","> So do you need any help from our side? Because I'm a bit lost here now \n\nno I didn't have the problem like you please share your environment ","please try create with fresh project and test it","I'm running into the same problem with my Expo project, running it in Expo Go on native Apple Maps. Zooming in beyond maxZoomLevel is fine, but zooming out beyond minZoomLevel causes the map to return to that level, realign north, and freeze, rejecting all inputs until I go back a screen and relaunch it. ","I've been able to get the bug to replicate all the way down to a minimal case of \r\n```javascript\r\nimport { StyleSheet } from \"react-native\";\r\nimport MapView from \"react-native-maps\";\r\n\r\nexport default function MyMapView(props) {\r\n    return (\r\n                <MapView \r\n                    style={{...StyleSheet.absoluteFillObject}}\r\n                    maxZoomLevel={18}\r\n                    minZoomLevel={10}>\r\n                <\/MapView>\r\n    )\r\n}\r\n``` \r\nrunning on an iPhone 15, which makes me guess it's either an inherent bug, or something wrong with react-native-maps' interactions with Expo\/Expo Go?"],"labels":["bug"]},{"title":"App Crashes When Attempting to Display Map","body":"### Summary\n\nI have been getting the same error when adding maps to an existing project. I decided to create a new sample project and get the same exact error.\n\n### Reproducible sample code\n\n```TSX\npackage.json\r\n{\r\n  \"name\": \"maptest\",\r\n  \"version\": \"1.0.0\",\r\n  \"main\": \"node_modules\/expo\/AppEntry.js\",\r\n  \"scripts\": {\r\n    \"start\": \"expo start\",\r\n    \"android\": \"expo start --android\",\r\n    \"ios\": \"expo start --ios\",\r\n    \"web\": \"expo start --web\"\r\n  },\r\n  \"dependencies\": {\r\n    \"expo\": \"~50.0.6\",\r\n    \"expo-dev-client\": \"^3.3.8\",\r\n    \"expo-status-bar\": \"~1.11.1\",\r\n    \"react\": \"18.2.0\",\r\n    \"react-native\": \"0.73.4\",\r\n    \"react-native-maps\": \"^1.10.1\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@babel\/core\": \"^7.20.0\"\r\n  },\r\n  \"private\": true\r\n}\r\n\r\nApp.js\r\n\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport MapView, { PROVIDER_GOOGLE } from \"react-native-maps\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <MapView\r\n        provider={PROVIDER_GOOGLE}\r\n        minZoomLevel={20}\r\n        initialCamera={{\r\n          center: {\r\n            latitude: 37.78825,\r\n            longitude: -122.4324,\r\n          },\r\n          pitch: 0,\r\n          heading: 0,\r\n          altitude: 1000,\r\n          zoom: 10,\r\n        }}\r\n        style={{ width: \"100%\", height: \"100%\" }}\r\n        apiKey=\"<API KEY>\"\r\n      ><\/MapView>\r\n      <StatusBar style=\"auto\" \/>\r\n    <\/View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\n```\n\n\n### Steps to reproduce\n\nDid a development build for both Android and iOS (Android shown):\r\neas build --profile development --platform android\r\n\r\nThen ran the following:\r\nnpx expo start --dev-client\n\n### Expected result\n\nA simple screen with a base map.\n\n### Actual result\n\n![image](https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/136379717\/ed8b8a82-1260-4451-bd0b-62da5d42e277)\r\n\r\n\n\n### React Native Maps Version\n\n1.10.1\n\n### What platforms are you seeing the problem on?\n\nAndroid, iOS (Google Maps)\n\n### React Native Version\n\n0.73.4\n\n### What version of Expo are you using?\n\nSDK 48\n\n### Device(s)\n\niPhone 11 Pro, Android Pixel 7 Pro Emulator\n\n### Additional information\n\nI have tried with Expo 48->50","comments":["Hi, @suntan-superman did you follow expo documentation?\r\nhttps:\/\/docs.expo.dev\/versions\/latest\/sdk\/map-view\/"],"labels":["bug"]},{"title":"Dark Mode Callouts","body":"### Summary\n\nI would like to set the background color fo the callout for use in dark mode situations. I cannot seem to find a solution to either setting the background color or just using whatever the default styling is. I cannot use a tooltip because I need the pointer and it has weird behavior when on the edges of the display.\r\n<img width=\"188\" alt=\"Screenshot 2024-02-05 at 2 11 57\u202fPM\" src=\"https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/12686250\/65f4135b-9e49-4931-983e-16bc66cc0689\">\r\n\r\nI cannot set the background color of the view inside because it just has a white border around it.\r\n<img width=\"187\" alt=\"Screenshot 2024-02-05 at 2 12 52\u202fPM\" src=\"https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/12686250\/d529c820-d2c7-4639-8559-1b22c35034cb\">\r\n\r\n\n\n### Reproducible sample code\n\n```TSX\n<Callout \r\n            style={{ \r\n                alignItems: 'center',\r\n                backgroundColor: \"black\"\r\n            }}\r\n        >\r\n            <Text>Hello<\/Text>\r\n        <\/Callout>\n```\n\n\n### Steps to reproduce\n\nUse the callout example but use the above code as your Callout\n\n### Expected result\n\nI expect the whole callouts color to change. I have not tested on android but this needs to look correct on both platforms...\n\n### Actual result\n\nThere is a white border or the callout is not centered when at edge of screen.\n\n### React Native Maps Version\n\n1.7.1\n\n### What platforms are you seeing the problem on?\n\niOS (Apple Maps)\n\n### React Native Version\n\n0.72.6\n\n### What version of Expo are you using?\n\nSDK 48\n\n### Device(s)\n\nAll iOS, unsure about behavior on android\n\n### Additional information\n\n_No response_","comments":["Hi, thanks for reporting this! Unfortunately, there's no other way than to use the tooltip property. But what you can do is nesting a triangle in the Callout to serve as a pointer as in\r\n```\r\n<Callout\r\n          tooltip\r\n          style={{\r\n            width: 140,\r\n            height: 140,\r\n          }}>\r\n          <View\r\n            style={{\r\n              height: '100%',\r\n              width: '100%',\r\n              backgroundColor: '#1b1b1b',\r\n              borderRadius: 20,\r\n              padding: 10,\r\n            }}>\r\n            <Text style={{color: 'white'}}> Hola! <\/Text>\r\n          <\/View>\r\n          <View\r\n            style={{\r\n              width: 0,\r\n              height: 0,\r\n              marginLeft: 'auto',\r\n              marginRight: 'auto',\r\n              borderColor: 'transparent',\r\n              borderTopWidth: 20,\r\n              borderTopColor: '#1b1b1b',\r\n              borderLeftWidth: 20,\r\n              borderRightWidth: 20,\r\n              marginBottom: 10,\r\n            }}\r\n          \/>\r\n        <\/Callout>\r\n```\r\n![image](https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/68508047\/c72f8606-e5b1-4dc1-b66e-6383c8b4a2f0)\r\n","I have done this but when a marker is tapped on the edge of the screen, the callout is not centered on the point, resulting in a marker that is offset from the actual point. I can\u2019t program the map to center on the point before the callout appears because it results in the same behavior."],"labels":["bug"]},{"title":"App crashes on Android when upgrading to 1.10.1 from 1.7.1","body":"### Summary\n\nUpgraded Expo from 49 to 50 and at the same time updated react-native-maps from 1.7.1 to 1.10.1. The app now crashes when opening a view with a map. I downgraded to 1.9.1 which did not work either. I downgraded again to 1.8.1 and that version seems to work.\n\n### Reproducible sample code\n\n```TSX\njava.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n    at jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\r\n    at jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\r\n    at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\r\n    at java.util.Objects.checkIndex(Objects.java:359)\r\n    at java.util.ArrayList.get(ArrayList.java:434)\r\n    at com.google.maps.api.android.lib6.lite.v.a(:com.google.android.gms.dynamite_mapsdynamite@231818047@23.18.18 (190800-0):3)\r\n    at com.google.maps.api.android.lib6.lite.x.b(:com.google.android.gms.dynamite_mapsdynamite@231818047@23.18.18 (190800-0):1)\r\n    at com.google.maps.api.android.lib6.lite.k.onDraw(:com.google.android.gms.dynamite_mapsdynamite@231818047@23.18.18 (190800-0):8)\r\n    at android.view.View.draw(View.java:23889)\r\n    at android.view.View.buildDrawingCacheImpl(View.java:23153)\r\n    at android.view.View.buildDrawingCache(View.java:23013)\r\n    at android.view.View.draw(View.java:23612)\r\n    at android.view.ViewGroup.drawChild(ViewGroup.java:4556)\r\n    at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4317)\r\n    at android.view.View.updateDisplayListIfDirty(View.java:22747)\r\n    at android.view.View.draw(View.java:23620)\r\n    at android.view.ViewGroup.drawChild(ViewGroup.java:4556)\r\n    at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4317)\r\n    at android.view.View.updateDisplayListIfDirty(View.java:22747)\r\n    at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4540)\r\n    at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4513)\r\n    at android.view.View.updateDisplayListIfDirty(View.java:22712)\r\n    at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4540)\r\n    at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4513)\r\n    at android.view.View.updateDisplayListIfDirty(View.java:22712)\r\n    at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4540)\r\n    at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4513)\r\n    at android.view.View.updateDisplayListIfDirty(View.java:22712)\r\n    at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4540)\r\n    at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4513)\r\n    at android.view.View.updateDisplayListIfDirty(View.java:22712)\r\n    at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4540)\r\n    at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4513)\r\n    at android.view.View.updateDisplayListIfDirty(View.java:22712)\r\n    at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4540)\r\n    at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4513)\r\n    at android.view.View.updateDisplayListIfDirty(View.java:22712)\r\n    at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4540)\r\n    at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4513)\r\n    at android.view.View.updateDisplayListIfDirty(View.java:22712)\r\n    at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4540)\r\n    at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4513)\r\n    at android.view.View.updateDisplayListIfDirty(View.java:22712)\r\n    at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4540)\r\n    at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4513)\r\n    at android.view.View.updateDisplayListIfDirty(View.java:22712)\r\n    at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4540)\r\n    at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4513)\r\n    at android.view.View.updateDisplayListIfDirty(View.java:22712)\r\n    at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4540)\r\n    at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4513)\r\n    at android.view.View.updateDisplayListIfDirty(View.java:22712)\r\n    at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4540)\r\n    at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4513)\r\n    at android.view.View.updateDisplayListIfDirty(View.java:22712)\r\n    at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4540)\r\n    at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4513)\r\n    at android.view.View.updateDisplayListIfDirty(View.java:22712)\r\n    at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4540)\r\n    at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4513)\r\n    at android.view.View.updateDisplayListIfDirty(View.java:22712)\r\n    at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4540)\r\n    at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4513)\r\n    at android.view.View.updateDisplayListIfDirty(View.java:22712)\r\n    at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4540)\r\n    at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4513)\r\n    at android.view.View.updateDisplayListIfDirty(View.java:22712)\r\n    at android.view.ThreadedRenderer.updateViewTreeDisplayList(ThreadedRenderer.java:694)\r\n    at android.view.ThreadedRenderer.updateRootDisplayList(ThreadedRenderer.java:700)\r\n    at android.view.ThreadedRenderer.draw(ThreadedRenderer.java:798)\r\n    at android.view.ViewRootImpl.draw(ViewRootImpl.java:4939)\r\n    at android.view.ViewRootImpl.performDraw(ViewRootImpl.java:4643)\r\n    at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:3822)\r\n    at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:2465)\r\n    at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:9305)\r\n    at android.view.Choreographer$CallbackRecord.run(Choreographer.java:1339)\r\n    at android.view.Choreographer$CallbackRecord.run(Choreographer.java:1348)\r\n    at android.view.Choreographer.doCallbacks(Choreographer.java:952)\r\n    at android.view.Choreographer.doFrame(Choreographer.java:882)\r\n    at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:1322)\r\n    at android.os.Handler.handleCallback(Handler.java:958)\r\n    at android.os.Handler.dispatchMessage(Handler.java:99)\r\n    at android.os.Looper.loopOnce(Looper.java:205)\r\n    at android.os.Looper.loop(Looper.java:294)\r\n    at android.app.ActivityThread.main(ActivityThread.java:8177)\r\n    at java.lang.reflect.Method.invoke(Method.java)\r\n    at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:552)\r\n    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:971)\n```\n\n\n### Steps to reproduce\n\nUpgrade Expo from 49 to 50 and react-native-maps from 1.7.1 to 1.10.1\n\n### Expected result\n\nNo crash\n\n### Actual result\n\nCrash\n\n### React Native Maps Version\n\n1.10.1\n\n### What platforms are you seeing the problem on?\n\nAndroid\n\n### React Native Version\n\n0.73.2\n\n### What version of Expo are you using?\n\nSDK 48\n\n### Device(s)\n\nPixel_6_API_34\n\n### Additional information\n\nExpo SDK is actually 50 but it is not possible to choose in the bug report view.","comments":["Hi @alfredvaa thanks for reporting this. Did you try to run it with clean project or with minimum dependencies needed for your project? Or maybe you have a custom config, or you are using some methods on initial render of the map? Can you post the component in which you are using MapView?\r\n\r\nI've just built a project with below dependencies and code and it works fine.\r\n\r\n```\r\n\"dependencies\": {\r\n    \"expo\": \"~50.0.4\",\r\n    \"expo-status-bar\": \"~1.4.4\",\r\n    \"nativewind\": \"^2.0.11\",\r\n    \"react\": \"18.2.0\",\r\n    \"react-native\": \"0.73.2\",\r\n    \"react-native-dotenv\": \"^3.4.9\",\r\n    \"react-native-maps\": \"^1.10.1\",\r\n    \"tailwindcss\": \"3.3.2\"\r\n  },\r\n```\r\n\r\n```jsx\r\nimport MapView from \"react-native-maps\"\r\n\r\nexport default function NavigationScreen() {\r\n    return (\r\n                <MapView\r\n                    minZoomLevel={20}\r\n                    initialCamera={{\r\n                        center: {\r\n                          latitude: 37.78825,\r\n                          longitude: -122.4324,\r\n                        },\r\n                        pitch: 0,\r\n                        heading: 0,\r\n                        altitude: 1000,\r\n                        zoom: 10,\r\n                      }}\r\n                    style={{ width: '100%', height: '100%' }}\r\n                \r\n                >\r\n                <\/MapView>\r\n    );\r\n}\r\n```"],"labels":["bug"]},{"title":"The app freezes as it re-renders new points on the screen","body":"### Summary\n\nWell, I have to display on the map all the records I made during work and they are demarcated with points on the map, but when synchronizing these points they have to go from white to green, but I noticed that my app was freezing and I discovered that I have Marker has a tracksViewChanges property\r\nIf I disable it, my problem ends and as I register new records they appear, but now when I synchronize the points they are not updated to green\n\n### Reproducible sample code\n\n```TSX\nimport {isToday} from 'date-fns';\r\nimport React, {useState, useEffect} from 'react';\r\nimport {View, Text} from 'react-native';\r\nimport {colors} from 'react-native-elements';\r\nimport {Callout, Marker} from 'react-native-maps';\r\nimport MyLocation from '~\/assets\/svg\/mylocation.svg';\r\n\r\nconst RenderTargets = ({registries}) => {\r\n  const [markers, setMarkers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setMarkers(registries);\r\n  }, [registries]);\r\n\r\n  return markers\r\n    .filter(item => isToday(new Date(item.dateCollect)))\r\n    .map((item, i) => {\r\n      const {latitude, longitude} = item;\r\n      if (latitude !== null && longitude !== null) {\r\n        return (\r\n          <Marker\r\n            key={`${item.idMd5 + i}`}\r\n            coordinate={{\r\n              latitude: parseFloat(latitude),\r\n              longitude: parseFloat(longitude),\r\n            }}\r\n            zIndex={item.sync ? 10 : 15}>\r\n            <MyLocation\r\n              width={15}\r\n              height={15}\r\n              fill={item.sync ? 'rgba(0, 255, 132, 1)' : colors.white}\r\n            \/>\r\n            <Callout style={{width: 100}}>\r\n              <Text style={{fontWeight: 'bold', fontSize: 16}}>Registro:<\/Text>\r\n              {item.targets.map(tar =>\r\n                tar.stages.map(stg => (\r\n                  <Text style={{fontSize: 14}} key={stg.idMd5}>\r\n                    {'\u2022'} {stg.value} {stg.stage}\r\n                  <\/Text>\r\n                )),\r\n              )}\r\n            <\/Callout>\r\n          <\/Marker>\r\n        );\r\n      }\r\n      return <View key={`${item.idMd5}`} \/>;\r\n    });\r\n};\r\n\r\nexport default RenderTargets;\n```\n\n\n### Steps to reproduce\n\nto reproduce as stated in the code and just add new points and as you add them they accumulate to the point where the app becomes slow\r\n\n\n### Expected result\n\nI hope it synchronizes and turns green and without forgetting that my memory cannot overflow and the app works normally\r\n\n\n### Actual result\n\nthe current result is an app crash that only stops after restarting and even creating new points the problem appears again\r\n\n\n### React Native Maps Version\n\n0.72.6\n\n### What platforms are you seeing the problem on?\n\nAndroid, iOS (Google Maps)\n\n### React Native Version\n\n0.72.6\n\n### What version of Expo are you using?\n\nNot using Expo\n\n### Device(s)\n\nPixel 2(Android 10)\n\n### Additional information\n\n_No response_","comments":["I don't think it's an library bug to be honest. But to be able to help you I need more informations. What do you mean with \"when I synchronize the points\"? How many points should freeze the app? Can you give us minimal reproducible code with mocked data and exact instructions on how to reproduce the bug? Please also post a component in which you are using RenderTargets component","I'll explain better, I have a screen with a map and a record registration screen, as I create a new record I change the array of records and with these records I display points on the map, on the map I have a button to synchronize my records and when I synchronize I change the color of this icon from white to green\r\n","Okay I got it, can you show me your function responsible for synchronizing? And also the whole MapView component? I simplified your code a bit and it works correctly, after button press markers background is changed to green.\r\n\r\n```tsx\r\nimport MapView from 'react-native-maps';\r\nimport React, {useEffect, useState} from 'react';\r\n\r\nimport {View, Text, TouchableOpacity} from 'react-native';\r\nimport {Callout, Marker} from 'react-native-maps';\r\n\r\nconst mockedMarkers = [\r\n  {\r\n    idMd5: 1,\r\n    sync: false,\r\n    latitude: 37.78826,\r\n    longitude: -122.43245,\r\n    targets: [\r\n      {\r\n        stages: [\r\n          {\r\n            idMd5: 11,\r\n            value: 'stg value',\r\n            stage: 'stg phase',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    idMd5: 2,\r\n    sync: false,\r\n    latitude: 37.78824,\r\n    longitude: -122.4324,\r\n    targets: [\r\n      {\r\n        stages: [\r\n          {\r\n            idMd5: 22,\r\n            value: 'stg value',\r\n            stage: 'stg phase',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    idMd5: 3,\r\n    sync: false,\r\n    latitude: 37.788225,\r\n    longitude: -122.43235,\r\n    targets: [\r\n      {\r\n        stages: [\r\n          {\r\n            idMd5: 33,\r\n            value: 'stg value',\r\n            stage: 'stg phase',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    idMd5: 4,\r\n    sync: false,\r\n    latitude: 37.78821,\r\n    longitude: -122.4323,\r\n    targets: [\r\n      {\r\n        stages: [\r\n          {\r\n            idMd5: 4,\r\n            value: 'stg value',\r\n            stage: 'stg phase',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst RenderTargets = ({registries}) => {\r\n  const [markers, setMarkers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setMarkers(registries);\r\n  }, [registries]);\r\n\r\n  return markers.map((item, i) => {\r\n    const {latitude, longitude} = item;\r\n    if (latitude !== null && longitude !== null) {\r\n      return (\r\n        <Marker\r\n          key={`${item.idMd5 + i}`}\r\n          coordinate={{\r\n            latitude: parseFloat(latitude),\r\n            longitude: parseFloat(longitude),\r\n          }}\r\n          zIndex={item.sync ? 10 : 15}>\r\n          <View\r\n            style={{\r\n              backgroundColor: item.sync ? 'rgba(0, 255, 132, 1)' : '#fff',\r\n              width: 20,\r\n              height: 20,\r\n            }}\r\n          \/>\r\n          <Callout style={{width: 100}}>\r\n            <Text style={{fontWeight: 'bold', fontSize: 16}}>Registro:<\/Text>\r\n            {item.targets.map(tar =>\r\n              tar.stages.map(stg => (\r\n                <Text style={{fontSize: 14}} key={stg.idMd5}>\r\n                  {'\u2022'} {stg.value} {stg.stage}\r\n                <\/Text>\r\n              )),\r\n            )}\r\n          <\/Callout>\r\n        <\/Marker>\r\n      );\r\n    }\r\n    return <View key={`${item.idMd5}`} \/>;\r\n  });\r\n};\r\n\r\nexport default function NavigationScreen() {\r\n  const [registries, setRegistries] = useState(mockedMarkers);\r\n\r\n  const onPress = () => {\r\n    const synchronised = mockedMarkers?.map(a => {\r\n      return {...a, sync: true};\r\n    });\r\n    setRegistries(synchronised);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MapView\r\n        minZoomLevel={20}\r\n        initialCamera={{\r\n          center: {\r\n            latitude: 37.78825,\r\n            longitude: -122.4324,\r\n          },\r\n          pitch: 0,\r\n          heading: 0,\r\n          altitude: 1000,\r\n          zoom: 10,\r\n        }}\r\n        style={{width: '100%', height: '100%'}}>\r\n        <RenderTargets registries={registries} \/>\r\n      <\/MapView>\r\n      <TouchableOpacity\r\n        onPressIn={onPress}\r\n        style={{\r\n          width: 300,\r\n          height: 50,\r\n          backgroundColor: 'blue',\r\n          position: 'absolute',\r\n          bottom: 0,\r\n          left: 0,\r\n          right: 0,\r\n        }}>\r\n        <Text>Synchronise registries<\/Text>\r\n      <\/TouchableOpacity>\r\n    <\/>\r\n  );\r\n}\r\n\r\n```\r\n"],"labels":["bug"]},{"title":"fitToCoordinates() does not work correctly with a MapView in a Modal if it does not have 100% height on iOS","body":"### Summary\r\n\r\nThis seems like a strange bug to me so it would be helpful to get some insight. I have tried to reduce the reproduceable demo as much as possible but due to the strange circumstances there is a bit of surrounding code.\r\n\r\nI have noticed that fitToCoordinates was not working on iOS in my app but it was on Android. I am using fitToCoordinates to ensure that a circle drawn on the map fits within the map. However, on iOS the map is being centred a moderate distance away from the centre point of the circle. After a lot of investigation, I found that the problem only occurred when my MapView did not take up the full height of the Modal within which it is contained. This does not seem to be a problem if the Modal is excluded.\r\n\r\nBreathing new life into this issue:\r\n#3882 \r\n\r\n### Reproducible sample code\r\n\r\n```TSX\r\nhttps:\/\/snack.expo.io\/@staxy\/react-native-maps-fittocoordinates-demo---does-not-work\r\n\r\nThis is reproducible if you adjust the height styling prop in the snack example, here.\r\n\r\nInitial:\r\n![image](https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/39037565\/abe419fb-1fb8-41e1-973e-0e9c76e0131f)\r\n\r\nThis works fine as it encompasses the entire modal content. Here is the result:\r\n\r\n![image](https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/39037565\/1eb24622-1958-41f3-a8a1-ba9ce489f553)\r\n\r\n\r\n\r\nLet's try to edit the component height:\r\n![image](https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/39037565\/f9da929e-b014-48f6-b282-d7da2192a370)\r\n\r\nThis yields this:\r\n![image](https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/39037565\/251fd118-d398-4250-83ae-2e25416907b3)\r\n```\r\n\r\n\r\n### Steps to reproduce\r\n\r\nInitial:\r\n![image](https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/39037565\/abe419fb-1fb8-41e1-973e-0e9c76e0131f)\r\n\r\nThis works fine as it encompasses the entire modal content. Here is the result:\r\n\r\n![image](https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/39037565\/1eb24622-1958-41f3-a8a1-ba9ce489f553)\r\n\r\n\r\n\r\nLet's try to edit the component height:\r\n![image](https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/39037565\/f9da929e-b014-48f6-b282-d7da2192a370)\r\n\r\nThis yields this:\r\n![image](https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/39037565\/251fd118-d398-4250-83ae-2e25416907b3)\r\n\r\n### Expected result\r\n\r\n![image](https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/39037565\/7741be3d-7e70-4df6-b007-50c91a0351df)\r\n\r\n\r\n### Actual result\r\n\r\n![image](https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/39037565\/242852f2-2dc9-4975-a5d8-2565d33c4612)\r\n\r\n\r\n### React Native Maps Version\r\n\r\n\"1.7.1\"\r\n\r\n### What platforms are you seeing the problem on?\r\n\r\niOS (Google Maps)\r\n\r\n### React Native Version\r\n\r\n \"0.72.6\"\r\n\r\n### What version of Expo are you using?\r\n\r\nSDK 48\r\n\r\n### Device(s)\r\n\r\nIphone 7, Iphone 14\r\n\r\n### Additional information\r\n\r\nI'm using SDK 49 but there is no option for it ","comments":["For those that are facing this issue currently:\r\n\r\nI was able to circumvent this issue by setting `PROVIDER={PROVIDER_DEFAULT}` which simply defaults iOS mapview to Apple maps instead of Google Maps. fitToCoordinates will work as needed here. If you're willing to make the transition of UI, then this concession will work.\r\n\r\n\r\nI also found that in the snack example, it seems to specifically not like `height: \"100%\"`. When set to thingsl ike 80% or 30%, it works as intended, though such a case is not really applicable to my application. \r\n\r\nLet's squash this quirk!","@ApluUalberta do you want to try and submit a pull request with a fix? seeing that you managed to narrow down this ... I imagine you can compare the code handling this functionality"],"labels":["bug"]},{"title":"onMarkerPress also triggers onPress","body":"### Summary\n\nIf i press on a marker the onMarkerPress is triggered as expected, but the onPress callback is also triggered.\r\nThis is a duplicate of [this issue](https:\/\/github.com\/react-native-maps\/react-native-maps\/issues\/2004), but the suggested workaround using *stopPropagation* does not work for me.\n\n### Reproducible sample code\n\n```TSX\nimport React from 'react';\r\nimport MapView from 'react-native-maps';\r\n\r\nexport default function App() {\r\n\r\n  const onMarkerPress = (e) => {\r\n    e.stopPropagation();\r\n    console.log('marker pressed')\r\n  }\r\n\r\n  const onPress = (e) => {\r\n    console.log('map pressed');\r\n  }\r\n\r\n  return (\r\n    <MapView\r\n      style={{flex: 1}}\r\n      initialRegion={{\r\n        latitude: 42,\r\n        longitude: 30,\r\n        latitudeDelta: 1,\r\n        longitudeDelta: 1,\r\n      }}\r\n      onMarkerPress={onMarkerPress}\r\n      onPress={onPress}\r\n    >\r\n      <Marker coordinate={{ longitude: 30, latitude: 42}} \/>\r\n    <\/MapView>\r\n  );\r\n}\n```\n\n\n### Steps to reproduce\n\n* Implement the callbacks for onPress and onMarkerPress.\r\n* In the onMarkerPress callback use stopPropagation\r\n* press on the marker.\n\n### Expected result\n\n The onMarkerPress is called, the onPress callback should be not.\n\n### Actual result\n\nBoth callbacks are called.\n\n### React Native Maps Version\n\n1.8.0\n\n### What platforms are you seeing the problem on?\n\niOS (Apple Maps)\n\n### React Native Version\n\n0.71.8\n\n### What version of Expo are you using?\n\nNot using Expo\n\n### Device(s)\n\niPhone 15\n\n### Additional information\n\n_No response_","comments":[],"labels":["bug"]},{"title":"Android: Callout items not pressable, unable to load image in callout view","body":"### Summary\n\nIn MapView component custom marker's callout is not clickable. Inside callout unable to show image as well. This bug is reproducible only on Android, in iOS everything is working.\n\n### Reproducible sample code\n\n```TSX\nconst INITIAL_REGION = {\r\n    latitude: -36.848461,\r\n    longitude: 174.763336,\r\n    latitudeDelta: 0.01,\r\n    longitudeDelta: 0.01,\r\n  };\r\n  \r\nexport default function MapComp() {\r\n  return (\r\n    <MapView\r\n    userInterfaceStyle=\"light\"\r\n    provider={Platform.OS == \"ios\" ? PROVIDER_DEFAULT : PROVIDER_GOOGLE}\r\n    mapType=\"standard\"\r\n    ref={mapRef}\r\n    style={{ ...StyleSheet.absoluteFill, bottom: -22 }}\r\n    showsPointsOfInterest={false}\r\n    showsBuildings={false}\r\n    showsIndoors={false}\r\n    initialRegion={INITIAL_REGION}\r\n\r\n    >\r\n    {\r\n      markers?.map((item, index) => (\r\n        <Marker\r\n          coordinate={{\r\n            latitude: Number(item.loc?.lat),\r\n            longitude: Number(item.loc?.lng),\r\n          }}\r\n          tracksViewChanges\r\n          key={index}\r\n          onCalloutPress={() => {\r\n            scrollToIndex(item?.index);\r\n          }}\r\n        >\r\n          {item?.addressAry?.length > 1 ? (\r\n            <View style={styles.detailsCluster}>\r\n              <Text\r\n                style={{\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                {item?.addressAry?.length}\r\n              <\/Text>\r\n            <\/View>\r\n          ) : (\r\n            <TouchableOpacity\r\n              activeOpacity={0.8}\r\n              onPress={() => {\r\n                scrollToIndex(item?.index);\r\n              }}\r\n              style={{\r\n                zIndex: 1,\r\n              }}\r\n            >\r\n              <ImageBackground\r\n                source={imagePath.blankLoc}\r\n                style={{\r\n                  height: scaleSize(28),\r\n                  width: scaleSize(28),\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                resizeMode=\"contain\"\r\n              >\r\n                <FastImage\r\n                  source={{\r\n                    uri:\r\n                      IMAGE_URL + item?.addressAry[0]?.firstCategory?.icon,\r\n                    priority: FastImage.priority.normal,\r\n                    cache: FastImage.cacheControl.immutable,\r\n                  }}\r\n                  resizeMode={FastImage.resizeMode.contain}\r\n                  style={{\r\n                    height: scaleSize(16),\r\n                    width: scaleSize(16),\r\n                  }}\r\n                \/>\r\n              <\/ImageBackground>\r\n            <\/TouchableOpacity>\r\n          )}\r\n         \r\n          <Callout\r\n            style={{\r\n              padding: 4,\r\n              borderRadius: 2,\r\n              width: 180,\r\n            }}\r\n          >\r\n            {item?.addressAry?.map((itm, index) => (\r\n              <TouchableOpacity\r\n                key={String(index)}\r\n                hitSlop={{\r\n                  top: 18,\r\n                  right: 18,\r\n                  left: 18,\r\n                  bottom: 18,\r\n                }}\r\n                onPress={() => {\r\n                  scrollToIndex(itm?.index);\r\n                }}\r\n                activeOpacity={0.6}\r\n                style={styles.touch_cluster}\r\n              >\r\n               \r\n                  <FastImage\r\n                    source={{ uri: IMAGE_URL + itm?.firstCategory?.icon }}\r\n                    resizeMode=\"contain\"\r\n                    style={{ height: 18, width: 18 }}\r\n                  \/>\r\n         \r\n                <Text style={styles.bus_name} numberOfLines={1}>\r\n                  {itm.name}\r\n                <\/Text>\r\n              <\/TouchableOpacity>\r\n            ))}\r\n          <\/Callout>\r\n          \r\n        <\/Marker>\r\n      ))\r\n              }\r\n    <\/MapView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({})\n```\n\n\n### Steps to reproduce\n\n1. In android, Add custom marker in MapView\r\n2. In Marker, add a callout with TouchableOpacity\r\n3. TouchableOpacity onPress not working here \n\n### Expected result\n\nTouchableOpacity onPress should work as iOS devices\n\n### Actual result\n\n1. TouchableOpacity onPress not working on marker's callout\n\n### React Native Maps Version\n\n1.10.0\n\n### What platforms are you seeing the problem on?\n\nAndroid\n\n### React Native Version\n\n0.72.4\n\n### What version of Expo are you using?\n\nNot using Expo\n\n### Device(s)\n\nAndroid\n\n### Additional information\n\n_No response_","comments":["Yes this is a known big issue and has not been solved for years. Hopefully it will be solved.","Hi, I've created a repository based on the solution that I'm using in my current project. I hope you'd find it useful:\r\n[https:\/\/github.com\/GoktuqCan\/react-native-maps-touchables](https:\/\/github.com\/GoktuqCan\/react-native-maps-touchables)"],"labels":["bug"]},{"title":"React Native Maps With react-native-sensors Issues","body":"### Summary\n\nI'm trying to integrate react native Maps with react-native-sensors. Basically, I wanted the map to update the heading property when rotating the device, but whenever I run the map it keeps loading infinitely. \n\n### Reproducible sample code\n\n```TSX\nimport { orientation } from 'react-native-sensors'; \/\/ Import Gyroscope and Magnetometer sensors\r\nimport MapView from \"react-native-maps\"\r\n\r\n\r\n\r\n\r\n\r\nfunction NavigationScreen() {\r\n\r\n    const mapEl = useRef(null)\r\n    const [head,setHead] = useState(0)\r\n\r\n    useEffect(() => {\r\n\r\n        if (mapEl.current) {\r\n            const newCameraConfig = {\r\n            heading: head, \/\/ Atualize o heading com base nos dados de orienta\u00e7\u00e3o\r\n            };\r\n            mapEl.current.animateCamera(newCameraConfig, { duration: 10000 }); \/\/ Ajuste a dura\u00e7\u00e3o conforme necess\u00e1rio\r\n        }\r\n \r\n    },[head])\r\n\r\n    const handleOrientationChange = ({ yaw }) => {\r\n        setHead(yaw * (180 \/ Math.PI))\r\n      };\r\n    \r\n      const memoizedHandleOrientationChange = useMemo(() => handleOrientationChange, []); \/\/ Memoize the handler\r\n    \r\n      useEffect(() => {\r\n        const subscription = orientation.subscribe(memoizedHandleOrientationChange);\r\n    \r\n        return () => {\r\n          if (subscription) {\r\n            subscription.unsubscribe();\r\n          }\r\n        };\r\n      }, [memoizedHandleOrientationChange]);\r\n\r\n    return (\r\n        <MainContainer>\r\n            <MapContainer>\r\n                <MapView\r\n\r\n                    showsBuildings={false}\r\n                    showsIndoors={false}\r\n                    showsPointsOfInterest={false}\r\n                    showsIndoorLevelPicker={false}\r\n                    customMapStyle={mapstyle}\r\n                    showsUserLocation={true}\r\n                    ref={mapEl}\r\n                    loadingEnabled={true}\r\n                    onError={(error) => console.error('Erro no carregamento do mapa:', error)}\r\n                    \r\n                    minZoomLevel={20}\r\n                    initialCamera={{\r\n                        center: {\r\n                          latitude: 37.78825,\r\n                          longitude: -122.4324,\r\n                        },\r\n                        pitch: 0,\r\n                        heading: 0,\r\n                        altitude: 1000,\r\n                        zoom: 10,\r\n                      }}\r\n                    style={{ width: '100%', height: '100%' }}\r\n                \r\n                >\r\n                <\/MapView>\r\n            <\/MapContainer>\r\n        <\/MainContainer>\r\n    );\r\n}\n```\n\n\n### Steps to reproduce\n\nOpen the app with the animateCamera heading update \n\n### Expected result\n\nExpect to be able to rotate the map angle based on the device rotation\n\n### Actual result\n\nloading map infinitely. \n\n### React Native Maps Version\n\n1.9.1\n\n### What platforms are you seeing the problem on?\n\nAndroid\n\n### React Native Version\n\n0.72.5\n\n### What version of Expo are you using?\n\nNot using Expo\n\n### Device(s)\n\nXiaomi POCO X3 (Android 12)\n\n### Additional information\n\n_No response_","comments":["Hi @PedroGabrielCB, thanks for report but I don't think it's a library bug. The problem here is within react-native-sensors. If you put a console.log in handleOrientationChange fn you will see that it's being called too often. I was able to fix it by adding above your NavigationScreen\r\n\r\n``` jsx\r\nsetUpdateIntervalForType('orientation', 2000);\r\n```\r\nSimilar thing is done in react-native-sensor examples: https:\/\/github.com\/react-native-sensors\/react-native-sensors\/blob\/master\/examples\/KeepTheBallGame\/App.js\r\n\r\n2000 ms is too much because the delay is very visible but you can try out lower value and find a perfect one for your use case."],"labels":["bug"]},{"title":"Error when calling mapRef.current?.getCamera() using PROVIDER_GOOGLE on iOS","body":"### Summary\n\nI am implementing to handle zoom with getCamera(), however, when I use PROVIDER_GOOGLE on iOS I get an error and I did not find in the documentation if it is special for any platform\/kit.\n\n### Reproducible sample code\n\n```TSX\nconst mapRef = useRef(null);\r\n<MapView\r\n provider={PROVIDER_GOOGLE}\r\n ref={mapRef}\r\n>\r\n   \/\/\/\r\n<\/MapView>\r\n\/\/\/\/\/\/\/\/\/\/\/\/\/\r\n  const handleZoomIn = async () => {\r\n    const camera = await mapRef.current?.getCamera();\r\n    if (Platform.OS === 'android') {\r\n      camera.zoom += 1;\r\n    } else {\r\n      camera.altitude \/= 2;\r\n    }\r\n    mapRef.current?.animateCamera(camera);\r\n  };\n```\n\n\n### Steps to reproduce\n\nCreate a button to call handleZoomIn()\n\n### Expected result\n\nzoom as in android or iOS when PROVIDER_GOOGLE is not used.\n\n### Actual result\n\n![Simulator Screenshot - iPhone 15 Pro Max - 2024-01-18 at 12 03 25](https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/8054357\/c0b4bf90-efea-43b1-8e5a-c19585352b36)\r\n\n\n### React Native Maps Version\n\n1.9.1\n\n### What platforms are you seeing the problem on?\n\niOS (Google Maps)\n\n### React Native Version\n\n0.72.6\n\n### What version of Expo are you using?\n\nSDK 48\n\n### Device(s)\n\niPhone 15 Pro Max, Vivo y22s\n\n### Additional information\n\n_No response_","comments":[],"labels":["bug"]},{"title":"Blue dot bouncing around on android","body":"### Summary\r\n\r\nAlthough my device is stationary, the blue dot seems to constantly bounce around non stop. Seems like onUserLocationChange is stuck on a loop, and when logged the accuracy\/coordinates are always different than the previous value.\r\n\r\nThis is happening on both the simulator and all physical devices. Logging the user coordinates from our geolocation package looks normal, but for some reason react-native-maps cant seem to pinpoint the user coordinates and just keeps guessing every few seconds\r\n\r\nhttps:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/59587976\/f49b80ad-fb3c-49ea-bc7c-31cd142ff7d7\r\n\r\n\r\n\r\n### Reproducible sample code\r\n\r\n```TSX\r\n<MapView\r\n        ref={mapRef}\r\n        provider={PROVIDER_GOOGLE}\r\n        style={styles.map}\r\n        customMapStyle={mapStyle === 'light' ? lightModeMap : darkModeMap}\r\n        onPanDrag={() => {\r\n          if (selectedTeamMember) setSelectedTeamMember(undefined);\r\n        }}\r\n        onUserLocationChange={(val) => console.log(val.nativeEvent)}\r\n        showsCompass={true}\r\n        showsUserLocation\r\n        maxZoomLevel={20}\r\n        showsMyLocationButton={false}\r\n        followsUserLocation={followUser}\r\n        onRegionChange={() => console.log('regionChanged')}\r\n        onRegionChangeComplete={() => console.log('regionChangeComplete')}\r\n        mapType={mapStyle === 'satellite' ? 'satellite' : 'standard'}\r\n        region={{\r\n          latitude: userGeoLocation.latitude || 0,\r\n          longitude: userGeoLocation.longitude || 0,\r\n          latitudeDelta: 0.01,\r\n          longitudeDelta: 0.01,\r\n        }}\r\n      >\r\n```\r\n\r\n\r\n### Steps to reproduce\r\n\r\nrun on an android device and zoom in to the blue dot and watch it dance\r\n\r\n### Expected result\r\n\r\nThe user location should be stationary as it is on ios if the device is not moving\r\n\r\n### Actual result\r\n\r\nThe blue dot is bouncing around.. it cant seem to get my precise loction\r\n\r\n### React Native Maps Version\r\n\r\n1.9.1\r\n\r\n### What platforms are you seeing the problem on?\r\n\r\nAndroid\r\n\r\n### React Native Version\r\n\r\n72.5\r\n\r\n### What version of Expo are you using?\r\n\r\nNot using Expo\r\n\r\n### Device(s)\r\n\r\npixel, all galaxies\r\n\r\n### Additional information\r\n\r\nI have precise location on, and we're using always on location","comments":["Hi @1kDustin can you please provide full reproducible code sample? What geolocation package + version are you using? Also are you sure it is not related to poor GPS signal strength?","@jan-kozinski this is happening on android even without using my geolocation package in the region. im sorry i should have removed that from the comment above. \r\n`<MapView\r\n        provider={PROVIDER_GOOGLE}\r\n        style={styles.map}\r\n        showsCompass={true}\r\n        showsUserLocation\r\n        maxZoomLevel={20}\r\n        showsMyLocationButton={false}\r\n        followsUserLocation={true}\r\n        onUserLocationChange={(e) =>\r\n          console.log(e.nativeEvent.coordinate?.latitude, e.nativeEvent.coordinate?.longitude)\r\n        }\r\n      >`\r\n     using this alone gives me different locations every 2-3 seconds in the logs for android alone. I've commented everything in the entire file other than the code pasted. the coordinates are coming straight from the native event, not my location package. its not poor GPS signal strength as the google maps app works fine, and this is happening for testers as well. I've noticed so far this doesnt happen on pixel devices.. seems to be on galaxy devices so far from what i've gathered"],"labels":["bug"]},{"title":"mapRef is undefiend at the first render","body":"### Summary\n\nWhen the user opens the app and grant permission for location, the user should be navigated to the current location, but it is not happening.\r\nCode for navigation \r\n```js\r\n          mapRef?.current?.animateToRegion(region, 1000);\r\n\r\n```\n\n### Reproducible sample code\n\n```TSX\nimport {\r\n  Alert,\r\n  Image,\r\n  Platform,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n} from 'react-native';\r\nimport React, {useEffect, useRef, useState, useCallback, useMemo} from 'react';\r\nimport Geolocation from 'react-native-geolocation-service';\r\nimport {PERMISSIONS, request, openSettings} from 'react-native-permissions';\r\nimport MapView, {PROVIDER_GOOGLE, Marker} from 'react-native-maps';\r\n\r\n\r\nconst Home = () => {\r\n\r\n\r\n\r\n\r\n\r\n  const getCurrentLocation = () => {\r\n    Geolocation.getCurrentPosition(\r\n      pos => {\r\n        if (pos && pos?.coords) {\r\n          const crd = pos.coords;\r\n          logger.log({\r\n            crd,\r\n          });\r\n          let region = {\r\n            latitude: crd?.latitude,\r\n            longitude: crd?.longitude,\r\n            latitudeDelta: 0.0421,\r\n            longitudeDelta: 0.0421,\r\n          };\r\n          mapRef?.current?.animateToRegion(region, 1000);\r\n         \r\n        }\r\n      },\r\n      error => {\r\n        logger.log({error});\r\n      \r\n      },\r\n      {enableHighAccuracy: true, timeout: 15000, maximumAge: 10000},\r\n    );\r\n  };\r\n\r\n\r\n  const mapRef = useRef();\r\n\r\n  const checkLocationPermissions = async () => {\r\n    request(\r\n      Platform.select({\r\n        android: PERMISSIONS.ANDROID.ACCESS_FINE_LOCATION,\r\n        ios: PERMISSIONS.IOS.LOCATION_WHEN_IN_USE,\r\n      }),\r\n    )\r\n      .then(response => {\r\n        logger.log('RESPONSE');\r\n        logger.log(response);\r\n     \r\n            getCurrentLocation();\r\n         })\r\n     \r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    checkLocationPermissions();\r\n  }, []);\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <View style={[styles.container, ]}>\r\n\r\n      <MapView\r\n        ref={mapRef}\r\n        style={styles.map}\r\n        initialRegion={{\r\n          latitude: 12.9,\r\n          longitude: 77.59,\r\n          latitudeDelta: 0.0421,\r\n          longitudeDelta: 0.0421,\r\n        }}\r\n        maxZoomLevel={20}\r\n        minZoomLevel={1}\r\n        \/\/ clusteringEnabled={false}\r\n        zoomControlEnabled={false}\r\n        clusterColor={colors.theme}\r\n        \/\/ showsUserLocation={true}\r\n        showsMyLocationButton={false}\r\n        followsUserLocation={false}\r\n        showsCompass={false}\r\n        moveOnMarkerPress={false}\r\n        scrollEnabled={true}\r\n        zoomEnabled={true}\r\n        pitchEnabled={true}\r\n        rotateEnabled={false}\r\n        mapType=\"standard\"\r\n        onMapReady={() => {\r\n          setIsMapReady(true);\r\n        }}\r\n        provider={PROVIDER_GOOGLE}>\r\n    \r\n      \r\n      <\/MapView>\r\n\r\n    <\/View>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    height: 400,\r\n    width: 400,\r\n    flex: 1,\r\n    position: 'relative',\r\n  },\r\n  map: {\r\n    flex: 1,\r\n  },\r\n\r\n\r\n});\n```\n\n\n### Steps to reproduce\n\nWhen the user grants location permission to the app the \n\n### Expected result\n\nuser should navigate to its current location \n\n### Actual result\n\nuser should navigate with the animation\n\n### React Native Maps Version\n\n1.8.4\n\n### What platforms are you seeing the problem on?\n\nAndroid\n\n### React Native Version\n\n0.72.8\n\n### What version of Expo are you using?\n\nNot using Expo\n\n### Device(s)\n\nsamsung f62\n\n### Additional information\n\n_No response_","comments":[],"labels":["bug"]},{"title":"Google Maps dragging\/panning not smooth on iOS","body":"### Summary\n\nGoogle Maps dragging\/panning is not smooth on iOS even when no markers are included. Using Expo 49 and tested on iPhone 15 Pro (iOS 17.2).\n\n### Reproducible sample code\n\n```TSX\nimport MapView, { PROVIDER_GOOGLE } from \"react-native-maps\";\r\n\r\nexport default function App() {\r\n  return (\r\n      <MapView\r\n        provider={PROVIDER_GOOGLE}\r\n        initialRegion={{\r\n          latitude: -33.865143,\r\n          longitude: 151.2099,\r\n          latitudeDelta: 0.0922,\r\n          longitudeDelta: 0.0421,\r\n        }}\r\n      \/>\r\n  );\r\n}\n```\n\n\n### Steps to reproduce\n\nCreate a simple component with a MapView which uses Google Maps as the provider. Open app on an iPhone.\n\n### Expected result\n\nMap panning and dragging should be smooth. At least as smooth as Google Maps in a browser.\n\n### Actual result\n\nMap panning and dragging is not smooth and appears to lag.\n\n### React Native Maps Version\n\n1.7.1\n\n### What platforms are you seeing the problem on?\n\niOS (Google Maps)\n\n### React Native Version\n\n0.72.6\n\n### What version of Expo are you using?\n\nSDK 48\n\n### Device(s)\n\niPhone 15 Pro\n\n### Additional information\n\n_No response_","comments":["It doesn't look like an issue with MapView. Can you please provide full reproducible code sample?\r\n\r\nhttps:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/68508047\/4255861a-6047-4b21-ac64-d596f8e8b2fc\r\n\r\n","Thank you for looking into it. I made a repo with full sample https:\/\/github.com\/awj5\/mapview-test\r\n\r\nI came across a comment from someone else saying to add `onPanDrag={() => {}}` which does seem to help. Also, I'm testing on iPhone 15 Pro. The pro models have higher screen refresh rates so not sure if that's related.","Hey @awj5 thanks to You for preparing the repo with reproducible code sample! Unfortunately I got some other responsibilities on my head right know but I wanted to let you know that I didn't forgot about your issue and will try to find a solution as soon as possible!","I'm having this pb too. `onPanDrag={() => {}}` is helping when keeping fingers and moving. But when releasing fps are dropping again.","It looks like we're having this issue as well. I'm using an iPhone 8 and no problems on it. But my teammate is using an iPhone 14 and it experiences a drop in frame rate. Maybe this has to do with the fact that these phones have a higher refresh rate? Anyone has an idea what the issue could be or how to investigate deeper?\r\n\r\nEDIT - After trying `onPanDrag={() => {}}` it seems much much better.","@gkpo is your teammate using an iPhone 14 or iPhone 14 Pro? The Pro models have a higher refresh rate.","14 Pro","Hi, constant 60 FPS on my end. Tested on physical iPhone 14 Pro and iPhone 12 mini. I don't see any difference regardless if the onPanDrag={()=>{}} is added. Unfortunately we can't render more than 60 FPS with google maps, as the Google SDK won't allow this.","@jan-kozinski are you sure you are testing on a 14 pro and not a regular 14? And if it is a pro is low battery mode off? There is a dramatic difference between the smoothness of a Google Maps embed in browser vs React Native app. Shouldn't we at least be seeing the same performance? The DoorDash app is a good example where the map pans at a very low frame rate.","Maybe a video demo of the issue would be good here, since performance and frame rate can be subjective\r\n","Here is a screen recording of the issue. First, you see the map panning in a React Native app and then I switch to Google Maps in the browser. Notice how the text on the map can be read while panning on the browser.\r\n\r\nhttps:\/\/drive.google.com\/file\/d\/189s5JUNrTSsrCiReaU4PB-DsrwabXJl6\/view?usp=sharing","yeah there clearly is something off, but I can't figure out why yet","> yeah there clearly is something off, but I can't figure out why yet\r\n\r\nThank you for looking into it!"],"labels":["bug"]},{"title":"Android Mapview really slow without markers","body":"### Summary\n\nHello, we were experiencing a slowdown issue on our map-based application that runs on iOS and Android when the number of markers on the map approached 20. Later, to test the issue, we removed the markers, but we realized that the slowdown was actually due to the map itself, not the markers. When scrolling the map right-left or zooming in and out, it becomes almost unusable.\n\n### Reproducible sample code\n\n```TSX\nimport React, {useCallback, useEffect, useRef, useState} from 'react';\r\nimport MapView, {Circle, Marker, PROVIDER_GOOGLE} from 'react-native-maps';\r\n <MapView\r\n        ref={mapRef}\r\n        style={styles.f1}\r\n        camera={initialCamera}\r\n        showsUserLocation={mapEnabled}\r\n        showsCompass={false}\r\n        showsMyLocationButton\r\n        showsBuildings={false}\r\n        userInterfaceStyle=\"light\"\r\n        tintColor=\"#6d00ff\"\r\n        customMapStyle={MAP_STYLE}\r\n        provider={PROVIDER_GOOGLE}\r\n        toolbarEnabled={false}\r\n        userLocationUpdateInterval={10000}\r\n        showsPointsOfInterest={false}\r\n        showsIndoors={false}\r\n        onUserLocationChange={e => {\r\n          setMockCheck(true);\r\n        }}\r\n        onRegionChangeComplete={location => {\r\n          if (getDistance(userLocation, location) > 60000) {\r\n            setUserLocation(location);\r\n          }\r\n        }}\r\n        onTouchStart={() => {\r\n          if (target !== null) {\r\n            onTimeLeftEnd();\r\n          }\r\n        }}>\r\n        {targetList.map(t => (\r\n          <Circle\r\n            key={`circle-${t.targetID}`}\r\n            center={{\r\n              latitude: t.targetLocation.latitude,\r\n              longitude: t.targetLocation.longitude,\r\n            }}\r\n            radius={t.radius}\r\n            fillColor={t.color}\r\n          \/>\r\n        ))}\r\n        {targetList.map(x => (\r\n          <Marker\r\n            key={`marker-${x.targetID}`}\r\n            coordinate={{\r\n              latitude: x.targetLocation.latitude,\r\n              longitude: x.targetLocation.longitude,\r\n            }}\r\n            onPress={async () => {\r\n              mapRef.current.animateCamera(\r\n                {\r\n                  center: {\r\n                    latitude: x.targetLocation.latitude,\r\n                    longitude: x.targetLocation.longitude,\r\n                  },\r\n                  pitch: 72, \/\/ E\u011fim de\u011feri\r\n                  heading: 0, \/\/ Y\u00f6n de\u011feri\r\n                  zoom: 20, \/\/ Yak\u0131nla\u015ft\u0131rma seviyesi\r\n                },\r\n                {duration: 500},\r\n              );\r\n              setTimeLeft(\r\n                moment(x.endDate, 'YYYY-MM-DDThh:mm:ssZ').diff(\r\n                  Date.now(),\r\n                  'seconds',\r\n                ),\r\n              );\r\n              setTargetAmount(isPremium ? x.pricePool : null);\r\n              setTarget(x);\r\n              try {\r\n                await httpPost('\/api\/pk\/settargetclick', {\r\n                  UID: userId,\r\n                  TargetId: x.targetID,\r\n                });\r\n                const response = await httpGet(\r\n                  '\/api\/pk\/gettargetclickers\/' + x.targetID,\r\n                );\r\n                setClickCount(response.data);\r\n              } catch (error) {}\r\n            }}>\r\n            {x.isCrowdedZone ? (\r\n              <Image source={crowdedMarker} style={styles.crowdedMarkerStyle} \/>\r\n            ) : !x.isExpreienceTarget ? (\r\n              <Image\r\n                source={userPlaceholderMarker}\r\n                style={styles.userPlaceholderMarkerStyle}\r\n              \/>\r\n            ) : (\r\n              <View style={styles.starMarkerContainer}>\r\n                <Ionicons\r\n                  name=\"star\"\r\n                  size={15}\r\n                  color=\"white\"\r\n                  style={styles.starMarkerStyle}\r\n                \/>\r\n              <\/View>\r\n            )}\r\n          <\/Marker>\r\n        ))}\r\n      <\/MapView>\n```\n\n\n### Steps to reproduce\n\nJust open map on android its really slow\n\n### Expected result\n\nwork with good performance\n\n### Actual result\n\nandroid app unusable\n\n### React Native Maps Version\n\n1.8.0\n\n### What platforms are you seeing the problem on?\n\nAndroid\n\n### React Native Version\n\n0.68.2\n\n### What version of Expo are you using?\n\nSDK 45\n\n### Device(s)\n\nAny android device\n\n### Additional information\n\n_No response_","comments":["@sercaneryaz in your code you're including lots of details about API calls, and even animation of camera among other things.... based on your description the bug is with an empty map... so can you please share an example that represents an empty map and see if it still is slow ? my assumption is that there is something else in your code slowing down the app not the map tiself "],"labels":["bug"]},{"title":"Problems loading MapView.","body":"### Summary\r\n\r\nProblems loading MapView.\r\n\r\nError: Unsupported top level event type \"topOnMapReady\" dispatched, js engine: hermes\r\nError: Unsupported top level event type \"topOnMapLoaded\" dispatched, js engine: hermes\r\n\r\n\"react\": \"18.2.0\",\r\n    \"react-native\": \"0.72.3\",\r\n    \"react-native-maps\": \"1.6.0\",\r\n\r\nWhen building on Android, the following error occurs. Please tell me the solution.\r\n\r\n Error: Unsupported top level event type \"topOnMapLoaded\" dispatched, js engine: hermes\r\n\r\n### Reproducible sample code\r\n\r\n```TSX\r\n<MapView\r\n      provider={\r\n          Platform.OS === 'android'\r\n          ? PROVIDER_GOOGLE\r\n          : undefined\r\n          }\r\n      style={styles.map}\r\n      initialRegion={{\r\n          latitude: 37.78825,\r\n          longitude: -122.4324,\r\n          latitudeDelta: 0.0922,\r\n          longitudeDelta: 0.0421,\r\n      }}\r\n      moveOnMarkerPress={false}\r\n\/>\r\n```\r\n\r\n\r\n### Steps to reproduce\r\n\r\nAfter MapView is loaded, If \bI touch or scroll the screen after the map is loaded, that error occurs.\r\n\r\n### Expected result\r\n\r\nA map with initialRegion is displayed.\r\n\r\n### Actual result\r\n\r\nError: Unsupported top level event type \"topOnMapReady\" dispatched, js engine: hermes\r\nError: Unsupported top level event type \"topOnMapLoaded\" dispatched, js engine: hermes\r\n\r\nIf you touch or scroll the screen after the map is loaded, that error occurs.\r\n\r\n### React Native Maps Version\r\n\r\n1.6.0\r\n\r\n### What platforms are you seeing the problem on?\r\n\r\nAndroid\r\n\r\n### React Native Version\r\n\r\n0.72.3\r\n\r\n### What version of Expo are you using?\r\n\r\nNot using Expo\r\n\r\n### Device(s)\r\n\r\nGalaxy note10+\r\n\r\n### Additional information\r\n\r\n_No response_","comments":["Facing the same issue \r\nany update?","facing same issue any update? ","I haven't solved it yet..","Hi, thanks for reporting! I'll look into that","@maxform-labs can you please test again with the latest version of the library ? looks like a react-native initialisation issue and could be that it's solved in the latest version"],"labels":["bug"]},{"title":"Android AnimatedToRegion not always working","body":"### Summary\n\nIn componentDidMount I am triggering my focus function and i am be able to show that location, however when i try it with a button to another location, same function doesn't work.\r\nI can see the \"pp\" log everytime but it doesnt make any affection.\r\nIn ios it works fine.\n\n### Reproducible sample code\n\n```TSX\nfocusLocation(location) {\r\n    if (location) {\r\n      this.setState({ region: location });\r\n        if (this.state.gms) {\r\n          console.log(\"pp\")\r\n\r\n          this.refs.map?.animateToRegion({\r\n            latitude: location.latitude,\r\n            longitude: location.longitude,\r\n            latitudeDelta: location.latitudeDelta,\r\n            longitudeDelta: location.longitudeDelta\r\n          }, 500);\r\n      }\r\n    }\r\n  }\n```\n\n\n### Steps to reproduce\n\nWhenever i try to trigger it with my button, it gets into function but no affect on the map\n\n### Expected result\n\nFocusing to new Region\n\n### Actual result\n\nIt doesn't focus when i try\n\n### React Native Maps Version\n\n0.27.1\n\n### What platforms are you seeing the problem on?\n\nAndroid\n\n### React Native Version\n\n0.70.10\n\n### What version of Expo are you using?\n\nNot using Expo\n\n### Device(s)\n\nAndroid 13\n\n### Additional information\n\n_No response_","comments":["Hi, thabks for reporting this! What is the location passed in as an argument? Are you sure it always have the latitudeDelta and longtitudeDelta? I treid to reproduce on my end. I faced the same issue when I called the focusLocation as mapview onPress\r\n```\r\n<MapView\r\n          provider={this.props.provider}\r\n          style={styles.map}\r\n          initialRegion={this.state.region}\r\n          showsUserLocation\r\n          onPress={e => this.focusLocation(e.nativeEvent)}\r\n          ref={this.mapRef}\r\n        \/>\r\n```\r\nbecause the latitudeDelta and longtitudeDelta were undefined. Can you provide full reproducible code? Also if you could please attach a recording and \/ or logcat logs I would find a solution for you faster :D","This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. If the issue remains relevant, simply comment `Still relevant` and the issue will remain open. Thank you for your contributions."],"labels":["bug","stale"]},{"title":"onPanDrag doesn't fire while camera animating with animateCamera, cancel camera animation not implemented.","body":"### Summary\n\nI want to cancel camera animation when user interacts with map (pan\/zoom).\r\n\r\nI'm attempting to implement a feature like iOS maps where camera follows user location until user interacts with map. Location is passed to my component that wraps map view at some throttle interval (eg. 5 seconds) and my animation time matches that timing to allow for smooth movement. \r\n\r\nOut of the box followsUserLocation would be ideal, but it 1) Is not smooth between location updates, 2) docs say it doesn't work on Android. So I'm essentially recreating the functionality with moving marker and camera.\r\n\r\n\n\n### Reproducible sample code\n\n```TSX\nimport { useEffect, useState, useCallback ,useRef } from 'react';\r\nimport MapView from 'react-native-maps';\r\n\r\nconst location = {\r\n  latitude: 40.1000000,\r\n  longitude: -84.1000000,\r\n};\r\n\r\nconst initialCamera = {\r\n  center: {\r\n    latitude: 39.1000000,\r\n    longitude: -86.1000000,\r\n  },\r\n  pitch: 0,\r\n  heading: 0,\r\n  altitude: 1_000_000,\r\n}\r\n\r\nexport default function App() {\r\n  const mapRef = useRef(null)\r\n  const [userDidInteract, setUserDidInteract] = useState(false)\r\n\r\n  const animateCamera = useCallback(() => {\r\n    const c = {\r\n      center: {\r\n        latitude: location.latitude,\r\n        longitude: location.longitude,\r\n      },\r\n      pitch: 0,\r\n      heading: 0,\r\n      altitude: 100_000,\r\n    }\r\n    mapRef.current.animateCamera(c, { duration: 5000 });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      animateCamera()\r\n    }, 1000)\r\n  }, [animateCamera]);\r\n\r\n  const onPanDrag = useCallback(async () => {\r\n    \/\/ Doesn't fire during animation\r\n    if (!userDidInteract) {\r\n      const currentCamera = await mapRef.current.getCamera()\r\n      \/\/ Cancel animation workaround\r\n      mapRef.current.animateCamera(currentCamera, { duration: 1 });\r\n      setUserDidInteract(true)\r\n    }\r\n  }, [userDidInteract])\r\n\r\n  return (\r\n    <MapView\r\n      style={{flex: 1}}\r\n      ref={mapRef}\r\n      initialCamera={initialCamera}\r\n      onPanDrag={onPanDrag}\r\n    \/>\r\n  );\r\n}\n```\n\n\n### Steps to reproduce\n\nAnimate camera and do a user pan gesture during animation.\n\n### Expected result\n\nExpect onPanDrag to fire. Then, if it did, in the onPanDrag handler I'd like to cancel camera animation.\n\n### Actual result\n\nonPanDrag callback never fires while animating. Aside, I'm able to achieve cancel with a workaround `mapRef.current.animateCamera(currentCamera, { duration: 1 })`. Duration `0` doesn't work as expected as it still blocks gesture callbacks for some duration after stopping. \n\n### React Native Maps Version\n\n1.8.0\n\n### What platforms are you seeing the problem on?\n\niOS (Apple Maps)\n\n### React Native Version\n\n0.72.7\n\n### What version of Expo are you using?\n\nSDK 48\n\n### Device(s)\n\niPhone 14 Pro\n\n### Additional information\n\nEXPO 49","comments":["I've run across the same problem. I'm implementing a workaround that puts a transparent layer over the map and using onTouchStart I fire the function you pointed out to cancel the animation\r\n\r\n`mapRef.current.animateCamera(currentCamera, { duration: 1 });`\r\n\r\nI'm only rendering that hidden layer while camera animation occurs so you can pan and drag right after. \r\n","That was one of my early workarounds, but I found behavior unacceptable: user has to tap, release, THEN pan vs immediately initiate a pan\/zoom. I ended up driving my camera animation off of the marker animation progress with setCamera instead of animateCamera. Then no transparent layer necessary. Curious if you find a better way though.","I agree that behavior is not user friendly. How are you calculating the camera center? Calculating the line between the old and new Coords and finding the position based on elapsed animation time? ","I'm running an animation loop on cameraAnimationProgress (0 to 1), attaching a listener to get callbacks for every animation progress tick. Before running loop, I get current camera with `await mapRef.current.getCamera()`. In the callback, calculate all my next camera attributes based on current camera, coords from instantaneous marker position (`markerCoord.__getValue()`) and camera animation progress fed to callback. Then set without animation `mapRef.current.setCamera(nextCamera)`. \r\n\r\nAll this keeps camera glued to the marker. Animating TO the marker can be done with the same code, but running an animation on the camera before the loop. All this frees up onTouchStart to fire naturally so i can toggle the 'following' state. When that state changes, I stop animation, remove listeners, etc. \r\n\r\nIt's pretty complicated tbh. I can go into more detail if you want.\r\n","Have you found this method that works smoothly for android? It's looking great on iOS. I am using the previous method I mentioned for Android still as Android seems to have a harder time keeping up with that listener and animating smoothly. \r\n\r\nFor anyone else who is reading this. You can hook into the AnimatedRegion class using \r\n`AnimatedRegion.addListener(callback: (region: Region) => void)`\r\n\r\nI implemented it like this for iOS: \r\n\r\n```  \r\nconst [coord, setCoord] = useState(new AnimatedRegion({\r\n    latitude,\r\n    longitude,\r\n    latitudeDelta,\r\n    longitudeDelta\r\n}))\r\n\r\n\/\/ ....Attach listener when you want to follow a specific marker\r\nif(isTrackingMarker){\r\n\r\n  const newCoordinate = {\r\n    latitude,\r\n    longitude,\r\n    latitudeDelta,\r\n    longitudeDelta,\r\n    duration\r\n  }\r\n\r\n  \/\/only add one listener at a time\r\n  if(listenerId !== null){\r\n   const id = coord.addListener(animateCamera)\r\n   setListenerId(v=>id)\r\n  }\r\n  coord.timing(newCoordinate).start()\r\n}\r\n\r\n\/\/clearing listener on unmount\r\nuseEffect(() => {\r\n    return ()=>{ \r\n     if(listenerId){\r\n       coord.removeListener(listenerId)\r\n     }\r\n   }\r\n  }, []);\r\n\r\nconst animateCamera = (r: Region) => {\r\n  \/\/If the camera reaches the new coordinate, unmount it\r\n  if (r.latitude === coord.latitude && r.longitude === coord.longitude) {\r\n    \/\/clear listeners\r\n    l.trace('clearing listeners for camera: ' + listenerIds.length);\r\n    coord.removeListener(listenerId);\r\n    setListenerId((v) => null);\r\n  }\r\n    const camera: Camera = {\r\n      center: {\r\n        latitude: r.latitude,\r\n        longitude: r.longitude\r\n      },\r\n      pitch: 0,\r\n      heading: 0,\r\n      altitude: 1000,\r\n      zoom: 17\r\n    };\r\n    mapRef.current.setCamera(camera, { duration: 1 });\r\n};\r\n```","I haven't attempted Android, but I may accept degraded performance\/behavior given its a much smaller user base. Is it Android or Google maps on iOS that's not smooth?","Android specifically. The animation process is slightly different to animate markers for android. For now, our user base is less than 10% Android, so we are considering it an acceptable user experience hit for right now. \r\n\r\nI will say the animation loop idea was fantastic! I didn't realize there was an addListener method right on the AnimatedRegion. And for the number of updates being performed, it really runs incredibly smooth."],"labels":["bug"]},{"title":"MapKit Globe view, camera resets to 0","body":"### Summary\n\nWhen viewing a map in globe view, occasionally the camera\/region get reset back to 0.\r\n\r\nHere I'm trying to drag the north pole into view, but when I get too far north it resets back out\r\n![Simulator Screen Recording - 13 Mini - 2023-11-06 at 15 17 35](https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/4117\/dd88b37a-7919-47c6-bae7-20e15c60c23f)\r\n\r\nlooks like it's related to this code:\r\nhttps:\/\/github.com\/react-native-maps\/react-native-maps\/blob\/4514bd13a34e20f7e82e7de0b44224b6160195d5\/ios\/AirMaps\/AIRMapManager.m#L1167-L1174\n\n### Reproducible sample code\n\n```TSX\nimport { Platform } from \"react-native\";\r\nimport MapView from \"react-native-maps\";\r\n\r\nexport function DevMap_camResetBugRepro() {\r\n  const mapType =\r\n    Platform.OS === \"ios\"\r\n      ? (\"hybridFlyover\" as any) \/\/ NOTE: casting to any because this is not in the type definition, but it works to set the map type to a 3D globe\r\n      : \"standard\";\r\n\r\n  return (\r\n    <MapView\r\n      style={{ flex: 1 }}\r\n      mapType={mapType}\r\n      initialRegion={{\r\n        latitude: 14,\r\n        longitude: 30,\r\n        latitudeDelta: 156,\r\n        longitudeDelta: 173,\r\n      }}\r\n    \/>\r\n  );\r\n}\n```\n\n\n### Steps to reproduce\n\nDrag the north pole into view\n\n### Expected result\n\nsee the north pole\n\n### Actual result\n\nregion\/camera resets back out to latitude 0\n\n### React Native Maps Version\n\n1.7.1\n\n### What platforms are you seeing the problem on?\n\niOS (Apple Maps)\n\n### React Native Version\n\n0.72.3\n\n### What version of Expo are you using?\n\nSDK 48\n\n### Device(s)\n\niPhone 13 mini\n\n### Additional information\n\n_No response_","comments":["also related: https:\/\/github.com\/react-native-maps\/react-native-maps\/blob\/4514bd13a34e20f7e82e7de0b44224b6160195d5\/ios\/AirMaps\/AIRMapManager.m#L1090-L1093","looks like this is the code that triggers the zoom out:\r\nhttps:\/\/github.com\/react-native-maps\/react-native-maps\/blob\/4514bd13a34e20f7e82e7de0b44224b6160195d5\/ios\/AirMaps\/AIRMapManager.m#L951-L956","Workaround:\r\n```tsx\r\nexport function DevMap_camResetBugRepro() {\r\n  return (\r\n    <MapView\r\n      style={{ flex: 1 }}\r\n      mapType={\r\n        Platform.OS === \"ios\"\r\n          ? (\"hybridFlyover\" as any) \/\/ NOTE: casting to any because this is not in the type definition, but it works to set the map type to a 3D globe\r\n          : \"standard\"\r\n      }\r\n      minZoomLevel={-Number.MAX_SAFE_INTEGER}\r\n      maxZoomLevel={Number.MAX_SAFE_INTEGER}\r\n      initialRegion={{\r\n        latitude: 14,\r\n        longitude: 30,\r\n        latitudeDelta: 156,\r\n        longitudeDelta: 173,\r\n      }}\r\n    \/>\r\n  );\r\n}\r\n```","Hi, that's because the calculation of zoom level doesn't take into account the map's rotation. I'll try to find a better algorithm","@jan-kozinski yes this seems like a clear bug ... specifically apple maps code was introduced before 3d maps were available.\r\n\r\nthere are two ways to could go about\r\n1. move away from this algorithem to apple's introduced method setCameraZoomRange \r\nhttps:\/\/developer.apple.com\/documentation\/mapkit\/mkmapview\/3114302-setcamerazoomrange?language=objc\r\nsupported since iOS 13, but requires rethinking the logic since it's in meters \r\n\r\n2. simply disable max\/min zoom logic for globe view until we implement 1 correctly.\r\n","The problem lays a bit deeper than just the map rotation. The hybrid flyover map is a globe without mercator projection. The cuurent zoom counting algo is designed for flat maps projected with mercator. I can't find any formula for globe zoom or even scale. \r\n\r\nThanks for advice @salah-ghanim , I think we can use camera zoom range approach for hybidFlyover and satteliteFlyover maps, with min camera zoom range in meters being 2^minZoomLevel, max being being 2^maxZoomLevel and leave the original algorithm for other map types. I'll put up a PR","Hi @subtleGradient I made a fix so you might want to see if that addresses your issue in PR #4892","For what it's worth, it also happens on the South Pole. Bummer"],"labels":["bug"]},{"title":"iOS: App crashes immediately when minZoomLevel is set to around 5","body":"### Summary\n\nThe application in our company uses the package and started crashing immediately when the map is open.\r\nWe started seeing these crash events in Bugsnag when iOS 17 was released.\r\nThere are 2 conditions for this: \r\n- minZoomLevel is set to 4,5,6 ( so around 5 )\r\n- the iPhone is using the `DisplayZoom` setting ( Display & Brightness ) set to `Larger Text`.\r\n\r\nThis results in an infinite loop in the native code.\r\nHere is a small portion of the stacktrace.\r\n\r\n\/Users\/vagrant\/git\/node_modules\/react-native-maps\/lib\/ios\/AirMaps\/AIRMap.m:396 - -[AIRMap setRegion:animated:]\r\n\/Users\/vagrant\/git\/node_modules\/react-native-maps\/lib\/ios\/AirMaps\/AIRMapManager.m:1227 - -[AIRMapManager setCenterCoordinate:zoomLevel:animated:mapView:]\r\n\/Users\/vagrant\/git\/node_modules\/react-native-maps\/lib\/ios\/AirMaps\/AIRMapManager.m:0 - -[AIRMapManager mapView:regionDidChangeAnimated:]\r\n\/Users\/vagrant\/git\/node_modules\/react-native-maps\/lib\/ios\/AirMaps\/AIRMap.m:396 - -[AIRMap setRegion:animated:]\r\n\/Users\/vagrant\/git\/node_modules\/react-native-maps\/lib\/ios\/AirMaps\/AIRMapManager.m:1227 - -[AIRMapManager setCenterCoordinate:zoomLevel:animated:mapView:]\r\n\/Users\/vagrant\/git\/node_modules\/react-native-maps\/lib\/ios\/AirMaps\/AIRMapManager.m:0 - -[AIRMapManager mapView:regionDidChangeAnimated:]\r\n\/Users\/vagrant\/git\/node_modules\/react-native-maps\/lib\/ios\/AirMaps\/AIRMap.m:396 - -[AIRMap setRegion:animated:]\n\n### Reproducible sample code\n\n```TSX\nreturn <SafeAreaView\r\n            style={[styles.container, {paddingTop: 16}]}\r\n            edges={['top', 'bottom']}\r\n        >\r\n            <MapView\r\n                minZoomLevel={Platform.OS === 'ios' ? 2 : 5} \/\/ This fixed it using only 2\r\n                onPress={() => {\r\n                    Keyboard.dismiss();\r\n                }}\r\n                onLayout={(event) => {\r\n                    if (!layoutInitialized) {\r\n                        layoutInitialized = true;\r\n                        layout = event.nativeEvent.layout;\r\n                    }\r\n                }}\r\n                provider={this.state.mapProvider}\r\n                onMapReady={this.onMapLayout}\r\n                ref={(ref) => {\r\n                    this.map = ref;\r\n                }}\r\n                onRegionChangeComplete={async (region) => {\r\n                    pinsStore.updateRegion(region)\r\n                }}\r\n                rotateEnabled={false}\r\n                initialRegion={globalStore.defaultRegion}\r\n<\/MapView>\r\n<\/SafeAreaView>\n```\n\n\n### Steps to reproduce\n\n1. Set the `minZoomLevel` property to 4,5 or 6\r\n2. Enable the `LargerText` option of the `Display Zoom` setting on the iPhone ( can be done in a simulator too, in the Developer menu )\r\n\n\n### Expected result\n\nThe application should not crash.\n\n### Actual result\n\nThe application crashes with an error:\r\n\"EXC_BAD_ACCESS in Map\r\nStack overflow in (null)\" because of the infinite loop.\n\n### React Native Maps Version\n\n1.8.0\n\n### What platforms are you seeing the problem on?\n\niOS (Google Maps)\n\n### React Native Version\n\n0.71.7\n\n### What version of Expo are you using?\n\nNot using Expo\n\n### Device(s)\n\nmostly Pros ( 11, 12, 13, 14, 15 Pros) using the setting mentioned above\n\n### Additional information\n\n_No response_","comments":["We're also able to reproduce this bug","We are also having this problem","same here with:\r\n`\"react-native\": \"0.70.6\",\r\n\"react-native-maps\": \"^1.8.0\",`","@alexander-ivanov-ampeco @egealpay @JungHsuan @techied I just tested on my physical device with iOS 17.1.1 \r\n\r\nThis is the code I used:\r\n```JSX\r\nimport MapView, {PROVIDER_GOOGLE} from 'react-native-maps';\r\nimport {StyleSheet, View} from 'react-native';\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    ...StyleSheet.absoluteFillObject,\r\n    height: '100%',\r\n    width: '100%',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n  },\r\n  map: {\r\n    ...StyleSheet.absoluteFillObject,\r\n  },\r\n});\r\n\r\nexport default () => (\r\n  <View style={styles.container}>\r\n    <MapView\r\n      provider={PROVIDER_GOOGLE} \/\/ remove if not using Google Maps\r\n      style={styles.map}\r\n      minZoomLevel={5}\r\n      region={{\r\n        latitude: 37.78825,\r\n        longitude: -122.4324,\r\n        latitudeDelta: 0.015,\r\n        longitudeDelta: 0.0121,\r\n      }}\r\n    \/>\r\n  <\/View>\r\n);\r\n```\r\n\r\n\r\nand this is the output of \r\n`yarn react-native info`\r\n\r\n> OS: macOS 14.1.1\r\n>     CPU: (10) arm64 Apple M1 Pro\r\n>     Memory: 544.23 MB \/ 32.00 GB\r\n>     Shell: 5.9 - \/bin\/zsh\r\n>   Binaries:\r\n>     Node: 18.17.0 - \/var\/folders\/9x\/9xzxgmhn75q66kr2x3n691hw0000gn\/T\/yarn--1700251434803-0.1752008978877191\/node\r\n>     Yarn: 1.22.19 - \/var\/folders\/9x\/9xzxgmhn75q66kr2x3n691hw0000gn\/T\/yarn--1700251434803-0.1752008978877191\/yarn\r\n>     npm: 9.6.7 - ~\/.nvm\/versions\/node\/v18.17.0\/bin\/npm\r\n>     Watchman: 2023.05.22.00 - \/opt\/homebrew\/bin\/watchman\r\n>   Managers:\r\n>     CocoaPods: 1.12.1 - \/Users\/salah\/.rbenv\/shims\/pod\r\n>   SDKs:\r\n>     iOS SDK:\r\n>       Platforms: DriverKit 23.0, iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0\r\n>     Android SDK: Not Found\r\n>   IDEs:\r\n>     Android Studio: Electric Eel 2022.1.1 Patch 2 Electric Eel 2022.1.1 Patch 2\r\n>     Xcode: 15.0.1\/15A507 - \/usr\/bin\/xcodebuild\r\n>   Languages:\r\n>     Java: 11.0.19 - \/opt\/homebrew\/opt\/openjdk@11\/bin\/javac\r\n>   npmPackages:\r\n>     @react-native-community\/cli: Not Found\r\n>     react: 18.2.0 => 18.2.0 \r\n>     react-native: 0.71.7 => 0.71.7 \r\n>     react-native-macos: Not Found\r\n\r\n\r\n\r\nPlease double check in case the latest iOS version solved the issue or provide a full repository with the bug reproducible out of the box ","We're also experiencing this issue with any minZoomLevel above 10. We've encountered this issue on iPhone 15 Pro with iOS 17.2 (both in the Simulator and on a physical device). Here's a repository to a [demo project](https:\/\/github.com\/robert-asystyou\/React-Native-Maps-IOS-Bug-Demo). In this project, I have the minZoomLevel set to 17 (the value our application uses). The app immediately crashes and XCode opens the AIRMap.m file with an `EXC_BAD_ACCESS` error. If you set the minZoomLevel to 10 (or below, I presume. I didn't do much testing with varying the values), the application runs fine.\r\n\r\nBelow is the output from `react-native info`\r\n\r\n> System:\r\n    OS: macOS 14.2\r\n    CPU: (8) arm64 Apple M1\r\n    Memory: 105.59 MB \/ 8.00 GB\r\n    Shell: 5.9 - \/bin\/zsh\r\n  Binaries:\r\n    Node: 18.12.1 - \/usr\/local\/bin\/node\r\n    Yarn: Not Found\r\n    npm: 8.19.2 - \/usr\/local\/bin\/npm\r\n    Watchman: 2023.01.02.00 - \/opt\/homebrew\/bin\/watchman\r\n  Managers:\r\n    CocoaPods: 1.14.3 - \/Users\/[redacted]\/.rvm\/gems\/ruby-2.7.6\/bin\/pod\r\n  SDKs:\r\n    iOS SDK:\r\n      Platforms: DriverKit 23.2, iOS 17.2, macOS 14.2, tvOS 17.2, watchOS 10.2\r\n    Android SDK: Not Found\r\n  IDEs:\r\n    Android Studio: Not Found\r\n    Xcode: 15.1\/15C65 - \/usr\/bin\/xcodebuild\r\n  Languages:\r\n    Java: Not Found\r\n  npmPackages:\r\n    @react-native-community\/cli: Not Found\r\n    react: 18.2.0 => 18.2.0 \r\n    react-native: 0.71.11 => 0.71.11 \r\n    react-native-macos: Not Found\r\n  npmGlobalPackages:\r\n    *react-native*: Not Found","We are having this issue. Maps crashes the app when minZoomLevel is set to any level 1-16, which makes the package unusable. The app does not crash with minZoomLevel is commented out. Upon crash XCode opens the AIRMap.m file with an EXC_BAD_ACCESS error. \r\n\r\nThis is using standard font size on an iPhone 15 Pro Simulator running iOS 17.0.1\r\n\r\n> \"react-native\": \"0.72.6\"\r\n> \"react-native-maps\": \"^1.9.1\"\r\n\r\n","I too am running into the same problem as @edumana setting any `minZoomLevel` on IOS is causing the app to crash in production and in dev its throwing an EXC_BAD_ACCESS error in the `AIRMap.m` file.\r\n\r\nA temporary workaround I've found has been to use the `fitToSuppliedMarkers` method to somewhat zoom into the marker (I only display one marker at a time)"],"labels":["bug"]},{"title":"App crashes when it is in background for more than 10 minutes","body":"### Summary\r\n\r\nI have created a new react native application with importing map view only,\r\nWhen I go in the background and come after 10 minutes it is restarting the application.\r\n\r\nAlso it is happening for first time only.\r\n\r\nThere are no background applications running.\r\n\r\nRAM usage when application is in the background is 300-400 MB.\r\n\r\nWithout the mapview it is running perfectly fine.\r\n\r\n### Reproducible sample code\r\n\r\n```TSX\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport React from 'react';\r\nimport MapView, { Marker, PROVIDER_GOOGLE } from 'react-native-maps';\r\n\r\nconst App = () => {\r\n  return (\r\n    <MapView\r\n      scrollEnabled={false}\r\n      zoomEnabled={true}\r\n      provider={PROVIDER_GOOGLE} \/\/ remove if not using Google Maps\r\n      style={{ height: 400, width: '100%', marginTop: 20 }}\r\n      region={{\r\n        latitude: 21.170240,\r\n        longitude: 72.831062,\r\n        latitudeDelta: 0.015,\r\n        longitudeDelta: 0.0121,\r\n      }}>\r\n      <Marker\r\n        coordinate={{\r\n          latitude: 21.170240,\r\n          longitude: 72.831062,\r\n\r\n        }}\r\n        pinColor={'red'} \/\/ any color\r\n      \/>\r\n    <\/MapView>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\nconst styles = StyleSheet.create({});\r\n```\r\n\r\n\r\n### Steps to reproduce\r\n\r\nRun above code and go in the background in android for 10 minutes\r\n\r\n### Expected result\r\n\r\nShould display mapview\r\n\r\n### Actual result\r\n\r\nRestart the application\r\n\r\n### React Native Maps Version\r\n\r\n1.18.0\r\n\r\n### What platforms are you seeing the problem on?\r\n\r\nAndroid\r\n\r\n### React Native Version\r\n\r\n0.72.5\r\n\r\n### What version of Expo are you using?\r\n\r\nNot using Expo\r\n\r\n### Device(s)\r\n\r\nPixel 6a\r\n\r\n### Additional information\r\n\r\n_No response_","comments":["A few questions to help narrow things down.\r\nWhat do you mean by \r\n_Also it is happening for first time only._ \r\nDo you just minimize the app and leave the phone for 10 min or do you go do something else on the phone?\r\nHow exactly are you measuring the RAM usage?\r\nWhat Android version is running on your Pixel 6a?\r\n","> A few questions to help narrow things down. What do you mean by _Also it is happening for first time only._ Do you just minimize the app and leave the phone for 10 min or do you go do something else on the phone? How exactly are you measuring the RAM usage? What Android version is running on your Pixel 6a?\r\n\r\n1. Yes we are not using any other application in background\r\n2. We are checking RAM usage from android studio profiler\r\n3. Android 13\r\n","This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. If the issue remains relevant, simply comment `Still relevant` and the issue will remain open. Thank you for your contributions.","Still relevent"],"labels":["bug"]},{"title":"this.getNativeComponent is not a function (it is undefined)","body":"### Summary\r\n\r\nI am trying to use `<Polyline \/>` component, however the app crashes with the `this.getNativeComponent is not a function (it is undefined)` Currently crashing on android, I haven't tried on iOS.\r\n\r\n![Screenshot_20231009-095255_pow-app-2](https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/44670022\/a299fca2-160d-4c44-9f17-d220f563f844)\r\n\r\n### Reproducible sample code\r\n\r\n```TSX\r\nimport MapView, { PROVIDER_GOOGLE, Polyline } from 'react-native-maps';\r\n\r\nconst Map = () => {\r\n  return (\r\n    <MapView\r\n      provider={PROVIDER_GOOGLE}\r\n      initialRegion={{\r\n        latitude: 37.78825,\r\n        longitude: -122.4324,\r\n        latitudeDelta: 0.0922,\r\n        longitudeDelta: 0.0421,\r\n      }}\r\n      style={{ height: '100%', width: '100%' }}\r\n    >\r\n      <Polyline\r\n        coordinates={[{\"latitude\": 40.44375, \"longitude\": -79.95392}, {\"latitude\": 40.44355, \"longitude\": -79.95368}, {\"latitude\": 40.44327, \"longitude\": -79.95355}, {\"latitude\": 40.44329, \"longitude\": -79.95345}, {\"latitude\": 40.44317, \"longitude\": -79.9534}, {\"latitude\": 40.44313, \"longitude\": -79.95336}, {\"latitude\": 40.44305, \"longitude\": -79.95316}, {\"latitude\": 40.44301, \"longitude\": -79.95313}, {\"latitude\": 40.44298, \"longitude\": -79.95307}, {\"latitude\": 40.44259, \"longitude\": -79.95261}, {\"latitude\": 40.44255, \"longitude\": -79.95265}, {\"latitude\": 40.44244, \"longitude\": -79.95262}, {\"latitude\": 40.4424, \"longitude\": -79.95254}, {\"latitude\": 40.44238, \"longitude\": -79.95248}, {\"latitude\": 40.44239, \"longitude\": -79.9524}, {\"latitude\": 40.4424, \"longitude\": -79.95239}, {\"latitude\": 40.44231, \"longitude\": -79.95227}, {\"latitude\": 40.4421, \"longitude\": -79.95249}, {\"latitude\": 40.442, \"longitude\": -79.95258}]}\r\n      \/>\r\n    <\/MapView>\r\n  )\r\n}\r\n\r\nexport default Map\r\n```\r\n\r\n\r\n### Steps to reproduce\r\n\r\n- install the latest expo (typescript template)\r\n- download the necessary dependencies\r\n- copy the code above\r\n\r\n### Expected result\r\n\r\nMap renders with polyline\r\n\r\n### Actual result\r\n\r\nApp crashes with `this.getNativeComponent is not a function (it is undefined)`\r\n\r\n### React Native Maps Version\r\n\r\n1.7.1\r\n\r\n### What platforms are you seeing the problem on?\r\n\r\nAndroid\r\n\r\n### React Native Version\r\n\r\n0.72.5\r\n\r\n### What version of Expo are you using?\r\n\r\nSDK 48\r\n\r\n### Device(s)\r\n\r\nSamsung A32\r\n\r\n### Additional information\r\n\r\nI am using Expo 49, the dropdown doesn't have that option. If I remove the `<Polyline \/>` component, the map component `<MapView \/>` itself works no issue. I also tried to use `<Marker \/>`, the same error pops up.","comments":["@firdausai check https:\/\/github.com\/react-native-maps\/react-native-maps\/issues\/4467 seems like an issue with your RN setup not the library itself","I am having the same issue. I am not using the plugin mentioned in #4467.\r\n\r\nReact Native Maps Version\r\n1.7.1\r\n\r\nWhat platforms are you seeing the problem on?\r\nAndroid\r\n\r\nReact Native Version\r\n0.72.4\r\n\r\nWhat version of Expo are you using?\r\nSDK 49\r\n\r\nDevice(s)\r\nSamsung Galaxy A14\r\n\r\nMy babel.config.js:\r\n```\r\nmodule.exports = {\r\n  presets: ['babel-preset-expo'],\r\n};\r\n```\r\n\r\nMy .babelrc.json:\r\n```\r\n{\r\n  \"plugins\": [\"nativewind\/babel\", \"module:react-native-dotenv\"]\r\n}\r\n```\r\n\r\n","Ran into this same issue. I just removed the `react-native-maps` dependency in `package.json`, removed it from `node_modules` and reinstalled everything and then added it through expo again and that worked\r\n\r\n```\r\n{\r\n  \"expo\": \"^50.0.7\",\r\n  \"react-native-maps\": \"1.10.0\"\r\n}\r\n```"],"labels":["bug"]},{"title":"Press on a Marker - fires press event for another marker if exact same position","body":"### Summary\n\nConditions:\r\nImage marker - white circle\r\nNote marker - green rectangle\r\n\r\nWe have 400+ Markers on the Map. 200 for Images and 200 for Notes for example. Sometimes, Images and Notes could have exact same coordinates and Press event starts to work incorrectly at this point\r\n\r\nBasically I found two bugs:\r\n1. Click on Note Marker (green) - click event for Image Marker fires instead of Note Marker (see video below)\r\n2. Click on Note Marker - event for Note Marker fires -> Alert is displayed (in my example) -> Close Alert -> you will see Image Marker over Note Marker. Feels like `zIndex` was changed, but it is not.\r\n\r\nhttps:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/77282657\/abfa5108-2df7-43e7-9db7-9d20477081b4\r\n\r\n\n\n### Reproducible sample code\n\n```TSX\nI've created small repo - https:\/\/github.com\/DenysMoro\/expo-react-native-maps-marker-press-collision\n```\n\n\n### Steps to reproduce\n\n1. Load reproducible example\r\n2. Try to press different Note markers and pay attention on Alert text\n\n### Expected result\n\n1. Each click on a Note marker - should fire Note marker event without changing `zIndex` for rest markers\n\n### Actual result\n\n1. Click on Note Marker (green) - click event for Image Marker fires instead of Note Marker (see video below)\r\n2. Click on Note Marker - event for Note Marker fires -> Alert is displayed (in my example) -> Close Alert -> you will see Image Marker over Note Marker. Feels like `zIndex` was changed, but it is not.\n\n### React Native Maps Version\n\n1.3.2\n\n### What platforms are you seeing the problem on?\n\niOS (Apple Maps)\n\n### React Native Version\n\n0.71.13\n\n### What version of Expo are you using?\n\nSDK 48\n\n### Device(s)\n\niPhone 13 Pro, any\n\n### Additional information\n\nFeels like Map component has own logic of `zIndex` for each element while drawing markers on it. Or maybe not logic, but queue. And maybe last items taking more priority for press events then...","comments":["This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. If the issue remains relevant, simply comment `Still relevant` and the issue will remain open. Thank you for your contributions.","Still relevant","Facing a similar issue. Attempted to implement debouncing for onPress to no avail. Looking for a solution.","I managed to solve the problem. You need to delete style={{zIndex: }} for Marker","@incom-app-ru \r\nThank you for your response. It won't help us, because we need `zIndex` to position elements correctly"],"labels":["bug"]},{"title":"Not able to zoom out MapView below zoom level 2","body":"### Summary\r\n\r\nI'm trying to make the MapView zoom out to level 0 and 1. But it is not working below zoom level 2. Minimum and Maximum zoom level provided is 0 and 20 respectively\r\n\r\n### Reproducible sample code\r\n\r\n```TSX\r\nAny code with react-native-map\r\n```\r\n\r\n\r\n### Steps to reproduce\r\n\r\nInstall react-native-maps in a react-native project\r\nAdd a sample react-native-maps usage code.\r\nZoom out the map to a level below 2\r\n\r\n### Expected result\r\n\r\nShould zoom out till the specified min zoom level\r\n\r\n### Actual result\r\n\r\nNot able to zoom out below 2\r\n\r\n### React Native Maps Version\r\n\r\n1.7.0\r\n\r\n### What platforms are you seeing the problem on?\r\n\r\nAndroid, iOS (Apple Maps), iOS (Google Maps)\r\n\r\n### React Native Version\r\n\r\n0.71.2\r\n\r\n### What version of Expo are you using?\r\n\r\nNot using Expo\r\n\r\n### Device(s)\r\n\r\nAll\r\n\r\n### Additional information\r\n\r\n_No response_","comments":["This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. If the issue remains relevant, simply comment `Still relevant` and the issue will remain open. Thank you for your contributions.","Hi @AMITHATHAMPY this is what I found in Google Maps SDK documentation. I think it's not a bug in react-native-maps itself. The only thing we can do is updating documentation with the link to the documentation to make it clear for everyone\r\n```\r\n\"The range of zoom levels permitted by the map depends on a number of factors including target, map type and screen size. Any number out of the range will be converted to the next closest valid value, which can be either the minimum zoom level or the maximum zoom level\"\r\n```\r\nhttps:\/\/developers.google.com\/maps\/documentation\/ios-sdk\/views#zoom"],"labels":["bug"]},{"title":"Android Device Only - Error while updating property 'showsUserLocation' of a view managed by: AIRMap","body":"### Summary\r\n\r\n\r\nHello,\r\n\r\nI'm encountering an issue while using the latest versions of react-native-maps and react-native. Below, you'll find a screenshot of my android\/build.gradle file for reference:\r\n![image](https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/24266466\/19410b13-0752-43e5-9d06-24ce4eb54ee0)\r\n\r\nDespite my efforts, I haven't been able to resolve this problem. I've explored various solutions in the issues section, but none of them seem to work for me.\r\n\r\nI've attempted the following in my android\/app\/build.gradle file:\r\nAdding `implementation \"com.google.android.gms:play-services-location:20.0.0\"`\r\nor `implementation \"com.google.android.gms:play-services-location:21.0.1\"`\r\n\r\nAdditionally, I experimented with different playServicesVersion values in android\/build.gradle, including:\r\n```\r\nplayServicesVersion = \"18.0.0\"\r\nplayServicesVersion = \"20.0.0\"\r\nplayServicesVersion = \"21.0.1\"\r\n```\r\nAlso attempted using the beta version of react-native-maps, and it worked but it caused issues with my existing map code and contained some bugs, such as lacking support for `animated` in `.fitToCoordinates`.\"\r\n\r\n### Reproducible sample code\r\n\r\n```TSX\r\n<MapView\r\n      ref={ref}\r\n      provider={PROVIDER_GOOGLE}\r\n      style={{flex: 1}}\r\n      showsUserLocation={true} \/\/ show user's current location\r\n      showsMyLocationButton={true} \/\/ show button to center on user's location\r\n      initialRegion={{\r\n        latitude: 6.1897,\r\n        longitude: 102.1573,\r\n        latitudeDelta: 0.0922,\r\n        longitudeDelta: 0.0421,\r\n      }}\r\n      {...props.mapProps}\r\n      \/\/ region={{\r\n      \/\/   latitude: 6.155625340041729,\r\n      \/\/   latitudeDelta: 0.02002058218781322,\r\n      \/\/   longitude: 102.1837292611599,\r\n      \/\/   longitudeDelta: 0.012100785970673655,\r\n      \/\/ }}\r\n      customMapStyle={mapOptions.customMapStyle}>\r\n      {props.children}\r\n    <\/MapView>\r\n```\r\n\r\n\r\n### Steps to reproduce\r\n\r\nJust run `.\/gradlew clean`  and  `yarn react-native run-android`\r\n\r\n### Expected result\r\n\r\nIt should be working fine on `showsUserLocation={true}`. But if `showsUserLocation={false}` is ok.\r\n\r\n### Actual result\r\n\r\n![WhatsApp Image 2023-09-09 at 01 15 16](https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/24266466\/b50bf8d7-8332-422c-89e5-7e4004351017)\r\n\r\n\r\n### React Native Maps Version\r\n\r\n^1.7.1\r\n\r\n### What platforms are you seeing the problem on?\r\n\r\nAndroid\r\n\r\n### React Native Version\r\n\r\n0.72.4\r\n\r\n### What version of Expo are you using?\r\n\r\nNot using Expo\r\n\r\n### Device(s)\r\n\r\nSAMSUNG GALAXY S20 FE (ANDROID 13)\r\n\r\n### Additional information\r\n\r\nPlease assist me in resolving this issue; I am currently stuck at this point. Thanks!","comments":["The map is functioning correctly after I made changes to the dependency in the `node_modules\/react-native-maps\/android\/build.gradle` file as follows:\r\n```\r\n+ classpath(\"com.android.tools.build:gradle:7.1.1\")\r\n+ implementation \"com.google.android.gms:play-services-location:21.0.1\"\r\n```\r\nBut please assist me in discovering a better and proper solution instead of this.\r\n\r\n","Facing the same issue after upgrading react-native from `0.71.10` to `0.72.4`.\r\n\r\nEDIT:\r\nCreated a patch file with the `patch-package` npm package.\r\n\r\nIf you need to patch your package here are the steps:\r\n\r\n\r\n1. Go to the `node_modules\/react-native-maps\/android\/build.gradle`\r\n2. update the file from \r\n```\r\nimplementation \"com.google.android.gms:play-services-location:20.0.0\"\r\n```\r\nto\r\n```\r\nimplementation \"com.google.android.gms:play-services-location:21.0.0\"\r\n```\r\n\r\n3. Create a patch file\r\n```bash\r\nnpx patch-package react-native-maps --include \"android\/build.gradle\"\r\n```\r\n\r\n4. Then install `patch package` as a project dependency with\r\n```bash\r\nyarn add patch-package\r\n```\r\n\r\n5. Add the following to your `package.json` script section:\r\n```json\r\n\"postinstall\": \"patch-package\"\r\n```\r\n","N\r\n\r\n> Facing the same issue after upgrading react-native from `0.71.10` to `0.72.4`.\r\n> \r\n> EDIT: Created a patch file with the `patch-package` npm package.\r\n> \r\n> If you need to patch your package here are the steps:\r\n> \r\n> 1. Go to the `node_modules\/react-native-maps\/android\/build.gradle`\r\n> 2. update the file from\r\n> \r\n> ```\r\n> implementation \"com.google.android.gms:play-services-location:20.0.0\"\r\n> ```\r\n> \r\n> to\r\n> \r\n> ```\r\n> implementation \"com.google.android.gms:play-services-location:21.0.0\"\r\n> ```\r\n> \r\n> 3. Create a patch file\r\n> \r\n> ```shell\r\n> npx patch-package react-native-maps --include \"android\/build.gradle\"\r\n> ```\r\n> \r\n> 4. Then install `patch package` as a project dependency with\r\n> \r\n> ```shell\r\n> yarn add patch-package\r\n> ```\r\n> \r\n> 5. Add the following to your `package.json` script section:\r\n> \r\n> ```json\r\n> \"postinstall\": \"patch-package\"\r\n> ```\r\n\r\nThank @Blackfaded for a nice solution, after following your steps, I have an issue: \r\nWhy does `com.google.android.gms:play-services-location:21.0.0` auto revert back to `com.google.android.gms:play-services-location:20.0.0` after running yarn add patch-package?","Hm I cant tell exactly. Maybe you could just install the package as the first step and then go on with all other steps.\r\n\r\nBut if you have the patchfile and remove node modules and make a fresh install everything should be fine \ud83d\udc4c ","> Hm I cant tell exactly. Maybe you could just install the package as the first step and then go on with all other steps.\r\n> \r\n> But if you have the patchfile and remove node modules and make a fresh install everything should be fine \ud83d\udc4c\r\n\r\nNow it working fine, maybe that was my mistake. I placed \"postinstall\": \"patch-package\" in the wrong location. Thanks.","Patch file for pnpm\r\n\r\n```rootProjectFolder\/patches\/react-native-maps@1.7.1.patch```\r\n```diff\r\ndiff --git a\/android\/build.gradle b\/android\/build.gradle\r\nindex 88b8991180f0c6c44ffba07269fff3c242133701..57265d193aff485be99d1399a8369c7ed899844c 100644\r\n--- a\/android\/build.gradle\r\n+++ b\/android\/build.gradle\r\n@@ -46,7 +46,7 @@ dependencies {\r\n   implementation 'com.facebook.react:react-native:+'\r\n   implementation \"com.google.android.gms:play-services-base:${safeExtGet('playServicesVersion', '18.1.0')}\"\r\n   implementation \"com.google.android.gms:play-services-maps:${safeExtGet('playServicesVersion', '18.0.2')}\"\r\n-  implementation \"com.google.android.gms:play-services-location:20.0.0\"\r\n+  implementation \"com.google.android.gms:play-services-location:21.0.0\"\r\n   implementation 'com.google.maps.android:android-maps-utils:3.4.0'\r\n   implementation \"androidx.work:work-runtime:2.7.1\"\r\n }\r\n```","> > Hm I cant tell exactly. Maybe you could just install the package as the first step and then go on with all other steps.\r\n> > But if you have the patchfile and remove node modules and make a fresh install everything should be fine \ud83d\udc4c\r\n> \r\n> Now it working fine, maybe that was my mistake. I placed \"postinstall\": \"patch-package\" in the wrong location. Thanks.\r\n\r\nits still happens for me\r\n\r\nthis is the result in the terminal after trying npx patch-package react-native-maps --include \"android\/build.gradle\"\r\n\r\n$ npx patch-package react-native-maps --include \"android\/build.gradle\"\r\npatch-package 8.0.0\r\npatch-package: you have both yarn.lock and package-lock.json\r\nDefaulting to using npm\r\nYou can override this setting by passing --use-yarn or deleting\r\npackage-lock.json if you don't need it\r\n\r\n\u2022 Creating temporary folder\r\n\u2022 Installing react-native-maps@1.7.1 with npm\r\n\u2022 Diffing your files with clean files\r\n\u2049\ufe0f  Not creating patch file for package 'react-native-maps'\r\n\u2049\ufe0f  There don't appear to be any changes.\r\n\r\nI already change the google maps implementation to\r\nimplementation \"com.google.android.gms:play-services-location:21.0.0\"\r\n\r\nbut its revert back to implementation \"com.google.android.gms:play-services-location:20.0.0\"","> > > Hm I cant tell exactly. Maybe you could just install the package as the first step and then go on with all other steps.\r\n> > > But if you have the patchfile and remove node modules and make a fresh install everything should be fine \ud83d\udc4c\r\n> > \r\n> > \r\n> > Now it working fine, maybe that was my mistake. I placed \"postinstall\": \"patch-package\" in the wrong location. Thanks.\r\n> \r\n> its still happens for me\r\n> \r\n> this is the result in the terminal after trying npx patch-package react-native-maps --include \"android\/build.gradle\"\r\n> \r\n> $ npx patch-package react-native-maps --include \"android\/build.gradle\" patch-package 8.0.0 patch-package: you have both yarn.lock and package-lock.json Defaulting to using npm You can override this setting by passing --use-yarn or deleting package-lock.json if you don't need it\r\n> \r\n> \u2022 Creating temporary folder \u2022 Installing react-native-maps@1.7.1 with npm \u2022 Diffing your files with clean files \u2049\ufe0f Not creating patch file for package 'react-native-maps' \u2049\ufe0f There don't appear to be any changes.\r\n> \r\n> I already change the google maps implementation to implementation \"com.google.android.gms:play-services-location:21.0.0\"\r\n> \r\n> but its revert back to implementation \"com.google.android.gms:play-services-location:20.0.0\"\r\n\r\noh its worked now,\r\n\r\nim trying this instead\r\n\r\nnpx patch-package react-native-maps --exclude","This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. If the issue remains relevant, simply comment `Still relevant` and the issue will remain open. Thank you for your contributions.","Still relevant","still relevant","can be reproduced! still relevant and using RN v0.72.10","For me, updating to `react-native-maps@~1.10.3` fixed the issue."],"labels":["bug"]},{"title":"Animating to MapRegion with custom animation, using AnimatedRegion, re-orients map to angle 0","body":"### Summary\n\nI am attempting to animate the map's region using `animatedRegion`. However, when the animation runs and the map is tilted at a certain heading, it resets the map to a heading of 0 degrees while updating the map's region. One alternative is to use `animateCamera` to animate the map, which preserves the heading while animating the region. However, this approach restricts me from specifying my own animation specifications, the only thing that can be controlled is the animation's duration. **Ideally, I would like to update the map's region with a custom animation specification while retaining the map's heading.**\n\n### Reproducible sample code\n\n```TSX\nimport {\r\n  Easing,\r\n  Button,\r\n  View,\r\n} from 'react-native';\r\nimport MapView, { AnimatedRegion, Animated } from 'react-native-maps';\r\nimport { useRef } from 'react';\r\n\r\nexport default function App() {\r\n  const animatedRegion = new AnimatedRegion({\r\n    longitude: 81.06946573710633,\r\n    latitude: 25.634236139173908,\r\n    latitudeDelta: 0.6665647557651191,\r\n    longitudeDelta: 0.5834163331793434,\r\n  });\r\n\r\n  const mapRef = useRef(null);\r\n\r\n  const animateMap = () => {\r\n    animatedRegion\r\n      .timing({\r\n        longitude: 61.06946573710633,\r\n        latitude: 25.634236139173908,\r\n        latitudeDelta: 0.6665647557651191,\r\n        longitudeDelta: 0.5834163331793434,\r\n        easing: Easing.bezier(0.44, 0.66, 0, 0.99),\r\n        timing: 600,\r\n      })\r\n      .start();\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <Animated\r\n        style={{ flex: 1 }}\r\n        ref={mapRef}\r\n        region={animatedRegion}\r\n        rotateEnabled={true}\r\n      \/>\r\n      <View style={{ bottom: 50 }}>\r\n        <Button\r\n          title=\"Animate Map\"\r\n          onPress={animateMap}\r\n        \/>\r\n      <\/View>\r\n    <\/View>\r\n  );\r\n}\n```\n\n\n### Steps to reproduce\n\nUpdate the map's region by updating the animatedRegion passed to the region prop\n\n### Expected result\n\nMap's region should update while maintaining map's heading.\n\n### Actual result\n\nMap's region is updated and heading is reset to 0 degrees.\n\n### React Native Maps Version\n\n0.30.2\n\n### What platforms are you seeing the problem on?\n\niOS (Apple Maps)\n\n### React Native Version\n\n0.68.2\n\n### What version of Expo are you using?\n\nNot using Expo\n\n### Device(s)\n\niPhone 14 Pro\n\n### Additional information\n\n_No response_","comments":["I will check that :)","Hi, @Robert6321 I was trying to fix it but I couldn't find a proper solution in the native code, I'm not even sure if it's possible. The only thing that I managed to find is this workaround, but unfortunately it's working only on iOS so I'm not sure if it will be helpful for you.\r\n```tsx\r\nimport {Easing, Button, View} from 'react-native';\r\nimport {AnimatedRegion, Animated} from 'react-native-maps';\r\nimport React, {useRef} from 'react';\r\n\r\nexport default function AnimatedMarkers() {\r\n  const animatedRegion = new AnimatedRegion({\r\n    longitude: 81.06946573710633,\r\n    latitude: 25.634236139173908,\r\n    latitudeDelta: 0.6665647557651191,\r\n    longitudeDelta: 0.5834163331793434,\r\n  });\r\n\r\n  const mapRef = useRef(null);\r\n\r\n  const animateMap = async () => {\r\n    const camera = await mapRef?.current?.getCamera();\r\n\r\n    animatedRegion\r\n      .timing({\r\n        longitude: 61.06946573710633,\r\n        latitude: 25.634236139173908,\r\n        latitudeDelta: 0.6665647557651191,\r\n        longitudeDelta: 0.5834163331793434,\r\n        easing: Easing.bezier(0.44, 0.66, 0, 0.99),\r\n        timing: 600,\r\n      })\r\n      .start(() => {\r\n        mapRef?.current?.animateCamera({\r\n          heading: camera.heading,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <View style={{flex: 1}}>\r\n      <Animated\r\n        style={{flex: 1, width: 400}}\r\n        ref={mapRef}\r\n        region={animatedRegion}\r\n        rotateEnabled={true}\r\n      \/>\r\n      <View style={{bottom: 50}}>\r\n        <Button title=\"Animate Map\" onPress={animateMap} \/>\r\n      <\/View>\r\n    <\/View>\r\n  );\r\n}\r\n\r\n```\r\n","This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. If the issue remains relevant, simply comment `Still relevant` and the issue will remain open. Thank you for your contributions.","Still relevant"],"labels":["bug"]},{"title":"AIRMap is not compatible yet","body":"### Summary\n\nI'm getting this error whenever i want to create MapView component. I already wrote my code if there is error in my code then anyone can comment that\n\n### Reproducible sample code\n\n```TSX\nconst initialRegion = {\r\n    latitude: 37.78825,\r\n    longitude: -122.4324,\r\n    latitudeDelta: 0.0922,\r\n    longitudeDelta: 0.0421,\r\n  };\r\n<MapView style={styles.map} initialRegion={initialRegion}>\r\n              <Marker\r\n                coordinate={{\r\n                  latitude: 37.78825,\r\n                  longitude: -122.4324,\r\n                }}\r\n                title=\"Marker Title\"\r\n                description=\"Marker Description\"\r\n              \/>\r\n            <\/MapView>\n```\n\n\n### Steps to reproduce\n\nWhenever using Mapview getting this error\n\n### Expected result\n\nIt needs to show Map in my app\n\n### Actual result\n\nAIRMap is not Fabric compatible yet.\n\n### React Native Maps Version\n\n^1.7.1\n\n### What platforms are you seeing the problem on?\n\nAndroid\n\n### React Native Version\n\n0.72.3\n\n### What version of Expo are you using?\n\nNot using Expo\n\n### Device(s)\n\nGoogle Pixel 4\n\n### Additional information\n\n_No response_","comments":["It's the same problem for me. Can someone help me with this problem? I have it on Android","in your android gradle.properties \r\ndisable new architecture by setting following property to false \r\nnewArchEnabled=false.\r\n\r\n#4383 is related \r\n","> in your android gradle.properties disable new architecture by setting following property to false newArchEnabled=false.\r\n> \r\n> #4383 is related\r\n\r\nnot working \r\n","Create a file named react-native.config.js in the root directory of your project &  paste this\r\n```\r\nmodule.exports = {\r\n  project: {\r\n    android: {\r\n      unstable_reactLegacyComponentNames: ['AIRMap'],\r\n    },\r\n    ios: {\r\n      unstable_reactLegacyComponentNames: ['AIRMap'],\r\n    },\r\n  },\r\n};\r\n```\r\nthis fixed the issue for me","@AmitrajitDas  maker not display ","I have a [similar issue](https:\/\/github.com\/react-native-maps\/react-native-maps\/issues\/4888) which always has to do with AIRmap.","any update ?","> Create a file named react-native.config.js in the root directory of your project & paste this\r\n> \r\n> ```\r\n> module.exports = {\r\n>   project: {\r\n>     android: {\r\n>       unstable_reactLegacyComponentNames: ['AIRMap'],\r\n>     },\r\n>     ios: {\r\n>       unstable_reactLegacyComponentNames: ['AIRMap'],\r\n>     },\r\n>   },\r\n> };\r\n> ```\r\n> \r\n> this fixed the issue for me\r\n\r\nis work for me thanks \r\nbut I have problem\r\n\r\naddview: fail to insert view [720] into parent [766] at index 0 the specified child already has a parent. you mull call removeview() on the child's parent first","in your android gradle.properties\r\ndisable new architecture by setting following property to false\r\nnewArchEnabled=false.\r\n\r\nafter doing this uninstall application and reinstall again","This worked for me by using the legacy components in the new architecture\r\n```\r\nmodule.exports = {\r\n    project: {\r\n        android: {\r\n            unstable_reactLegacyComponentNames: [\r\n                'AIRGoogleMap',\r\n                'AIRMap',\r\n                'AIRMapMarker',\r\n                'PanoramaView'\r\n            ],\r\n        },\r\n        ios: {\r\n            unstable_reactLegacyComponentNames: [\r\n                'AIRGoogleMap',\r\n                'AIRMap',\r\n                'AIRMapMarker',\r\n                'PanoramaView'\r\n            ],\r\n        },\r\n    },\r\n};\r\n```"],"labels":["bug"]},{"title":"build(deps): bump activesupport from 7.0.4.3 to 7.0.7.2 in \/example","body":"Bumps [activesupport](https:\/\/github.com\/rails\/rails) from 7.0.4.3 to 7.0.7.2.\n<details>\n<summary>Release notes<\/summary>\n<p><em>Sourced from <a href=\"https:\/\/github.com\/rails\/rails\/releases\">activesupport's releases<\/a>.<\/em><\/p>\n<blockquote>\n<h2>7.0.7.2 release<\/h2>\n<p>No changes between this and 7.0.7.2.  This release was just to fix file permissions in the previous release.<\/p>\n<h2>7.0.7.1<\/h2>\n<h2>Active Support<\/h2>\n<ul>\n<li>\n<p>Use a temporary file for storing unencrypted files while editing<\/p>\n<p>[CVE-2023-38037]<\/p>\n<\/li>\n<\/ul>\n<h2>Active Model<\/h2>\n<ul>\n<li>No changes.<\/li>\n<\/ul>\n<h2>Active Record<\/h2>\n<ul>\n<li>No changes.<\/li>\n<\/ul>\n<h2>Action View<\/h2>\n<ul>\n<li>No changes.<\/li>\n<\/ul>\n<h2>Action Pack<\/h2>\n<ul>\n<li>No changes.<\/li>\n<\/ul>\n<h2>Active Job<\/h2>\n<ul>\n<li>No changes.<\/li>\n<\/ul>\n<h2>Action Mailer<\/h2>\n<ul>\n<li>No changes.<\/li>\n<\/ul>\n<h2>Action Cable<\/h2>\n<!-- raw HTML omitted -->\n<\/blockquote>\n<p>... (truncated)<\/p>\n<\/details>\n<details>\n<summary>Changelog<\/summary>\n<p><em>Sourced from <a href=\"https:\/\/github.com\/rails\/rails\/blob\/v7.0.7.2\/activesupport\/CHANGELOG.md\">activesupport's changelog<\/a>.<\/em><\/p>\n<blockquote>\n<h2>Rails 7.0.7.2 (August 22, 2023)<\/h2>\n<ul>\n<li>No changes.<\/li>\n<\/ul>\n<h2>Rails 7.0.7.1 (August 22, 2023)<\/h2>\n<ul>\n<li>\n<p>Use a temporary file for storing unencrypted files while editing<\/p>\n<p>[CVE-2023-38037]<\/p>\n<\/li>\n<\/ul>\n<h2>Rails 7.0.7 (August 09, 2023)<\/h2>\n<ul>\n<li>\n<p>Fix <code>Cache::NullStore<\/code> with local caching for repeated reads.<\/p>\n<p><em>fatkodima<\/em><\/p>\n<\/li>\n<li>\n<p>Fix <code>to_s<\/code> with no arguments not respecting custom <code>:default<\/code> formats<\/p>\n<p><em>Hartley McGuire<\/em><\/p>\n<\/li>\n<li>\n<p>Fix <code>ActiveSupport::Inflector.humanize(nil)<\/code> raising <code>NoMethodError: undefined method `end_with?' for nil:NilClass<\/code>.<\/p>\n<p><em>James Robinson<\/em><\/p>\n<\/li>\n<li>\n<p>Fix <code>Enumerable#sum<\/code> for <code>Enumerator#lazy<\/code>.<\/p>\n<p><em>fatkodima<\/em>, <em>Matthew Draper<\/em>, <em>Jonathan Hefner<\/em><\/p>\n<\/li>\n<li>\n<p>Improve error message when EventedFileUpdateChecker is used without a\ncompatible version of the Listen gem<\/p>\n<p><em>Hartley McGuire<\/em><\/p>\n<\/li>\n<\/ul>\n<h2>Rails 7.0.6 (June 29, 2023)<\/h2>\n<ul>\n<li>\n<p>Fix <code>EncryptedConfiguration<\/code> returning incorrect values for some <code>Hash<\/code>\nmethods<\/p>\n<p><em>Hartley McGuire<\/em><\/p>\n<\/li>\n<li>\n<p>Fix arguments being destructed <code>Enumerable#many?<\/code> with block.<\/p>\n<p><em>Andrew Novoselac<\/em><\/p>\n<\/li>\n<li>\n<p>Fix humanize for strings ending with id.<\/p>\n<p><em>fatkodima<\/em><\/p>\n<\/li>\n<\/ul>\n<!-- raw HTML omitted -->\n<\/blockquote>\n<p>... (truncated)<\/p>\n<\/details>\n<details>\n<summary>Commits<\/summary>\n<ul>\n<li><a href=\"https:\/\/github.com\/rails\/rails\/commit\/3668b4b5978822f1e6311c7fd7a32f58daee136a\"><code>3668b4b<\/code><\/a> Preparing for 7.0.7.2 release<\/li>\n<li><a href=\"https:\/\/github.com\/rails\/rails\/commit\/2294b8b27a95f12bb25a891d1ce8f3f68c6af601\"><code>2294b8b<\/code><\/a> Bumping version<\/li>\n<li><a href=\"https:\/\/github.com\/rails\/rails\/commit\/c92caefc2bdf856845a72b8608d5603b330e8c3e\"><code>c92caef<\/code><\/a> Preparing for 7.0.7.1 release<\/li>\n<li><a href=\"https:\/\/github.com\/rails\/rails\/commit\/936587d49b3d490462c794b30fb672cef43e1bd0\"><code>936587d<\/code><\/a> updating version \/ changelog<\/li>\n<li><a href=\"https:\/\/github.com\/rails\/rails\/commit\/a21d6edf35a60383dfa6c4da49e4b1aef5f00731\"><code>a21d6ed<\/code><\/a> Use a temporary file for storing unencrypted files while editing<\/li>\n<li><a href=\"https:\/\/github.com\/rails\/rails\/commit\/522c86f35ccc80453ed9fb6ca8b394db321f9a69\"><code>522c86f<\/code><\/a> Preparing for 7.0.7 release<\/li>\n<li><a href=\"https:\/\/github.com\/rails\/rails\/commit\/5610cbacc5630d775a1a7be78ccb17e561908cba\"><code>5610cba<\/code><\/a> Sync CHANGELOG with the changes in the repository<\/li>\n<li><a href=\"https:\/\/github.com\/rails\/rails\/commit\/7e9ffc2e137b649c6fd2ca1c580cdfffc9845b55\"><code>7e9ffc2<\/code><\/a> Fix to_s not using :default format with no args<\/li>\n<li><a href=\"https:\/\/github.com\/rails\/rails\/commit\/a8e88e2e4f157e47050d4ba17ea936902f6a2994\"><code>a8e88e2<\/code><\/a> Fix <code>Cache::NullStore<\/code> with local caching for repeated reads<\/li>\n<li><a href=\"https:\/\/github.com\/rails\/rails\/commit\/b18b9df65eb7d4e5dfa9a6982a8709c0c94b0b97\"><code>b18b9df<\/code><\/a> Merge pull request <a href=\"https:\/\/redirect.github.com\/rails\/rails\/issues\/48800\">#48800<\/a> from robinjam\/fix-humanize-nil<\/li>\n<li>Additional commits viewable in <a href=\"https:\/\/github.com\/rails\/rails\/compare\/v7.0.4.3...v7.0.7.2\">compare view<\/a><\/li>\n<\/ul>\n<\/details>\n<br \/>\n\n\n[![Dependabot compatibility score](https:\/\/dependabot-badges.githubapp.com\/badges\/compatibility_score?dependency-name=activesupport&package-manager=bundler&previous-version=7.0.4.3&new-version=7.0.7.2)](https:\/\/docs.github.com\/en\/github\/managing-security-vulnerabilities\/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[\/\/]: # (dependabot-automerge-start)\n[\/\/]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options<\/summary>\n<br \/>\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https:\/\/github.com\/react-native-maps\/react-native-maps\/network\/alerts).\n\n<\/details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n","comments":["This PR has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. If the PR remains relevant, simply comment `Still relevant` and the PR will remain open. Thank you for your contributions."],"labels":["dependencies","ruby"]},{"title":"IsGesture on IOS devices","body":"### Summary\n\nI saw in version 1.0.0 the issue of onRegionChangeComplete props (which has a property named isGesture, unavailable on ios ) was resolved..im  using version \"1.3.2\" .. and this method returns me undefined on ios devices\n\n### Reproducible sample code\n\n```TSX\nconst regionChanging = (values: any, details) => {\r\n        console.log(\"details\", details) => on android works, on ios returns only undefined\r\n        if (details.isGesture === true) {\r\n            onRegionChangeComplete(values)\r\n            return\r\n        }\r\n\r\n    }\r\n\r\n<MapView onRegionChangeComplete={(region, details) => regionChanging(region, details)} \/>\n```\n\n\n### Steps to reproduce\n\nnothing special :D\n\n### Expected result\n\nto return true or false\n\n### Actual result\n\nundefined\n\n### React Native Maps Version\n\n1.3.2\n\n### What platforms are you seeing the problem on?\n\niOS (Apple Maps)\n\n### React Native Version\n\n0.68.5\n\n### What version of Expo are you using?\n\nNot using Expo\n\n### Device(s)\n\niphone 8\n\n### Additional information\n\n_No response_","comments":["This is an ongoing request: https:\/\/github.com\/react-native-maps\/react-native-maps\/discussions\/4440\r\n\r\nThe current solution is to use Google Maps on iOS.","This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. If the issue remains relevant, simply comment `Still relevant` and the issue will remain open. Thank you for your contributions.","Still relevant","This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. If the issue remains relevant, simply comment `Still relevant` and the issue will remain open. Thank you for your contributions.","Still relevant","still relevant, however i found a workaround if anyone is looking for a fix this is my MapView ->  \r\n`<MapView\r\n        provider={Platform.OS == \"android\" ? \"google\" : undefined}\r\n        style={styles.map}\r\n        customMapStyle={customMapTheme}\r\n        ref={mapRef}\r\n        onPress={handleMapPress}\r\n        region={region}\r\n        onPanDrag={() => {\r\n          if (!showSearchAreaButton && Platform.OS == \"ios\") setShowSearchAreaButton(true);\r\n        }}\r\n        onRegionChangeComplete={(region, isGesture) => {\r\n\r\n          if (isGesture?.isGesture || Platform.OS == \"ios\") {\r\n            if (!showSearchAreaButton && Platform.OS == \"android\") setShowSearchAreaButton(true);\r\n\r\n            const newBoundingBox = [\r\n              region.latitude - region.latitudeDelta \/ 2,\r\n              region.latitude + region.latitudeDelta \/ 2,\r\n              region.longitude - region.longitudeDelta \/ 2,\r\n              region.longitude + region.longitudeDelta \/ 2,\r\n            ];\r\n            setRegion(region);\r\n            setBoundingBox(newBoundingBox);\r\n          }\r\n        }}\r\n      >`"],"labels":["bug"]},{"title":"Extremely slow map custom markers ","body":"### Summary\n\nI have a custom marker with a Component and Image, am using react-native-map-clustering when the markers and inside the cluster the map runs faster, when zoom in if  have 20+ markers i start the a hunge decrease on the performance.\r\n\r\nI already tried to set tracksViewChanges to false but after that the images doesn't load, only the Views and text render.\r\n\r\n\n\n### Reproducible sample code\n\n```TSX\n<MapView\r\n            ref={mapRef}\r\n            mapType={mapType}\r\n            tracksViewChanges={false}\r\n            showsIndoors={false}\r\n            loadingEnabled\r\n            customMapStyle={[\r\n              {\r\n                featureType: 'poi',\r\n                elementType: 'label',\r\n                stylers: [{visibility: 'off'}],\r\n              },\r\n            ]}\r\n            showsPointsOfInterest={false}\r\n            provider={PROVIDER_GOOGLE}\r\n            showsUserLocation={true}\r\n            showsCompass={false}\r\n            showsMyLocationButton\r\n            toolbarEnabled={false}>\r\n            {locals !== null || locals !== undefined\r\n              ? locals?.map(element => {\r\n                  return (\r\n                    <Marker\r\n                      \/\/ icon={\r\n                      \/\/   element.isToCollect\r\n                      \/\/     ? require('..\/assets\/marker_1_80x80.png')\r\n                      \/\/     : require('..\/assets\/marker_2_80x80.png')\r\n                      \/\/ }\r\n                      key={element?.description}\r\n                      coordinate={{\r\n                        latitude: element.latitude,\r\n                        longitude: element.longitude,\r\n                      }}\r\n                      onPress={() =>\r\n                        handleMarkerClick(element, 'local-1')\r\n                      }>\r\n                      <View\r\n                        style={{\r\n                          justifyContent: 'center',\r\n                          alignItems: 'center',\r\n                          opacity: element.pressed ? 0.7 : 1,\r\n                        }}>\r\n                        {element?.distance &&\r\n                        element?.time &&\r\n                        !showRoute.show ? (\r\n                          <TimeDistanceInfo\r\n                            image={require('..\/assets\/pedestrian.png')}\r\n                            time={element?.time}\r\n                            distance={element?.distance}\r\n                          \/>\r\n                        ) : null}\r\n                        <Image\r\n                          source={\r\n                            element.isToCollect\r\n                              ? require('..\/assets\/marker_1_80x80.png')\r\n                              : require('..\/assets\/marker_2_80x80.png')\r\n                          }\r\n                          resizeMode={'contain'}\r\n                          style={{height: 60}}\r\n                        \/>\r\n                      <\/View>\r\n                    <\/Marker>\r\n                  );\r\n                })\r\n              : null}\r\n<\/MapView>\n```\n\n\n### Steps to reproduce\n\n.\n\n### Expected result\n\nThe map running fast with custom markers \n\n### Actual result\n\nThe map start freezing , and is almost impossible to zoom out.\n\n### React Native Maps Version\n\n1.7.1\n\n### What platforms are you seeing the problem on?\n\nAndroid, iOS (Google Maps)\n\n### React Native Version\n\n0.71.6\n\n### What version of Expo are you using?\n\nNot using Expo\n\n### Device(s)\n\nAndroid and IOS devices\n\n### Additional information\n\n_No response_","comments":["The prop \"tracksViewChanges\" you should add to the Marker component and not to the MapView component.","> The prop \"tracksViewChanges\" you should add to the Marker component and not to the MapView component.\r\n\r\nI know, ignore that i did that for testing and i forgot to remove.","But even after adding this prop to the Marker, this problem happens yet?","> But even after adding this prop to the Marker, this problem happens yet?\r\n\r\nIf i set tracksViewChanges to false the map runs without problems in terms of speed, but  Images inside the custom marker don't render. After searching i found this link  [https:\/\/itnext.io\/performant-custom-map-markers-for-react-native-maps-ddc8d5a1eeb0](https:\/\/itnext.io\/performant-custom-map-markers-for-react-native-maps-ddc8d5a1eeb0). i change that to a function compoment and for every image inside the custom component i check if the other's already loaded if so i change the value  of tracksViewChanges to false, i didn't properly test it but  i will update this after testing.","This might be because you are using Marker children to render the marker. Can you use the icon prop instead? I see you have commented it out, but I can say for sure that using the icon prop will help performance!","> \r\n\r\nYes this happens because am using marker children to render, but in my use case i can't use an icon prop, i need to render a \"complex\" maker using Image's and React Native components. The above solution seems to work in most of the time, sometimes it doesn't render properly but so far is the best solution i have.","How about if you create the markers outside of the return function so you could memoize?","There is an existing bug about custom markers on Android redrawing in a loop:  https:\/\/github.com\/react-native-maps\/react-native-maps\/issues\/4501\r\n","Please follow the steps\r\nhttps:\/\/youtu.be\/VOCRBdzHEqM\r\n\r\n","same problem here","@0xcD3v instead of dynamically changing `tracksViewChanges` prop you can try to set it to `false`, create a ref to `Marker` component and manually redraw the marker after the image is loaded, so you would have something like this:\r\n```js\r\nimport type { MapMarker } from 'react-native-maps';\r\n...\r\n\r\nconst markerRef = useRef<MapMarker>(null);\r\n...\r\n\r\n<Marker\r\n    ref={markerRef}\r\n    tracksViewChanges={false}\r\n    ... >\r\n    <Image\r\n        fadeDuration={0}\r\n        onLoad={\r\n            Platform.OS === 'android'\r\n\t\t? markerRef.current?.redraw\r\n\t\t: undefined\r\n\t}\r\n        ...\r\n    \/>\r\n<\/Marker>\r\n```\r\nI think redraw wasn't implemented on iOS (at least on Apple Maps as it's unnecessary) and can crash the app, so use it only on Android.\r\nIt probably won't resolve problems with occasional improper rendering (to resolve it you can try manually redraw marker using `redraw` function after child of `Marker` component was changed - adding some delay\/timeout before executing `redraw` also could help), but it should improve performance a bit.","This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. If the issue remains relevant, simply comment `Still relevant` and the issue will remain open. Thank you for your contributions.","Still relevant","I found the solution in another Github issue. The problem is that trackViewChanges={true} re-renders the marker too often and creates performance issues. We only need to rerender the marker once for display the image. This is the example --> [https:\/\/github.com\/react-native-maps\/react-native-maps\/issues\/3339#issuecomment-853028829](url)"],"labels":["bug"]},{"title":"Crash on custom marker after enable new architecture IOS","body":"### Summary\n\nIOS app crashed if add any view inside <Marker> with error after enable new architecture :-\r\n\r\n *** Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: '-[RCTViewComponentView view]: unrecognized selector sent to instance 0x7f8e0e612390'\r\n\r\n\r\n![Screenshot 2023-07-22 at 3 15 42 PM](https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/140066955\/fab75d95-a1a1-49e6-9b26-ead9db90439c)\r\n\n\n### Reproducible sample code\n\n```TSX\nimport React from 'react';\r\nimport { Marker } from 'react-native-maps';\r\n\r\n<Marker\r\n              key={index}\r\n              zIndex={ZIndexValue}\r\n              coordinate={{\r\n                latitude: get(item, 'location.latitude', 0),\r\n                longitude: get(item, 'location.longitude', 0),\r\n              }}\r\n              tracksViewChanges={mapMarkers.trackChanges}\r\n            >\r\n<View style={{\r\n                width: 40,\r\n                height: 40,\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                borderRadius: 40 \/ 2,\r\n                backgroundColor: 'red',\r\n              }}><\/View>\r\n<\/Marker>\n```\n\n\n### Steps to reproduce\n\nAdd View component inside Marker.\n\n### Expected result\n\nWorked with custom marker.\n\n### Actual result\n\nApp crashed when add any view inside marker.\r\n\n\n### React Native Maps Version\n\n1.7.1\n\n### What platforms are you seeing the problem on?\n\niOS (Google Maps)\n\n### React Native Version\n\n0.72.3\n\n### What version of Expo are you using?\n\nNot using Expo\n\n### Device(s)\n\nIOS Simulator\n\n### Additional information\n\n_No response_","comments":["@Simon-TechForm can you please check this issue, this is happening with many switching to new architecture","@meghvarse found any workaround for this issue?","> @meghvarse found any workaround for this issue?\r\n\r\n@ravindraguptacapgemini Not yet","Any update on this please?","This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. If the issue remains relevant, simply comment `Still relevant` and the issue will remain open. Thank you for your contributions.","I have referenced the example app and modified the API key as follows in `AppDelegate.mm`\r\n\r\n`[GMSServices provideAPIKey:[[NSBundle mainBundle] objectForInfoDictionaryKey:@\"MAPS_API_KEY\"]];`\r\n\r\nHowever, it only functions correctly when added as indicated in the documentation:\r\n\r\n`[GMSServices provideAPIKey:@\"MAPS_API_KEY\"];`","This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. If the issue remains relevant, simply comment `Still relevant` and the issue will remain open. Thank you for your contributions.","Still relevant"],"labels":["bug"]},{"title":"LocalTile not working","body":"### Summary\n\nExample repo: https:\/\/github.com\/katsimoto\/OfflineMapExample\n\n### Reproducible sample code\n\n```TSX\nimport React from 'react';\r\nimport {StyleSheet, View, Text, Dimensions} from 'react-native';\r\nimport MapView, {\r\n  MAP_TYPES,\r\n  PROVIDER_DEFAULT,\r\n  LocalTile,\r\n} from 'react-native-maps';\r\n\r\nconst {width, height} = Dimensions.get('window');\r\n\r\nconst ASPECT_RATIO = width \/ height;\r\nconst LATITUDE = 37.78825;\r\nconst LONGITUDE = -122.4324;\r\nconst LATITUDE_DELTA = 0.0922;\r\nconst LONGITUDE_DELTA = LATITUDE_DELTA * ASPECT_RATIO;\r\n\r\nclass App extends React.Component<any, any> {\r\n  constructor(props: any, context: any) {\r\n    super(props, context);\r\n\r\n    this.state = {\r\n      region: {\r\n        latitude: LATITUDE,\r\n        longitude: LONGITUDE,\r\n        latitudeDelta: LATITUDE_DELTA,\r\n        longitudeDelta: LONGITUDE_DELTA,\r\n      },\r\n    };\r\n  }\r\n\r\n  get mapType() {\r\n    \/\/ MapKit does not support 'none' as a base map\r\n    return this.props.provider === PROVIDER_DEFAULT\r\n      ? MAP_TYPES.STANDARD\r\n      : MAP_TYPES.NONE;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <MapView\r\n          provider={this.props.provider}\r\n          mapType={this.mapType}\r\n          style={styles.map}>\r\n          <LocalTile\r\n            pathTemplate=\"\/storage\/emulated\/0\/Documents\/mytiles\/{z}\/{x}\/{y}.png\"\r\n            tileSize={256}\r\n            zIndex={-1}\r\n          \/>\r\n        <\/MapView>\r\n        <View style={styles.buttonContainer}>\r\n          <View style={styles.bubble}>\r\n            <Text>Custom Tiles Local<\/Text>\r\n          <\/View>\r\n        <\/View>\r\n      <\/View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n  },\r\n  map: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n  },\r\n  bubble: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(255,255,255,0.7)',\r\n    paddingHorizontal: 18,\r\n    paddingVertical: 12,\r\n    borderRadius: 20,\r\n  },\r\n  latlng: {\r\n    width: 200,\r\n    alignItems: 'stretch',\r\n  },\r\n  button: {\r\n    width: 80,\r\n    paddingHorizontal: 12,\r\n    alignItems: 'center',\r\n    marginHorizontal: 10,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    marginVertical: 20,\r\n    backgroundColor: 'transparent',\r\n  },\r\n});\r\n\r\nexport default App;\n```\n\n\n### Steps to reproduce\n\n1. `npx react-native@latest init OfflineMapExample`\r\n2. `cd OfflineMapExample`\r\n3. `yarn add react-native-maps`\r\n4. Add `com.google.android.geo.API_KEY` to `android\/app\/src\/main\/AndroidManifest.xml`\r\n5. Copy example from https:\/\/github.com\/react-native-maps\/react-native-maps\/blob\/master\/example\/src\/examples\/CustomTilesLocal.tsx to App.tsx\r\n6. Rename class `CustomTiles` to `App`.\r\n7. Change `pathTemplate` to `\/storage\/emulated\/0\/Documents\/mytiles\/{z}\/{x}\/{y}.png`\r\n8. Remove initialRegion\r\n9. Download https:\/\/drive.google.com\/file\/d\/1MWahbfhwI1WQ4MUm6f2NwIiGQn28oK7F\/view?usp=sharing\r\n10. Start emulator\r\n11. `adb push mytiles\/. \/sdcard\/Documents\/mytiles`\r\n12. `yarn android`\r\n13. Close app after loading\r\n14. Enable airplane mode\r\n15. Open app\n\n### Expected result\n\nDisplays the global map according to the 0\/0\/0 tile.\n\n### Actual result\n\nThe global map displays only in the part that managed to be loaded into the cache at the end of step 12.\n\n### React Native Maps Version\n\n1.7.1\n\n### What platforms are you seeing the problem on?\n\nAndroid\n\n### React Native Version\n\n0.72.3\n\n### What version of Expo are you using?\n\nNot using Expo\n\n### Device(s)\n\nAndroid Emulator - Pixel_5_API_30\n\n### Additional information\n\n_No response_","comments":["@katsimoto were you able to get offline maps to work?","> @katsimoto were you able to get offline maps to work?\r\n\r\nNo.","I have the same problem..... suggestions? ","I have this problem too, any idea?","I have the same issue with urltile but using file:\/\/. Works fine on iOS but not android.","Any solution?"],"labels":["bug"]},{"title":"IOS Build Error: `unsupported Swift architecture` and `could not build module 'GoogleMapsUtils'`","body":"### Summary\r\n\r\nWhen building the App with `\"react-native\": \"0.72.3\"`, ` \"expo\": \"^49.0.3\",` and `\"react-native-maps\": \"1.7.1\",`, the IOS build getting fail with the following errors:\r\n\r\n```sh\r\n\u203a Compiling react-native-maps Pods\/react-native-google-maps \u00bb AIRGoogleMapHeatmapManager.m\r\n\r\n\r\n\u274c  (\/Users\/expo\/workingdir\/build\/ios\/build\/Build\/Products\/Debug-iphonesimulator\/Google-Maps-iOS-Utils\/GoogleMapsUtils.framework\/Headers\/GoogleMapsUtils-Swift.h:310:2)\r\n\r\n  308 | \r\n  309 | #else\r\n> 310 | #error unsupported Swift architecture\r\n      |  ^ unsupported Swift architecture\r\n  311 | #endif\r\n  312 | \r\n\r\n\r\n\u274c  (node_modules\/react-native-maps\/ios\/AirGoogleMaps\/AIRGoogleMapHeatmap.h:7:9)\r\n\r\n   5 | \/\/\r\n   6 | \r\n>  7 | #import \"GMUHeatmapTileLayer.h\"\r\n     |         ^ could not build module 'GoogleMapsUtils'\r\n   8 | \r\n   9 | @interface AIRGoogleMapHeatmap : UIView\r\n  10 | \r\n\r\n\u203a Compiling react-native-maps Pods\/react-native-google-maps \u00bb AIRGoogleMapHeatmap.m\r\n\r\n\r\n\u274c  (\/Users\/expo\/workingdir\/build\/ios\/build\/Build\/Products\/Debug-iphonesimulator\/Google-Maps-iOS-Utils\/GoogleMapsUtils.framework\/Headers\/GoogleMapsUtils-Swift.h:310:2)\r\n\r\n  308 | \r\n  309 | #else\r\n> 310 | #error unsupported Swift architecture\r\n      |  ^ unsupported Swift architecture\r\n  311 | #endif\r\n  312 | \r\n\r\n\u203a Compiling react-native-maps Pods\/react-native-google-maps \u00bb AIRGoogleMapCircleManager.m\r\n\r\n    Run script build phase 'Start Packager' will be run during every build because it does not specify any outputs. To address this warning, either add output dependencies to the script phase, or configure it to run in every build by unchecking \"Based on dependency analysis\" in the script phase. (in target 'TilleliDev' from project 'TilleliDev')\r\n\r\n    Run script build phase 'Bundle React Native code and images' will be run during every build because it does not specify any outputs. To address this warning, either add output dependencies to the script phase, or configure it to run in every build by unchecking \"Based on dependency analysis\" in the script phase. (in target 'TilleliDev' from project 'TilleliDev')\r\n\r\n    Run script build phase '[CP-User] [RNFB] Core Configuration' will be run during every build because it does not specify any outputs. To address this warning, either add output dependencies to the script phase, or configure it to run in every build by unchecking \"Based on dependency analysis\" in the script phase. (in target 'TilleliDev' from project 'TilleliDev')\r\n\r\n    Run script build phase '[CP-User] [RNFB] Crashlytics Configuration' will be run during every build because it does not specify any outputs. To address this warning, either add output dependencies to the script phase, or configure it to run in every build by unchecking \"Based on dependency analysis\" in the script phase. (in target 'TilleliDev' from project 'TilleliDev')\r\n\r\n    Run script build phase 'Create Symlinks to Header Folders' will be run during every build because it does not specify any outputs. To address this warning, either add output dependencies to the script phase, or configure it to run in every build by unchecking \"Based on dependency analysis\" in the script phase. (in target 'fmt' from project 'Pods')\r\n\r\n    Run script build phase 'Create Symlinks to Header Folders' will be run during every build because it does not specify any outputs. To address this warning, either add output dependencies to the script phase, or configure it to run in every build by unchecking \"Based on dependency analysis\" in the script phase. (in target 'ReactCommon' from project 'Pods')\r\n\r\n    Run script build phase 'Create Symlinks to Header Folders' will be run during every build because it does not specify any outputs. To address this warning, either add output dependencies to the script phase, or configure it to run in every build by unchecking \"Based on dependency analysis\" in the script phase. (in target 'React-utils' from project 'Pods')\r\n\r\n    Run script build phase 'Create Symlinks to Header Folders' will be run during every build because it does not specify any outputs. To address this warning, either add output dependencies to the script phase, or configure it to run in every build by unchecking \"Based on dependency analysis\" in the script phase. (in target 'React-runtimescheduler' from project 'Pods')\r\n\r\n\u25b8 ** BUILD FAILED **\r\n\r\n\u25b8 The following build commands failed:\r\n\r\n\u25b8 \tCompileC \/Users\/expo\/workingdir\/build\/ios\/build\/Build\/Intermediates.noindex\/Pods.build\/Debug-iphonesimulator\/react-native-google-maps.build\/Objects-normal\/arm64\/AIRGoogleMapHeatmapManager.o \/Users\/expo\/workingdir\/build\/node_modules\/react-native-maps\/ios\/AirGoogleMaps\/AIRGoogleMapHeatmapManager.m normal arm64 objective-c com.apple.compilers.llvm.clang.1_0.compiler (in target 'react-native-google-maps' from project 'Pods')\r\n\r\n\u25b8 (1 failure)\r\n\r\n2023-07-12 14:32:18.575 xcodebuild[5352:16454] DVTCoreDeviceEnabledState: DVTCoreDeviceEnabledState_Disabled set via user default (DVTEnableCoreDevice=disabled)\r\n\r\n** BUILD FAILED **\r\n\r\n\r\n\r\nThe following build commands failed:\r\n\r\n\tCompileC \/Users\/expo\/workingdir\/build\/ios\/build\/Build\/Intermediates.noindex\/Pods.build\/Debug-iphonesimulator\/react-native-google-maps.build\/Objects-normal\/arm64\/AIRGoogleMapHeatmapManager.o \/Users\/expo\/workingdir\/build\/node_modules\/react-native-maps\/ios\/AirGoogleMaps\/AIRGoogleMapHeatmapManager.m normal arm64 objective-c com.apple.compilers.llvm.clang.1_0.compiler (in target 'react-native-google-maps' from project 'Pods')\r\n\r\n(1 failure)\r\n\r\nExit status: 65\r\n\r\n\r\n+-------------+-------------------------+\r\n\r\n|           Build environment           |\r\n\r\n+-------------+-------------------------+\r\n\r\n| xcode_path  | \/Applications\/Xcode.app |\r\n\r\n| gym_version | 2.213.0                 |\r\n\r\n| sdk         | iPhoneOS16.4.sdk        |\r\n\r\n+-------------+-------------------------+\r\n```\r\n\r\n### Reproducible sample code\r\n\r\n```TSX\r\nimport MapView from 'react-native-maps';\r\n\r\nexport default function App() {\r\n  return (\r\n    <MapView\r\n      style={{flex: 1}}\r\n      initialRegion={{\r\n        latitude: 42,\r\n        longitude: 30,\r\n        latitudeDelta: 1,\r\n        longitudeDelta: 1,\r\n      }}\r\n    \/>\r\n  );\r\n}\r\n```\r\n\r\n\r\n### Steps to reproduce\r\n\r\nBuild the app\r\n\r\n### Expected result\r\n\r\nSuccessful build\r\n\r\n### Actual result\r\n\r\nFail IOS build \r\n\r\n### React Native Maps Version\r\n\r\n1.7.1\r\n\r\n### What platforms are you seeing the problem on?\r\n\r\niOS (Google Maps)\r\n\r\n### React Native Version\r\n\r\n0.72.3\r\n\r\n### What version of Expo are you using?\r\n\r\nSDK 49\r\n\r\n### Device(s)\r\n\r\nnull\r\n\r\n### Additional information\r\n\r\n_No response_","comments":["If you're using a M1, try on your xCode, go to Product -> Destination -> Destination Architectures -> Show Rosetta Destinations\r\nAnd then select the Simulator (Rosetta)\r\nThen it should work","To select the version with Rosetta you need to click here: \r\n![image](https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/110385497\/2ed1b7f0-307d-4137-bdd4-4562bbdee7aa)\r\nThere will be Iphone 14 Pro (Rosetta)","@LucasLFurini But this happens with the build in expo, when I run the command `eas build --platform ios` we get this error, in these described versions. I can't imagine how the simulator on mac could interfere.","Same problem here.\r\n\r\nI'm getting this error when I try to build a dev-client with this command:\r\n\r\n`npx eas build --profile development-simulator --platform ios`\r\n\r\nThe development-simulator profile inside `eas.json`:\r\n\r\n```javascript\r\n{\r\n  \"cli\": {\r\n    \"version\": \">= 0.34.0\"\r\n  },\r\n  \"build\": {\r\n    \"development-simulator\": {\r\n      \"developmentClient\": true,\r\n      \"distribution\": \"internal\",\r\n      \"ios\": {\r\n        \"simulator\": true\r\n      }\r\n    },\r\n    \"debug\": {\r\n      \"android\": {\r\n        \"buildType\": \"apk\",\r\n        \"image\": \"latest\"\r\n      }\r\n    },\r\n    \"production\": {}\r\n  }\r\n}\r\n``` \r\n\r\nPackage versions:\r\n```javascript\r\n\"react-native-maps\": \"1.7.1\"\r\n\"expo\": \"^49.0.0\"\r\n\"react-native\": \"0.72.3\"\r\n```","Have the same without expo. \"react-native-maps\": \"1.7.1\"\r\n\r\n```\r\nWhile building module 'GoogleMapsUtils' imported from \/Users\/...\/Documents\/Projects\/...\/node_modules\/react-native-maps\/ios\/AirGoogleMaps\/AIRGoogleMapHeatmap.h:7:\r\nIn file included from <module-includes>:2:\r\n\/Users\/...\/Library\/Developer\/Xcode\/DerivedData\/...-gakpmozuyejlgzbcqlqnauqzhrwl\/Build\/Products\/Release-iphonesimulator\/Google-Maps-iOS-Utils\/GoogleMapsUtils.framework\/Headers\/GoogleMapsUtils-Swift.h:310:2: error: unsupported Swift architecture\r\n#error unsupported Swift architecture\r\n ^\r\n1 error generated.\r\nIn file included from \/Users\/...\/Documents\/Projects\/...\/node_modules\/react-native-maps\/ios\/AirGoogleMaps\/AIRGoogleMapHeatmapManager.m:8:\r\n\/Users\/...\/Documents\/Projects\/...\/node_modules\/react-native-maps\/ios\/AirGoogleMaps\/AIRGoogleMapHeatmap.h:7:9: fatal error: could not build module 'GoogleMapsUtils'\r\n#import \"GMUHeatmapTileLayer.h\"\r\n ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~\r\n2 errors generated.\r\n```\r\n\r\nP.S.\r\n\r\nMy error was fixed after adding to Podfile before rn_maps_path\r\n\r\n```\r\n# The following line is only needed if building on an Apple silicon Mac without rosetta.\r\npod 'Google-Maps-iOS-Utils', :git => 'https:\/\/github.com\/Simon-TechForm\/google-maps-ios-utils.git', :branch => 'feat\/support-apple-silicon'\r\n```","Also having build issues with RNM 1.7.1 and Expo 48.\r\n\r\nLooking into figuring out how to get the logs from xcode now.\r\n\r\nMoving RNM back to 1.3 fixed it but causes other issues with the default pins rendering.\r\n\r\ncompletely unhelpful:\r\n\r\n> Thread 2 name:\r\nThread 2 Crashed:\r\n0   libsystem_kernel.dylib        \t0x00000001f0cfe558 __pthread_kill + 8 (:-1)\r\n1   libsystem_pthread.dylib       \t0x0000000211b43118 pthread_kill + 268 (pthread.c:1670)\r\n2   libsystem_c.dylib             \t0x00000001b92e3178 abort + 180 (abort.c:118)\r\n3   libc++abi.dylib               \t0x0000000211a81bf8 abort_message + 132 (:-1)\r\n4   libc++abi.dylib               \t0x0000000211a71444 demangling_terminate_handler() + 348 (:-1)\r\n5   libobjc.A.dylib               \t0x00000001aae5dea4 _objc_terminate() + 144 (objc-exception.mm:498)\r\n6   libc++abi.dylib               \t0x0000000211a80fbc std::__terminate(void (*)()) + 16 (:-1)\r\n7   libc++abi.dylib               \t0x0000000211a80f60 std::terminate() + 56 (:-1)\r\n8   libdispatch.dylib             \t0x00000001b9282ec0 _dispatch_client_callout + 40 (object.m:563)\r\n9   libdispatch.dylib             \t0x00000001b928a534 _dispatch_lane_serial_drain + 668 (queue.c:3885)\r\n10  libdispatch.dylib             \t0x00000001b928b0a4 _dispatch_lane_invoke + 384 (queue.c:3976)\r\n11  libdispatch.dylib             \t0x00000001b9295cdc _dispatch_workloop_worker_thread + 648 (queue.c:6507)\r\n12  libsystem_pthread.dylib       \t0x0000000211b3cddc _pthread_wqthread + 288 (pthread.c:2618)\r\n13  libsystem_pthread.dylib       \t0x0000000211b3cb7c start_wqthread + 8 (:-1)\r\n","Try this plugin, It may resolve.\r\n\r\n```js\r\n\/\/ react-native-maps-plugin.js\r\nconst fs = require(\"fs\");\r\nconst path = require(\"path\");\r\nconst { withDangerousMod } = require(\"expo\/config-plugins\");\r\nconst generateCode = require(\"@expo\/config-plugins\/build\/utils\/generateCode\");\r\n\r\n\/\/ https:\/\/github.com\/react-native-maps\/react-native-maps\/issues\/4793#issuecomment-1671269814\r\nconst googleMapsIosSiliconWorkaroundPodCode = `pod 'Google-Maps-iOS-Utils', :git => 'https:\/\/github.com\/Simon-TechForm\/google-maps-ios-utils.git', :branch => 'feat\/support-apple-silicon'`;\r\n\r\n\/** @type { import('expo\/config-plugins').ConfigPlugin } *\/\r\nconst withPlugin = (expoConfig) => {\r\n  return withDangerousMod(expoConfig, [\r\n    \"ios\",\r\n    async (config) => {\r\n      const filePath = path.join(\r\n        config.modRequest.platformProjectRoot,\r\n        \"Podfile\"\r\n      );\r\n\r\n      const contents = fs.readFileSync(filePath, \"utf-8\");\r\n\r\n      const addCode = generateCode.mergeContents({\r\n        newSrc: googleMapsIosSiliconWorkaroundPodCode,\r\n        tag: \"withGoogleMapsIOSWorkaroundPlugin\",\r\n        anchor: \/\\s*get_default_flags\\(\\)\/i,\r\n        src: contents,\r\n        comment: \"#\",\r\n        offset: 2,\r\n      });\r\n\r\n      if (!addCode.didMerge) {\r\n        console.warn(\r\n          \"WARNING: Couldn't add custom plugin Podfile code from app.plugin.js to the project's ios\/Podfile.\"\r\n        );\r\n        return config;\r\n      }\r\n\r\n      fs.writeFileSync(filePath, addCode.contents);\r\n\r\n      return config;\r\n    },\r\n  ]);\r\n};\r\n\r\nmodule.exports = withPlugin;\r\n```\r\n\r\n```json\r\n\/\/ app.json\r\n\"plugins\": [\r\n      \".\/react-native-maps-plugin\",\r\n    ],\r\n```\r\n\r\nAs mentioned here :\r\nhttps:\/\/github.com\/react-native-maps\/react-native-maps\/pull\/4757#issuecomment-1604959747\r\nhttps:\/\/github.com\/react-native-maps\/react-native-maps\/blob\/master\/docs\/installation.md#enabling-google-maps","> Try this plugin, It may resolve.\r\n> \r\n> ```js\r\n> \/\/ react-native-maps-plugin.js\r\n> const fs = require(\"fs\");\r\n> const path = require(\"path\");\r\n> const { withDangerousMod } = require(\"expo\/config-plugins\");\r\n> const generateCode = require(\"@expo\/config-plugins\/build\/utils\/generateCode\");\r\n> \r\n> \/\/ https:\/\/github.com\/react-native-maps\/react-native-maps\/issues\/4793#issuecomment-1671269814\r\n> const googleMapsIosSiliconWorkaroundPodCode = `pod 'Google-Maps-iOS-Utils', :git => 'https:\/\/github.com\/Simon-TechForm\/google-maps-ios-utils.git', :branch => 'feat\/support-apple-silicon'`;\r\n> \r\n> \/** @type { import('expo\/config-plugins').ConfigPlugin } *\/\r\n> const withPlugin = (expoConfig) => {\r\n>   return withDangerousMod(expoConfig, [\r\n>     \"ios\",\r\n>     async (config) => {\r\n>       const filePath = path.join(\r\n>         config.modRequest.platformProjectRoot,\r\n>         \"Podfile\"\r\n>       );\r\n> \r\n>       const contents = fs.readFileSync(filePath, \"utf-8\");\r\n> \r\n>       const addCode = generateCode.mergeContents({\r\n>         newSrc: googleMapsIosSiliconWorkaroundPodCode,\r\n>         tag: \"withGoogleMapsIOSWorkaroundPlugin\",\r\n>         anchor: \/\\s*get_default_flags\\(\\)\/i,\r\n>         src: contents,\r\n>         comment: \"#\",\r\n>         offset: 2,\r\n>       });\r\n> \r\n>       if (!addCode.didMerge) {\r\n>         console.warn(\r\n>           \"WARNING: Couldn't add custom plugin Podfile code from app.plugin.js to the project's ios\/Podfile.\"\r\n>         );\r\n>         return config;\r\n>       }\r\n> \r\n>       fs.writeFileSync(filePath, addCode.contents);\r\n> \r\n>       return config;\r\n>     },\r\n>   ]);\r\n> };\r\n> \r\n> module.exports = withPlugin;\r\n> ```\r\n> \r\n> ```json\r\n> \/\/ app.json\r\n> \"plugins\": [\r\n>       \".\/react-native-maps-plugin\",\r\n>     ],\r\n> ```\r\n> \r\n> As mentioned here : [#4757 (comment)](https:\/\/github.com\/react-native-maps\/react-native-maps\/pull\/4757#issuecomment-1604959747) https:\/\/github.com\/react-native-maps\/react-native-maps\/blob\/master\/docs\/installation.md#enabling-google-maps\r\n\r\nThis works for me!, thanks @SohelIslamImran","> Looking into figuring out how to get the logs from xcode now.\r\n\r\n@ml242, there should be a link at the bottom of the build page to access the Xcode logs","> Try this plugin, It may resolve.\r\n> \r\n> ```js\r\n> \/\/ react-native-maps-plugin.js\r\n> const fs = require(\"fs\");\r\n> const path = require(\"path\");\r\n> const { withDangerousMod } = require(\"expo\/config-plugins\");\r\n> const generateCode = require(\"@expo\/config-plugins\/build\/utils\/generateCode\");\r\n> \r\n> \/\/ https:\/\/github.com\/react-native-maps\/react-native-maps\/issues\/4793#issuecomment-1671269814\r\n> const googleMapsIosSiliconWorkaroundPodCode = `pod 'Google-Maps-iOS-Utils', :git => 'https:\/\/github.com\/Simon-TechForm\/google-maps-ios-utils.git', :branch => 'feat\/support-apple-silicon'`;\r\n> \r\n> \/** @type { import('expo\/config-plugins').ConfigPlugin } *\/\r\n> const withPlugin = (expoConfig) => {\r\n>   return withDangerousMod(expoConfig, [\r\n>     \"ios\",\r\n>     async (config) => {\r\n>       const filePath = path.join(\r\n>         config.modRequest.platformProjectRoot,\r\n>         \"Podfile\"\r\n>       );\r\n> \r\n>       const contents = fs.readFileSync(filePath, \"utf-8\");\r\n> \r\n>       const addCode = generateCode.mergeContents({\r\n>         newSrc: googleMapsIosSiliconWorkaroundPodCode,\r\n>         tag: \"withGoogleMapsIOSWorkaroundPlugin\",\r\n>         anchor: \/\\s*get_default_flags\\(\\)\/i,\r\n>         src: contents,\r\n>         comment: \"#\",\r\n>         offset: 2,\r\n>       });\r\n> \r\n>       if (!addCode.didMerge) {\r\n>         console.warn(\r\n>           \"WARNING: Couldn't add custom plugin Podfile code from app.plugin.js to the project's ios\/Podfile.\"\r\n>         );\r\n>         return config;\r\n>       }\r\n> \r\n>       fs.writeFileSync(filePath, addCode.contents);\r\n> \r\n>       return config;\r\n>     },\r\n>   ]);\r\n> };\r\n> \r\n> module.exports = withPlugin;\r\n> ```\r\n> \r\n> ```json\r\n> \/\/ app.json\r\n> \"plugins\": [\r\n>       \".\/react-native-maps-plugin\",\r\n>     ],\r\n> ```\r\n> \r\n> As mentioned here : [#4757 (comment)](https:\/\/github.com\/react-native-maps\/react-native-maps\/pull\/4757#issuecomment-1604959747) https:\/\/github.com\/react-native-maps\/react-native-maps\/blob\/master\/docs\/installation.md#enabling-google-maps\r\n\r\nThis worked for me too thanks @SohelIslamImran ","I got these errors: \r\n\u274c  (\/var\/folders\/d4\/vs95y56x7_ddxqkybw1l9l1w0000gn\/T\/eas-build-local-nodejs\/da587945-8535-4b09-9506-3dcc1a523dae\/build\/apps\/proprate-mobile\/ios\/build\/Build\/Products\/Debug-iphonesimulator\/Google-Maps-iOS-Utils\/GoogleMapsUtils.framework\/Headers\/GoogleMapsUtils-Swift.h:327:2)\r\n\r\n  325 |\r\n  326 | #else\r\n> 327 | #error unsupported Swift architecture\r\n      |  ^ unsupported Swift architecture\r\n  328 | #endif\r\n  329 |\r\n\r\n[RUN_FASTLANE]\r\n\u274c  (..\/..\/..\/..\/..\/..\/..\/..\/..\/..\/private\/var\/folders\/d4\/vs95y56x7_ddxqkybw1l9l1w0000gn\/T\/eas-build-local-nodejs\/da587945-8535-4b09-9506-3dcc1a523dae\/build\/node_modules\/react-native-maps\/ios\/AirGoogleMaps\/AIRGoogleMapHeatmap.h:7:9)\r\n\r\n   5 | \/\/\r\n   6 |\r\n>  7 | #import \"GMUHeatmapTileLayer.h\"\r\n     |         ^ could not build module 'GoogleMapsUtils'\r\n   8 |\r\n   9 | @interface AIRGoogleMapHeatmap : UIView\r\n  10 |\r\n  \r\n  Any idea? \r\n\r\nThis is now the .js file I am using and get the following erorr\r\n```\r\n\/\/ .\/react-native-maps-ios-fix.js\r\nconst plugins = require('@expo\/config-plugins')\r\nconst {\r\n  mergeContents,\r\n} = require('@expo\/config-plugins\/build\/utils\/generateCode')\r\nconst fs = require('fs')\r\nconst path = require('path')\r\n\r\nmodule.exports = function withFlipper(config) {\r\n  return plugins.withDangerousMod(config, [\r\n    'ios',\r\n    async (config) => {\r\n      const filePath = path.join(\r\n        config.modRequest.platformProjectRoot,\r\n        'Podfile',\r\n      )\r\n      const contents = fs.readFileSync(filePath, 'utf-8')\r\n\r\n      const enableFix = mergeContents({\r\n        tag: 'react-native-maps ios fix',\r\n        src: contents,\r\n        newSrc: `pod 'Google-Maps-iOS-Utils', :git => 'https:\/\/github.com\/Simon-TechForm\/google-maps-ios-utils.git', :branch => 'feat\/support-apple-silicon`,\r\n        anchor: \/use_native_modules!\/, \/\/we find this line\r\n        offset: -1, \/\/we add it on the line before\r\n        comment: '#',\r\n      })\r\n\r\n      if (!enableFix.didMerge) {\r\n        console.log('ERROR: Cannot add react-native-maps-ios-fix to Podfile.')\r\n        return config\r\n      }\r\n\r\n      fs.writeFileSync(filePath, enableFix.contents)\r\n\r\n      return config\r\n    },\r\n  ])\r\n}\r\n```\r\n\r\nNow I get this:\r\n\r\n<img width=\"899\" alt=\"image\" src=\"https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/15271433\/c079fea1-51f7-4998-af86-9f9dd49a3e2f\">\r\n\r\n","> ```\r\n> pod 'Google-Maps-iOS-Utils', :git => 'https:\/\/github.com\/Simon-TechForm\/google-maps-ios-utils.git', :branch => 'feat\/support-apple-silicon'\r\n> ```\r\n\r\nThank you so much! Quick solution \ud83d\ude80 ","Forcing a new version of `Google-Maps-iOS-Utils` worked for me:\r\n\r\n```json\r\n\/\/ app.json\r\n\r\n{\r\n  \"plugins\": [\r\n    [\r\n      \"expo-build-properties\",\r\n      {\r\n        \"ios\": {\r\n          \"extraPods\": [{ \"name\": \"Google-Maps-iOS-Utils\", \"version\": \">=4.2.0\" }]\r\n        }\r\n      }\r\n    ]\r\n  ]\r\n}\r\n```","### One of my Team tell me to do this for M1 user and it works and config plugin for me also works\r\n![Screenshot 2024-01-05 at 1 55 23 in the afternoon](https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/65760336\/4fc4fb44-9fd4-46e7-9084-816963a2eaab)\r\n\r\n\r\n> Try this plugin, It may resolve.\r\n> \r\n> ```js\r\n> \/\/ react-native-maps-plugin.js\r\n> const fs = require(\"fs\");\r\n> const path = require(\"path\");\r\n> const { withDangerousMod } = require(\"expo\/config-plugins\");\r\n> const generateCode = require(\"@expo\/config-plugins\/build\/utils\/generateCode\");\r\n> \r\n> \/\/ https:\/\/github.com\/react-native-maps\/react-native-maps\/issues\/4793#issuecomment-1671269814\r\n> const googleMapsIosSiliconWorkaroundPodCode = `pod 'Google-Maps-iOS-Utils', :git => 'https:\/\/github.com\/Simon-TechForm\/google-maps-ios-utils.git', :branch => 'feat\/support-apple-silicon'`;\r\n> \r\n> \/** @type { import('expo\/config-plugins').ConfigPlugin } *\/\r\n> const withPlugin = (expoConfig) => {\r\n>   return withDangerousMod(expoConfig, [\r\n>     \"ios\",\r\n>     async (config) => {\r\n>       const filePath = path.join(\r\n>         config.modRequest.platformProjectRoot,\r\n>         \"Podfile\"\r\n>       );\r\n> \r\n>       const contents = fs.readFileSync(filePath, \"utf-8\");\r\n> \r\n>       const addCode = generateCode.mergeContents({\r\n>         newSrc: googleMapsIosSiliconWorkaroundPodCode,\r\n>         tag: \"withGoogleMapsIOSWorkaroundPlugin\",\r\n>         anchor: \/\\s*get_default_flags\\(\\)\/i,\r\n>         src: contents,\r\n>         comment: \"#\",\r\n>         offset: 2,\r\n>       });\r\n> \r\n>       if (!addCode.didMerge) {\r\n>         console.warn(\r\n>           \"WARNING: Couldn't add custom plugin Podfile code from app.plugin.js to the project's ios\/Podfile.\"\r\n>         );\r\n>         return config;\r\n>       }\r\n> \r\n>       fs.writeFileSync(filePath, addCode.contents);\r\n> \r\n>       return config;\r\n>     },\r\n>   ]);\r\n> };\r\n> \r\n> module.exports = withPlugin;\r\n> ```\r\n> \r\n> ```json\r\n> \/\/ app.json\r\n> \"plugins\": [\r\n>       \".\/react-native-maps-plugin\",\r\n>     ],\r\n> ```\r\n> \r\n> As mentioned here : [#4757 (comment)](https:\/\/github.com\/react-native-maps\/react-native-maps\/pull\/4757#issuecomment-1604959747) https:\/\/github.com\/react-native-maps\/react-native-maps\/blob\/master\/docs\/installation.md#enabling-google-maps\r\n\r\n","@chanphiromsok \r\n\r\nIt works great) Thank you and your colleague.","For folks who use expo sdk 50, it works without any expo plugin - you just need to use these versions: \r\n\r\n```\r\n \"react-native-maps\": \"1.10.0\"\r\n \"expo\": \"^50.0.0\"\r\n```","> For folks who use expo sdk 50, it works without any expo plugin - you just need to use these versions:\r\n> \r\n> ```\r\n>  \"react-native-maps\": \"1.10.0\"\r\n>  \"expo\": \"^50.0.0\"\r\n> ```\r\n\r\ni can confirm!\r\nexpo will update doctor to recommend 1.10.0 for SDK 50"],"labels":["bug"]},{"title":"react-native-google-maps requires higher minimum sdk than react-native's min_ios_version_supported","body":"### Summary\r\n\r\nWhen doing an install of react-native-maps from react-native 0.71.10,  react-native-maps versions ^1.0.0 have the podspec `react-native-google-maps` which requires ios platfrom >= 13. While react-native's default min platform version is 12.4.\r\n\r\nIs there a suggested workaround for when the pod install fails for this? Because the README currently indicates that react-native-maps is compatible with react-native versions >=0.64.3. \r\n\r\nIf overriding the minimum platform version is the solution (which I believe would expose all of our projects to larger issues anyway), that should be documented, else if it is not the proper solution, the minimum compatible react-native version should likely be incremented to >=0.72\r\n\r\n### Reproducible sample code\r\n\r\n```TSX\r\n\/\/ package.json\r\n\r\n{\r\n  \"dependencies\": {\r\n    \"react-native\": \"0.71.10\",\r\n    \"react-native-maps\": \"^1.0.0\"\r\n  }\r\n}\r\n```\r\n\/\/ Podfile\r\n```\r\n# React Native Maps dependencies\r\n# The following line is only needed if building on an Apple silicon Mac without rosetta.\r\npod 'Google-Maps-iOS-Utils', :git => 'https:\/\/github.com\/Simon-TechForm\/google-maps-ios-utils.git', :branch => 'feat\/support-apple-silicon'\r\n\r\nrn_maps_path = '..\/node_modules\/react-native-maps'\r\npod 'react-native-google-maps', :path => rn_maps_path\r\n```\r\n```\r\n\r\n\r\n### Steps to reproduce\r\n\r\n`yarn`\r\n`pod install`\r\n\r\n### Expected result\r\n\r\nsuccessful install\r\n\r\n### Actual result\r\n\r\n# Pod Install Error:\r\nSpecs satisfying the `react-native-google-maps (from `..\/node_modules\/react-native-maps`)` dependency were found, but they required a higher minimum deployment target.\r\n\r\n### React Native Maps Version\r\n\r\n^1.0.0\r\n\r\n### What platforms are you seeing the problem on?\r\n\r\niOS (Google Maps)\r\n\r\n### React Native Version\r\n\r\n0.71.10\r\n\r\n### What version of Expo are you using?\r\n\r\nNot using Expo\r\n\r\n### Device(s)\r\n\r\nsimulator\r\n\r\n### Additional information\r\n\r\n_No response_","comments":["I'm having the same issue","I have the same problem, how do you solve the problem?\r\n\r\n### package.json\r\n\r\n> \r\n    \"react\": \"18.2.0\",\r\n    \"react-native\": \"0.72.1\",\r\n    \"react-native-maps\": \"^1.7.1\",\r\n\r\n> System:\r\n  OS: macOS 13.4.1\r\n  CPU: (8) x64 Intel(R) Core(TM) i5-1038NG7 CPU @ 2.00GHz\r\n  Memory: 35.04 MB \/ 16.00 GB\r\n  Shell:\r\n    version: \"5.9\"\r\n    path: \/bin\/zsh\r\nBinaries:\r\n  Node:\r\n    version: 20.4.0\r\n    path: \/usr\/local\/bin\/node\r\n  Yarn:\r\n    version: 1.22.19\r\n    path: \/usr\/local\/bin\/yarn\r\n  npm:\r\n    version: 9.5.1\r\n    path: \/usr\/local\/opt\/node@18\/bin\/npm\r\n  Watchman:\r\n    version: 2023.07.03.00\r\n    path: \/usr\/local\/bin\/watchman\r\nManagers:\r\n  CocoaPods:\r\n    version: 1.11.2\r\n    path: \/usr\/local\/bin\/pod\r\nSDKs:\r\n  iOS SDK:\r\n    Platforms:\r\n      - DriverKit 22.4\r\n      - iOS 16.4\r\n      - macOS 13.3\r\n      - tvOS 16.4\r\n      - watchOS 9.4\r\n  Android SDK:\r\n    API Levels:\r\n      - \"28\"\r\n      - \"29\"\r\n      - \"30\"\r\n      - \"31\"\r\n      - \"32\"\r\n      - \"33\"\r\n    Build Tools:\r\n      - 28.0.3\r\n      - 29.0.2\r\n      - 29.0.3\r\n      - 30.0.2\r\n      - 30.0.3\r\n      - 31.0.0\r\n      - 32.1.0\r\n      - 33.0.0\r\n      - 33.0.1\r\n      - 33.0.2\r\n      - 34.0.0\r\n      - 34.0.0\r\n    System Images:\r\n      - android-28 | Google Play Intel x86 Atom\r\n      - android-29 | Intel x86 Atom_64\r\n      - android-29 | Google APIs Intel x86 Atom\r\n      - android-29 | Google Play Intel x86 Atom\r\n      - android-30 | Google APIs Intel x86 Atom\r\n      - android-30 | Google APIs Intel x86 Atom_64\r\n      - android-30 | Google Play Intel x86 Atom\r\n      - android-31 | Google Play Intel x86 Atom_64\r\n      - android-32 | Google Play Intel x86 Atom_64\r\n      - android-33-ext4 | Google Play Intel x86_64 Atom\r\n      - android-33 | Google Play Intel x86_64 Atom\r\n    Android NDK: Not Found\r\nIDEs:\r\n  Android Studio: 2022.2 AI-222.4459.24.2221.10121639\r\n  Xcode:\r\n    version: 14.3.1\/14E300c\r\n    path: \/usr\/bin\/xcodebuild\r\nLanguages:\r\n  Java:\r\n    version: 11.0.11\r\n    path: \/usr\/bin\/javac\r\n  Ruby:\r\n    version: 2.6.10\r\n    path: \/usr\/bin\/ruby\r\nnpmPackages:\r\n  \"@react-native-community\/cli\": Not Found\r\n  react: Not Found\r\n  react-native: Not Found\r\n  react-native-macos: Not Found\r\nnpmGlobalPackages:\r\n  \"*react-native*\": Not Found\r\nAndroid:\r\n  hermesEnabled: true\r\n  newArchEnabled: false\r\niOS:\r\n  hermesEnabled: Not found\r\n  newArchEnabled: Not found\r\n  \r\nIf anyone knows how to fix this problem please let me know, Thank you","@Bualaphanh for the time being, I've reduced my version down to `^0.31.1` which works, but is still frustrating, would love to leverage newer features.","Same here\r\n`\"react-native\": \"0.72.3\"`\r\n`\"react-native-maps\": \"^1.7.1\"`\r\ngives\r\n`Specs satisfying the 'react-native-google-maps (from '..\/node_modules\/react-native-maps')' dependency were found, but they required a higher minimum deployment target.`\r\n\r\nAs suggested by [mgithubmessier](https:\/\/github.com\/mgithubmessier) downgrading to `\"react-native-maps\": \"0.31.1\"` works.\r\n","Please follow the steps\r\nhttps:\/\/youtu.be\/VOCRBdzHEqM\r\n","You can change min ios version on Podfile.\r\n```\r\n# platform :ios, min_ios_version_supported\r\nplatform :ios, '13.0'\r\n```","> You can change min ios version on Podfile.\r\n> \r\n> ```\r\n> # platform :ios, min_ios_version_supported\r\n> platform :ios, '13.0'\r\n> ```\r\n\r\nIf this is the solution to this problem, then this should be added to the documentation -- I can open up a PR for that if that's the preferred solution here. It's a shame that this project doesn't work out of box like you'd expect with the latest and greatest from react-native.","> You can change min ios version on Podfile.\r\n> \r\n> ```\r\n> # platform :ios, min_ios_version_supported\r\n> platform :ios, '13.0'\r\n> ```\r\n\r\nThis still doesn't seem to work for me. Just upgraded to React Native v0.72.5 from v0.70.7 and changed all the deployment targets to iOS 13. I still get the same error\r\n\r\nEdit: Never mind, I was editing the wrong place in the podfile. I was editing the post install targets when I actually had to override the min_ios_version_supported in \"platform :ios, min_ios_version_supported\" with '13.0'","> You can change min ios version on Podfile.\r\n> \r\n> ```\r\n> # platform :ios, min_ios_version_supported\r\n> platform :ios, '13.0'\r\n> ```\r\n\r\nIts Working for me","> You can change min ios version on Podfile.\r\n> \r\n> ```\r\n> # platform :ios, min_ios_version_supported\r\n> platform :ios, '13.0'\r\n> ```\r\n\r\nAlso make sure that your Podfile deployment target is set to >= 13.0 at the top of your Podfile ","**for Googlemaps (7.4.0)** (ios)\r\nplatform :ios, min_ios_version_supported\r\nplatform :ios, '13.4'\r\nand also change the version in\r\n \"node_modules\/react-native-maps\/react-native-maps.podspec\" to   \r\n s.platform     = :ios, \"13.4\"\r\n","Hi there, this started to happen again in version `1.9.1` where the iOS platform requirement is changed to `13.4`:\r\n\r\nhttps:\/\/github.com\/react-native-maps\/react-native-maps\/blob\/608ef5492c8d450f4c75c22e5c9837aab051e0d9\/react-native-google-maps.podspec#L12\r\n\r\nIn my case, that I am using expo 49 (react-native 0.72.6) and I had to make the following tweak inside the plugins:\r\n\r\n```js\r\nplugins: [\r\n  [\r\n    'expo-build-properties',\r\n    {\r\n      ios: {\r\n        deploymentTarget: '13.4',\r\n      },\r\n    },\r\n  ],\r\n]\r\n```\r\n\r\nhope it is useful \ud83d\ude4f","`# platform :ios, min_ios_version_supported\r\nplatform :ios, '13.4'`\r\nadd line into Podfile\r\n`pod 'react-native-maps', :path => '..\/node_modules\/react-native-maps' \r\n  pod 'react-native-google-maps', :path => '..\/node_modules\/react-native-maps'`\r\nnpm install\r\ncd ios pod install\r\n\r\n[https:\/\/github.com\/react-native-maps\/react-native-maps\/blob\/master\/docs\/installation.md#ios](url)","I downgraded the version to 1.4.0 and now it is working.\r\n\r\nI am using \"react-native\": \"0.72.1\" by the way"],"labels":["bug"]},{"title":"MapVIew\/Marker\/Callout onPress delay","body":"### Summary\r\n\r\nReopening this as issues #833 #3429 and #3897 have been closed but the problem still exists\r\n\r\n### Reproducible sample code\r\n\r\n```TSX\r\n<Callout onPress={() => console.log('press')} \/>\r\n```\r\n\r\n\r\n### Steps to reproduce\r\n\r\nUsing Google as the provider\r\n\r\nPress the callout\r\n\r\n### Expected result\r\n\r\nInstant response\r\n\r\n### Actual result\r\n\r\nDelay of around 500 ms\r\n\r\n### React Native Maps Version\r\n\r\n1.3.2\r\n\r\n### What platforms are you seeing the problem on?\r\n\r\nAndroid, iOS (Google Maps)\r\n\r\n### React Native Version\r\n\r\n0.71.8\r\n\r\n### What version of Expo are you using?\r\n\r\nSDK 48\r\n\r\n### Device(s)\r\n\r\nAll devices\r\n\r\n### Additional information\r\n\r\nThis does not affect Apple Maps on iOS. A previous proposed solution of wrapping the MapView in Pressable does not have any effect.","comments":["This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. If the issue remains relevant, simply comment `Still relevant` and the issue will remain open. Thank you for your contributions.","Still relevant","@mikescott @mikescott there is a pull request to solve this issue, but the solution is not optimal, I'm waiting on a better pull request to solve this.","This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. If the issue remains relevant, simply comment `Still relevant` and the issue will remain open. Thank you for your contributions.","Still relevant"],"labels":["bug"]},{"title":"Geojson layer does not display polygon around the world","body":"### Summary\n\nWhen creating a Geojson layer with a polygon stretching around the world it does not render, seems to me it always tries to render the smallest possible size (adding an extra point at `[0, -90]` makes it work).\r\nMy main issue is that a second polygon as cutout does not work at all, unless the first polygon has no negative coordinates, see screenshots \ud83e\udd14 \r\n\r\nWhen using [geojson.io](https:\/\/geojson.io\/#map=2.21\/57.36\/-25.99) everything works properly, see file attached.\r\n[map.geojson.zip](https:\/\/github.com\/react-native-maps\/react-native-maps\/files\/11846809\/map.geojson.zip)\r\n\n\n### Reproducible sample code\n\n```TSX\nimport React from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport MapView, { Geojson } from \"react-native-maps\";\r\n\r\nexport default function App() {\r\n  const geojson = {\r\n    type: \"FeatureCollection\",\r\n    features: [\r\n      {\r\n        type: \"Feature\",\r\n        properties: {},\r\n        geometry: {\r\n          coordinates: [\r\n            [\r\n              [-180, 90],\r\n              [-180, -90],\r\n              \/\/ [0, -90], \/\/ fix for polygon around the world\r\n              [180, -90],\r\n              [180, 90],\r\n            ],\r\n            [\r\n              [-15, 35],\r\n              [30, 35],\r\n              [30, 75],\r\n              [-15, 55],\r\n              [-15, 35],\r\n            ],\r\n          ],\r\n          type: \"Polygon\",\r\n        },\r\n      },\r\n    ],\r\n  } as any;\r\n\r\n  return (\r\n    <MapView style={styles.map} pitchEnabled={false} rotateEnabled={false}>\r\n      <Geojson\r\n        geojson={geojson}\r\n        fillColor=\"rgba(0,0,0,0.5)\"\r\n        strokeColor=\"red\"\r\n      \/>\r\n    <\/MapView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 20,\r\n  },\r\n  map: { flex: 1 },\r\n});\n```\n\n\n### Steps to reproduce\n\nSee description\n\n### Expected result\n\n<img width=\"1919\" alt=\"Screenshot 2023-06-23 at 11 37 31 AM\" src=\"https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/536225\/0dd1aaba-1d1d-46de-a0ea-c698016ff15d\">\r\n\n\n### Actual result\n\n![IMG_8437](https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/536225\/982eb0a5-2c7e-44c3-b52b-f2468a3bf7d0)\r\n\n\n### React Native Maps Version\n\n1.3.2\n\n### What platforms are you seeing the problem on?\n\niOS (Apple Maps)\n\n### React Native Version\n\n0.71.8\n\n### What version of Expo are you using?\n\nSDK 48\n\n### Device(s)\n\niPhone 12 Mini\n\n### Additional information\n\n_No response_","comments":["One more issue: the country and city labels are rendered above the geojson layer. Changing the `zIndex` does not seem to have an effect.","This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. If the issue remains relevant, simply comment `Still relevant` and the issue will remain open. Thank you for your contributions.","Still relevant","This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. If the issue remains relevant, simply comment `Still relevant` and the issue will remain open. Thank you for your contributions.","Still relevant"],"labels":["bug"]},{"title":"Overlays are not destroyed","body":"### Summary\r\n\r\nCan you tell me if this problem has been fixed? I have a case here that is happening this same problem!\r\n<img width=\"1135\" alt=\"Captura de Tela 2023-06-21 a\u0300s 18 16 41\" src=\"https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/38758938\/44762045-ae91-4c05-b99a-7f004739bf6d\">\r\nI made the correct flow to remove the Overlay while updating and making the key settings and even put a delay for it to render the Overlay again, even so it does not destroy the previous one!\r\n\r\nlinked with : [issue](https:\/\/github.com\/react-native-maps\/react-native-maps\/issues\/3598)\r\n\r\n\r\n### Reproducible sample code\r\n\r\n```TSX\r\nimport React, {Component} from 'react';\r\nimport MapView, {Overlay} from 'react-native-maps';\r\nimport estilo from '.\/estilo';\r\n\r\nclass MapContent extends Component {\r\n  mapRefAnalise: any;\r\n  constructor(props) {\r\n    super(props);\r\n    this.mapRefAnalise = null;\r\n    this.state = {\r\n      verOverlay: false,\r\n      bboxCoordinates: null,\r\n      unConvertedBboxCoordinates: {\r\n        northEast: {\r\n          latitude: -10.119143030159039,\r\n          longitude: -48.316573796522434,\r\n        },\r\n        southWest: {\r\n          latitude: -10.20200607727844,\r\n          longitude: -48.37111113871625,\r\n        },\r\n      },\r\n      bond: {\r\n        northEast: {\r\n          latitude: -10.116100033299208,\r\n          longitude: -48.316879031209744,\r\n        },\r\n        southWest: {\r\n          latitude: -10.201336111531191,\r\n          longitude: -48.37297771457272,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MapView\r\n        style={estilo.mapView}\r\n        zoomEnabled={true}\r\n        scrollEnabled={true}\r\n        showsTraffic={true}\r\n        ref={ref => {\r\n          this.handleMapRef(ref);\r\n        }}\r\n        region={this.props.region}\r\n        showsIndoors={true}\r\n        showsIndoorLevelPicker={true}\r\n        mapPadding={{\r\n          top: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          left: 0,\r\n        }}\r\n        onRegionChangeComplete={async region => {\r\n          this.setState({verOverlay: false});\r\n          !this.props.analise &&\r\n            this.props.onRegionChange &&\r\n            this.props.onRegionChange(region);\r\n          await new Promise(resolve => setTimeout(resolve, 150));\r\n          await this.calcBBOX();\r\n        }}\r\n        mapType={'hybrid'}>\r\n        {this.state.verOverlay && (\r\n          <Overlay\r\n            image={{\r\n              uri: `myurl`,\r\n            }}\r\n            bounds={[\r\n              [\r\n                this.state.unConvertedBboxCoordinates.southWest.latitude,\r\n                this.state.unConvertedBboxCoordinates.southWest.longitude,\r\n              ],\r\n              [\r\n                this.state.unConvertedBboxCoordinates.northEast.latitude,\r\n                this.state.unConvertedBboxCoordinates.northEast.longitude,\r\n              ],\r\n            ]}\r\n          \/>\r\n        )}\r\n      <\/MapView>\r\n    );\r\n  }\r\n}\r\nexport default MapContent;\r\n```\r\n\r\n\r\n### Steps to reproduce\r\n\r\nHave a map and inside an array (what will come from the state) that will be filled with overlays\r\nI create the overlay in a different component, for test if is unmounted.\r\nAdd many overlays to the array, for example 15 per second, and clean, add, clean, add, clean\r\n\r\n### Expected result\r\n\r\nI hope that when moving the map it removes the old overlay and leaves only the new one, but what happens is that it always generates a new one!\r\n\r\n### Actual result\r\n\r\ngenerates a new overlay every time I move the map and getting several layers on the map!\r\n\r\n### React Native Maps Version\r\n\r\n1.7.1\r\n\r\n### What platforms are you seeing the problem on?\r\n\r\niOS (Apple Maps)\r\n\r\n### React Native Version\r\n\r\n0.71.8\r\n\r\n### What version of Expo are you using?\r\n\r\nNot using Expo\r\n\r\n### Device(s)\r\n\r\niPhone 13\r\n\r\n### Additional information\r\n\r\n_No response_","comments":["This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. If the issue remains relevant, simply comment `Still relevant` and the issue will remain open. Thank you for your contributions.","Still relevant","This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. If the issue remains relevant, simply comment `Still relevant` and the issue will remain open. Thank you for your contributions.","Still relevant"],"labels":["bug"]},{"title":"Map Loads Incredibly Slow","body":"### Summary\r\n\r\nWe have implemented the map in a react native project and when the screen loads with the map on it it takes a really long time to load.  Is there any way to speed the process up?  We are not using any Overlays and just a current location marker.  It just gets the lat and longitude information and that is all.\r\n\r\n### Reproducible sample code\r\n\r\n```TSX\r\n\r\n\r\n  const showLocation = () => {\r\n    return (\r\n      <Marker\r\n        coordinate={{\r\n          latitude: location?.latitude,\r\n          longitude: location?.longitude,\r\n        }}\r\n        style={{ position: 'absolute' }}\r\n        draggable\r\n        onDragEnd={async (e) => {\r\n          const { latitude, longitude } = e.nativeEvent.coordinate;\r\n          setLocation({\r\n            ...location,\r\n            latitude: latitude,\r\n            longitude: longitude,\r\n          });\r\n\r\n          getReverseGeocode(longitude, latitude);\r\n        }}\r\n      \/>\r\n    );\r\n  };\r\n\r\n\r\n\r\n<MapView\r\n    region={{\r\n        latitude: location?.latitude,\r\n        longitude: location?.longitude,\r\n        latitudeDelta: 0.001,\r\n        longitudeDelta: 0.001,\r\n    }}\r\n    loadingEnabled={true}\r\n    style={styles.mapContainer}\r\n    provider={PROVIDER_GOOGLE}\r\n>\r\n    {showLocation()}\r\n<\/MapView>\r\n```\r\n\r\n\r\n### Steps to reproduce\r\n\r\nImplement MapView on a react-native screen and observe.\r\n\r\n### Expected result\r\n\r\nMap should appear right away or 1-2 seconds after screen begins rendering.\r\n\r\n### Actual result\r\n\r\nMap takes up to 20 seconds to load.\r\n\r\n### React Native Maps Version\r\n\r\n1.3.2\r\n\r\n### What platforms are you seeing the problem on?\r\n\r\nAndroid, iOS (Google Maps)\r\n\r\n### React Native Version\r\n\r\n0.71.7\r\n\r\n### What version of Expo are you using?\r\n\r\nSDK 48\r\n\r\n### Device(s)\r\n\r\niPhone 12 & all android phones\r\n\r\n### Additional information\r\n\r\n_No response_","comments":["I'm also experiencing this when opening the screen with the map for the first time. When closing and re-opening the app, it's much faster. Still, ideally, this super long loading period doesn't happen as it's usually the first time a user experiences the feature.\r\n\r\nRN version: `0.71.8`\r\nExpo version: `48.0.6`\r\nRNM version: `1.3.2`","I had the same issue when I was using google as provider for IOS at IOS simulator.\r\nWhen I tried the build on actual device in my case it was IPhone SE2020 it worked fine.\r\n","I'm also experiencing same issue, first i thought this was because i didn\u2019t handled the data from the API well, but that is not the issue My Map rendering is too slow when using Google as a Provider its works fine on Apple Maps, I'm facing same issue on IOS and ANDROID,\r\nThis is the Version I'm using :  react-native-maps: 1.7.1","Did anyone found the solution..? I'm still facing the same issue\ud83d\ude43\u2639\ufe0f","@rahulnikam2002, I was facing the issues with marker and map being slow, i used two props in the maker and its working for me and i used a timeout in map **its not recommended** but it worked for and its one way to get things done, I'll share with you.\r\n\r\nFor Map:\r\n\r\n```<MapView\r\n  onMapReady={() => {\r\n  setTimeout(() => {\r\n            setMapReady(true);      \/\/ initially this state is false\r\n          }, 1000);\r\n      }} \r\n```     \r\n And for the Marker:\r\n \r\n ```\r\n tracksInfoWindowChanges={Platform.OS === 'ios' ? true : false}\r\ntracksViewChanges={Platform.OS === 'ios' ? true : false}\r\n```\r\n\t\t\t\t\t\t\r\n","> @rahulnikam2002, I was facing the issues with marker and map being slow, i used two props in the maker and its working for me and i used a timeout in map **its not recommended** but it worked for and its one way to get things done, I'll share with you.\r\n> \r\n> For Map:\r\n> \r\n> ```\r\n>   onMapReady={() => {\r\n>   setTimeout(() => {\r\n>             setMapReady(true);      \/\/ initially this state is false\r\n>           }, 1000);\r\n>       }} \r\n> ```\r\n> \r\n> And for the Marker:\r\n> \r\n> ```\r\n> tracksInfoWindowChanges={Platform.OS === 'ios' ? true : false}\r\n> tracksViewChanges={Platform.OS === 'ios' ? true : false}\r\n> ```\r\n\r\nThanks for this, will try this!! <3"],"labels":["bug","cannot reproduce"]},{"title":"The functions `animateCamera` and `animateToRegion` sometimes animate to the top left corner","body":"First of all I would like to thank the contributors for creating this module, making it open source and maintaining it! \ud83d\ude4f\r\n\r\n### Summary\r\n\r\nWhen using the function `animateCamera` or `animateToRegion` while the `MapView` is rendered inside a `BottomTabNavigator` from the module `@react-navigation\/bottom-tabs` there is unstable behaviour.\r\n\r\nThe function `setCamera` doesn't have this issue.\r\n\r\nSometimes it centers correctly around the current location (with the blue dot in the center of the map) and sometimes it animates the map in such a way that the blue dot is precisely in the upper left corner of the map. After testing more than 100 times the different behaviour happens around 25% of the time.\r\n\r\nThis isn't caused by the location coordinates being slightly off. I have set the location of the iOS simulator to a precise value and also logged this to verify it's using the correct numbers. This also isn't a floating point problem as this gives different behaviour (have also tested this to verify).\r\n\r\nA reproducible codebase can be found at: https:\/\/github.com\/aikewoody\/example-react-native-maps-animate\r\nps: after cloning change the `_YOUR_API_KEY_` to a valid one\r\n\r\n### Reproducible sample code\r\n\r\n```TSX\r\nimport React from 'react';\r\nimport {SafeAreaView, StyleSheet, TouchableOpacity, View} from 'react-native';\r\nimport MapView, {\r\n  enableLatestRenderer,\r\n  LatLng,\r\n  PROVIDER_GOOGLE,\r\n  UserLocationChangeEvent,\r\n} from 'react-native-maps';\r\nimport {SafeAreaProvider} from 'react-native-safe-area-context';\r\nimport {createBottomTabNavigator} from '@react-navigation\/bottom-tabs';\r\nimport {NavigationContainer} from '@react-navigation\/native';\r\n\r\nenableLatestRenderer();\r\n\r\n\/\/ By toggling this you can turn on\/off the bug\r\nconst enableAnimation = true;\r\n\r\nfunction Map() {\r\n  const currentCoordinatesRef = React.useRef<LatLng>();\r\n  const mapViewRef = React.useRef<MapView>(null);\r\n\r\n  const onUserLocationChange = React.useCallback(\r\n    (event: UserLocationChangeEvent) => {\r\n      if (event.nativeEvent.coordinate) {\r\n        currentCoordinatesRef.current = {\r\n          latitude: event.nativeEvent.coordinate.latitude,\r\n          longitude: event.nativeEvent.coordinate.longitude,\r\n        };\r\n      }\r\n    },\r\n    [],\r\n  );\r\n\r\n  const onPressRecenter = React.useCallback(() => {\r\n    if (currentCoordinatesRef.current) {\r\n      const partialCamera = {\r\n        center: {\r\n          latitude: currentCoordinatesRef.current.latitude,\r\n          longitude: currentCoordinatesRef.current.longitude,\r\n        },\r\n        zoom: 14,\r\n      } as const;\r\n      if (enableAnimation) {\r\n        mapViewRef.current?.animateCamera(partialCamera);\r\n      } else {\r\n        mapViewRef.current?.setCamera(partialCamera);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <MapView\r\n        onUserLocationChange={onUserLocationChange}\r\n        provider={PROVIDER_GOOGLE}\r\n        ref={mapViewRef}\r\n        showsMyLocationButton={false}\r\n        showsUserLocation={true}\r\n        style={styles.flex}\r\n        zoomEnabled={true}\r\n      \/>\r\n      <SafeAreaView pointerEvents=\"box-none\" style={StyleSheet.absoluteFill}>\r\n        <TouchableOpacity\r\n          onPress={onPressRecenter}\r\n          style={styles.buttonRecenter}\r\n        \/>\r\n      <\/SafeAreaView>\r\n    <\/>\r\n  );\r\n}\r\n\r\nconst BottomTabNavigator = createBottomTabNavigator();\r\n\r\nfunction Router() {\r\n  return (\r\n    <NavigationContainer>\r\n      <BottomTabNavigator.Navigator>\r\n        <BottomTabNavigator.Screen name={'A'} component={Map} \/>\r\n        <BottomTabNavigator.Screen name={'B'} component={View} \/>\r\n        <BottomTabNavigator.Screen name={'C'} component={View} \/>\r\n      <\/BottomTabNavigator.Navigator>\r\n    <\/NavigationContainer>\r\n  );\r\n}\r\n\r\n\/\/ By toggling this you can turn on\/off the bug\r\nconst enableRouting = true;\r\n\r\nexport function App() {\r\n  return (\r\n    <SafeAreaProvider>{enableRouting ? <Router \/> : <Map \/>}<\/SafeAreaProvider>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonRecenter: {\r\n    backgroundColor: 'red',\r\n    height: 50,\r\n    marginLeft: 'auto',\r\n    width: 50,\r\n  },\r\n  flex: {\r\n    flex: 1,\r\n  },\r\n} as const);\r\n```\r\n\r\n\r\n### Steps to reproduce\r\n\r\nOpen the map, call the function `animateCamera` or `animateToRegion` and wait till the animation finishes.\r\n\r\n### Expected result\r\n\r\nThe map should center around the coordinates provided to the function call.\r\n\r\n### Actual result\r\n\r\nSometimes (around 25% of the time) it doesn't center around the coordinates and the desired location is in the top left corner.\r\n\r\n### React Native Maps Version\r\n\r\n1.7.1\r\n\r\n### What platforms are you seeing the problem on?\r\n\r\niOS (Google Maps)\r\n\r\n### React Native Version\r\n\r\n0.71.7\r\n\r\n### What version of Expo are you using?\r\n\r\nNot using Expo\r\n\r\n### Device(s)\r\n\r\niPhone 13 mini (16.4) - simulator\r\n\r\n### Additional information\r\n\r\nVideo of the behaviour: https:\/\/www.youtube.com\/shorts\/DXIPGNj3RlU","comments":["Just experienced the same thing. Unfortunately for now I had to use Apple Maps on iOS, as this makes Google Maps absolutely unusable when you have to focus map to various places. I'll try to downgrade library and maybe find version on which this issue does not appear.\r\n\r\nUpdate: I've downgraded to 1.6.0 and the problem is gone.","@MacPiston Thanks for checking this and letting us know!\r\n\r\nBecause this is a blocking issue for going live and downgrading isn't a long term solution it would be great if you can look at this @Simon-TechForm ","I'm having the exact same issue (happening to me on iPhone 12, but not on iPhone 7). In both `animateToRegion` and `fitToCoordinates` the wanted location is on top left and the actual region is changed to somewhere bellow on the right of the wanted one.\r\n\r\nPlease @Simon-TechForm take a look, there have been similar issues reported but all closed without resolving. The setTimeout doesn't seem to resolve anything.","> Just experienced the same thing. Unfortunately for now I had to use Apple Maps on iOS, as this makes Google Maps absolutely unusable when you have to focus map to various places. I'll try to downgrade library and maybe find version on which this issue does not appear.\r\n> \r\n> Update: I've downgraded to 1.6.0 and the problem is gone.\r\n\r\nStill having the issue on 1.6.0","> > Just experienced the same thing. Unfortunately for now I had to use Apple Maps on iOS, as this makes Google Maps absolutely unusable when you have to focus map to various places. I'll try to downgrade library and maybe find version on which this issue does not appear.\r\n> > Update: I've downgraded to 1.6.0 and the problem is gone.\r\n> \r\n> Still having the issue on 1.6.0\r\n\r\nI have changed `animateToRegion` with `setCamera` on IOS version >= 16 which solves the issue but there is no animation in this case. This might be the temporary fix if having the animation is not completely necessary for you.","For those that have run into this issue, the only way for us to fix it on the latest version was to ensure `UIViewControllerBasedStatusBarAppearance` is set to `false`, as when we swapped it to `true` to change the status bar colour on ios, then the above issue started to happen. ","Same problem here using `1.8.0`, as soon as the Map is inside a `Stack.Screen` the happens to me every time.\r\nDid someone found a solution to this ? @aikewoody @rokamon1997 @jordansoltman \r\n\r\nChanging to `1.6.0` -> did not work\r\nsetting `UIViewControllerBasedStatusBarAppearance` to `false` -> did not work\r\nusing `setCamera`\r\n\r\nIn my case it happens only in my device (iPhone Xs Max) but on the simulator or a friend's phone the bug doesnt happend.. \r\n\r\nEDIT :\r\nOk, I fixed it by adding a `region` props in the `MapView` component like this :\r\n\r\n```\r\n<MapView\r\n ref={mapRef}\r\n loadingEnabled={true}\r\n provider={PROVIDER_GOOGLE}\r\n style={{ ...StyleSheet.absoluteFillObject}}\r\n region={{\r\n  latitude: 37.78825,\r\n  longitude: -122.4324,\r\n  latitudeDelta: 0.015,\r\n  longitudeDelta: 0.0121,\r\n }}\r\n showsUserLocation={true}\r\n showsMyLocationButton={true}\r\n \/>\r\n```","I believe this is happening because you are trying to change the camera (set or animate) while the map is not rendered\r\nI changed my function only to run after the map is ready (`onMapReady`), and State change is already rendered (`useEffect`)","A solution for iOS. You may not need the various state setting funcs:\r\n\r\n```\r\nconst onMapReady = () => {\r\n    InteractionManager.runAfterInteractions(() => {\r\n\r\n      \/\/ We display a loading animation while fetching data\r\n      setMapLoading(false)\r\n\r\n    })\r\n    .then(() => {\r\n\r\n      \/\/ Show pins\r\n      setShowPins(true)\r\n\r\n      })\r\n      .finally(() => {\r\n\r\n        \/\/ Only call animation when nothing else needs working. This calls the built-in animateToRegion method of MapView\r\n        animateMapToUserLocation(userLocation, map)\r\n      })\r\n  }\r\n```\r\n\r\n"],"labels":["bug"]},{"title":"Callout glitch on some Android devices","body":"### Summary\r\n\r\n`Marker` where the coordinates can change during runtime with `Callout` in them tend to have some kind of a glitch where `Callout` jumps between what seems to be `calloutAnchor` y-value of `1` and the value I have set (`1.38`) manually on each render.\r\n\r\n### Reproducible sample code\r\n\r\n```TSX\r\nimport { View, StyleSheet } from 'react-native';\r\nimport React, { useState } from 'react';\r\nimport MapView, { PROVIDER_GOOGLE } from 'react-native-maps';\r\n\r\nconst MapScreen = () => {\r\n\tconst [, setUserLocation] = useState({});\r\n\tconst initialRegion = {\r\n\t\tlatitude: 37.7895516,\r\n\t\tlongitude: -122.3898368,\r\n\t\tlatitudeDelta: 0.003,\r\n\t\tlongitudeDelta: 0.003,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View style={{ ...StyleSheet.absoluteFillObject }}>\r\n\t\t\t<MapView\r\n\t\t\t\tprovider={PROVIDER_GOOGLE}\r\n\t\t\t\tinitialRegion={initialRegion}\r\n\t\t\t\tshowsUserLocation={true}\r\n\t\t\t\tonUserLocationChange={(event) =>\r\n\t\t\t\t\tsetUserLocation({\r\n\t\t\t\t\t\tlatitude: event.nativeEvent.coordinate.latitude,\r\n\t\t\t\t\t\tlongitude: event.nativeEvent.coordinate.longitude,\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\t...StyleSheet.absoluteFillObject,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<CalloutMarker\r\n\t\t\t\t\tcoordinate={{\r\n\t\t\t\t\t\tlatitude: 37.7895516,\r\n\t\t\t\t\t\tlongitude: -122.3898368,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\/>\r\n\t\t\t<\/MapView>\r\n\t\t<\/View>\r\n\t);\r\n};\r\n\r\n\r\n\r\nconst CalloutMarker = ({ coordinate }) => {\r\n\tlet markerRef = useRef<MapMarker>(null);\r\n\tmarkerRef?.current?.showCallout();\r\n\r\n\treturn (\r\n\t\t<Marker\r\n\t\t\tref={markerRef}\r\n\t\t\tcoordinate={coordinate}\r\n\t\t\tanchor={{ x: 0.5, y: 1 }}\r\n\t\t\tcalloutAnchor={{ x: 0.5, y: 1.38 }}\r\n\t\t\ttracksViewChanges={false}\r\n\t\t\ttracksInfoWindowChanges\r\n\t\t\tstopPropagation\r\n\t\t>\r\n\t\t\t<Callout alphaHitTest tooltip>\r\n\t\t\t\t<View\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tflexDirection: 'row',\r\n\t\t\t\t\t\tjustifyContent: 'space-between',\r\n\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tfontSize: 9,\r\n\t\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\t\tcolor: '#15171C',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSome text\r\n\t\t\t\t\t<\/Text>\r\n\t\t\t\t<\/View>\r\n\t\t\t<\/Callout>\r\n\t\t<\/Marker>\r\n\t);\r\n};\r\n```\r\n\r\n\r\n### Steps to reproduce\r\n\r\nAttached code sample should be 100% reproducable with certain Android devices (for sure Pixel 3 XL, Android 12, not clear which else). When running on real device, make sure you give location permissions to the app.\r\n\r\nAs the rerendering in the example happens because of the user location change, then while trying to reproduce - make sure that it's changing.\r\n\r\n### Expected result\r\n\r\nCallout would stay in place with the defined anchor value.\r\n\r\n### Actual result\r\n\r\nCallout is glitching on y-axis.\r\n\r\n### React Native Maps Version\r\n\r\nTested with: 1.6.0, 1.8.4\r\n\r\n### What platforms are you seeing the problem on?\r\n\r\nAndroid\r\n\r\n### React Native Version\r\n\r\nTested with: 0.70.5, 0.71.15\r\n\r\n### What version of Expo are you using?\r\n\r\nNot using Expo\r\n\r\n### Device(s)\r\n\r\nPixel 3 XL, Android 12\r\n\r\n### Additional information\r\n\r\n\r\nhttps:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/12236906\/3b67a068-477b-453b-b14f-7827151073bc\r\n\r\n","comments":["This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. If the issue remains relevant, simply comment `Still relevant` and the issue will remain open. Thank you for your contributions.","Still relevant","This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. If the issue remains relevant, simply comment `Still relevant` and the issue will remain open. Thank you for your contributions.","Still relevant","same 1.8.0","I've tried to reproduce it, but I couldn't. Can you post here video with the bug and reproducible steps? Or verify if my tries were correct? Console.log is in onUserLocationChange. @PauloGrachetelli @raulgordejev \r\n\r\nhttps:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/37906388\/503861c0-08b5-448f-8eb7-a217b6aa2a0c\r\n\r\n\r\n","@mateki0 I've now updated the description and added a screen recording from a Pixel 3 XL, Android 12 with react-native@0.71.15 and react-native-maps@1.8.4. Using the same code example provided in the description. Used mock gps to update the user location every 1000ms.\r\n\r\nMight be that it's only reproducible on real devices?","for me this issue is not actial.\r\ni just remove this rows and maps works as expected.\r\n\r\n    implementation 'com.google.maps.android:android-maps-utils:+'\r\n    implementation 'com.google.android.gms:play-services-base:+'\r\n    implementation 'com.google.android.gms:play-services-location:+'\r\n    implementation 'com.google.android.gms:play-services-maps:+'","@PauloGrachetelli just to confirm - did you remove these directly from the react-native-maps package with patch-package? Because I don't have these defined anywhere in my app.","no no, I removed it from my project.\r\nThe react-native-maps documentation says that these libraries are no longer needed\r\n\r\n\"Google Play Services conflicting issues with other modules\"\r\nhttps:\/\/github.com\/react-native-maps\/react-native-maps\/blob\/master\/docs\/installation.md"],"labels":["bug"]},{"title":"[ios] app immediataly drop 60 to 40 FPS when move the map with PROVIDER_GOOGLE","body":"### Summary\r\n\r\nI'm trying to run the template app from react-native, but everytime, I move the map with google map, it immediately drop from 40 or below, this happen on ios real device, any fix for this, this just a template code, I do not add anything\r\nVideo:\r\n\r\n### Reprodu\r\n\r\nhttps:\/\/user-images.githubusercontent.com\/37074707\/230870028-d9c0a1f8-458a-4a97-8873-141b356c0f34.MOV\r\n\r\ncible sample code\r\n\r\n```TSX\r\nimport MapView, {PROVIDER_GOOGLE} from 'react-native-maps'; \/\/ remove PROVIDER_GOOGLE import if not using Google Maps\r\nimport {View, StyleSheet} from 'react-native';\r\nimport React, {useMemo} from 'react';\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    ...StyleSheet.absoluteFillObject,\r\n    height: 400,\r\n    width: 400,\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n  },\r\n  map: {\r\n    ...StyleSheet.absoluteFillObject,\r\n  },\r\n});\r\n\r\nconst region = {\r\n  latitude: 37.78825,\r\n  longitude: -122.4324,\r\n  latitudeDelta: 0.015,\r\n  longitudeDelta: 0.0121,\r\n};\r\n\r\nexport default () => {\r\n  const mapComponent = useMemo(() => {\r\n    return (\r\n      <MapView\r\n        provider={PROVIDER_GOOGLE}\r\n        style={styles.map}\r\n        region={{\r\n          latitude: 37.78825,\r\n          longitude: -122.4324,\r\n          latitudeDelta: 0.015,\r\n          longitudeDelta: 0.0121,\r\n        }}\r\n        loadingEnabled={true}\r\n        showsUserLocation={true}\r\n        showsMyLocationButton={false}\r\n        showsPointsOfInterest={false}\r\n        showsCompass={false}\r\n        showsBuildings={false}\r\n        showsTraffic={false}\r\n        showsIndoors={false}\r\n      \/>\r\n    );\r\n  }, [region]);\r\n\r\n  return <View style={styles.container}>{mapComponent}<\/View>;\r\n};\r\n```\r\n\r\n\r\n### Steps to reproduce\r\n\r\nnpx react-native run-ios device=\"your real device\"\r\n\r\n### Expected result\r\n\r\nMap should run smooth 60PFS all the time\r\n\r\n### Actual result\r\n\r\nIt drop to below 40FPS immediately and few second of stand still, it comeback \r\n\r\n### React Native Maps Version\r\n\r\n1.4.0\r\n\r\n### What platforms are you seeing the problem on?\r\n\r\niOS (Google Maps)\r\n\r\n### React Native Version\r\n\r\n0.71\r\n\r\n### What version of Expo are you using?\r\n\r\nNot using Expo\r\n\r\n### Device(s)\r\n\r\nIphone XR\r\n\r\n### Additional information\r\n\r\n_No response_","comments":["Same!","i have the same problem, fps drops when i scroll and release the map. I've been searching for a week but couldn't find a solution. even though i made a lot of performance fixes..","https:\/\/user-images.githubusercontent.com\/5768579\/233502748-fdb1eb54-3d77-4142-b929-ac679af6217c.MOV","@khanh21011999 did you solve it ?","Any updates??","Experiencing the same issue. FPS drops both on simulator and on a real device(13PRO) when using Google Provider + EXPO 48 SDK","I am running into this issue too. Google Maps seems a bit laggy\/jerky, especially when zoomed in and throwing the map around. Apple Maps is very smooth.\r\n\r\nI investigated further and tested apps that use Google Maps (AirBnB, DoorDash, etc.) and also seem to have the lag. The native Google Maps app feels smoother.\r\n\r\nGranted both AirBnB and DoorDash _may_ be using this package or some React Native implementation (not sure) but the point stands. Especially surprising in apps such as those. There is a noticeable lag in those apps and perhaps made worse due to the callouts\/data they have on them.\r\n\r\nSince Google Maps vs Apple Maps isn't a big dealbreaker for me, I may just use Apple Maps to provide a smooth experience but prefer Google Maps.","See my solution to this:\r\nhttps:\/\/medium.com\/@calpnicklin\/60fps-react-native-google-maps-on-ios-563b56248e2f","> See my solution to this: https:\/\/medium.com\/@calpnicklin\/60fps-react-native-google-maps-on-ios-563b56248e2f\r\n\r\nThank for solution, but I think it happen also if no marker at all, I think we can improve this one","Still looking for solution :(","> @khanh21011999 did you solve it ?\r\n\r\nFeel like your UI is very smooth","i also looking for solution, empty map but fps drop when i scroll","> > See my solution to this: https:\/\/medium.com\/@calpnicklin\/60fps-react-native-google-maps-on-ios-563b56248e2f\r\n> \r\n> Thank for solution, but I think it happen also if no marker at all, I think we can improve this one\r\n\r\nAhh, yes you're right. No markers. Have you tried this without your useMemo?","> > > See my solution to this: https:\/\/medium.com\/@calpnicklin\/60fps-react-native-google-maps-on-ios-563b56248e2f\r\n> > \r\n> > \r\n> > Thank for solution, but I think it happen also if no marker at all, I think we can improve this one\r\n> \r\n> Ahh, yes you're right. No markers. Have you tried this without your useMemo?\r\n\r\nNot work, above example is pure react-native project without any expensive calculation","Still same issue feels like app is running in 30fps but stats show 60","This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. If the issue remains relevant, simply comment `Still relevant` and the issue will remain open. Thank you for your contributions.","Still relevant","Still nothing?","I've noticed when I'm running reanimated animation, mapView does not feel like 40fps anymore.\r\n\r\n[link to the video](https:\/\/www.youtube.com\/watch?v=tOxkBPeQU9Y)\r\n\r\nWatch it in 60 fps mode to see the difference.\r\n","> I've noticed when I'm running reanimated animation, mapView does not feel like 40fps anymore.\r\n> \r\n> [link to the video](https:\/\/www.youtube.com\/watch?v=tOxkBPeQU9Y)\r\n> \r\n> Watch it in 60 fps mode to see the difference.\r\n\r\nHm so you run Reanimated Animation on top of Map and just that it runs in 60fps? So does that mean Reanimated is triggering something in Native to allow for faster frames but MapView on its own does not do that?\r\n","Yup, but I could not find how reanimated triggers RN to render more frames."],"labels":["bug"]},{"title":"[iOS] Marker icons are too large after assets are bundled during build","body":"### Summary\r\n\r\nWhen using the `icon` or `image` prop to render a custom marker image on iOS, there is a difference in size of the icon when running locally compared to the final build result when the provided icon has different resolutions. The final build displays the icons much larger than they should be.\r\n\r\nThe same problem does not occur on Android.\r\n\r\nI understand that there is a workaround to simply render an `<Image \/>` as a child of the Marker, however this isn't acceptable since it is not as performant for a large number of markers compared to using the `icon` prop. \r\n\r\n### Reproducible sample code\r\n\r\n```TSX\r\nimport { useEffect, useState } from \"react\";\r\nimport { Image } from \"react-native\";\r\nimport { Asset } from \"expo-asset\";\r\nimport MapView, { Marker } from \"react-native-maps\";\r\n\r\nexport default function App() {\r\n  const [isReady, setIsReady] = useState(false);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await Promise.all([...cacheImages()]);\r\n      setIsReady(true);\r\n    })();\r\n  }, []);\r\n\r\n  if (!isReady) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <MapView\r\n      style={{ flex: 1 }}\r\n      initialCamera={{\r\n        center: { latitude: -33.8688, longitude: 151.2099 },\r\n        zoom: 3,\r\n        heading: 0,\r\n        pitch: 0,\r\n      }}\r\n      provider=\"google\"\r\n    >\r\n      <Marker\r\n        coordinate={{ latitude: -33.8688, longitude: 151.2099 }}\r\n        icon={require(\".\/src\/assets\/pin.png\")}\r\n        anchor={{ x: 0.5, y: 0.5 }}\r\n      \/>\r\n    <\/MapView>\r\n  );\r\n}\r\n\r\n\/**\r\n *\r\n * https:\/\/docs.expo.dev\/archive\/classic-updates\/preloading-and-caching-assets\/#pre-loading-and-caching-assets\r\n *\/\r\nfunction cacheImages() {\r\n  return [require(\".\/src\/assets\/pin.png\")].map((image) => {\r\n    if (typeof image === \"string\") {\r\n      return Image.prefetch(image);\r\n    } else {\r\n      return Asset.fromModule(image).downloadAsync();\r\n    }\r\n  });\r\n}\r\n```\r\n\r\n\r\n### Steps to reproduce\r\n\r\nI have put together a sample project where the problem can be reproduced [here](https:\/\/github.com\/Liamandrew\/expo-react-native-maps-demo).\r\n\r\nThe caching mechanism in the sample code simulates what the result of asset bundling during local development to help with reproducing the problem.\r\n\r\nAnd it's important to have different resolutions of the image (i.e. @2x @3x)\r\n\r\n### Expected result\r\n\r\nThe Marker should show the correct size in the final release build when using the `icon` prop.\r\n![expected](https:\/\/user-images.githubusercontent.com\/30114733\/217654593-1df2c15b-31bc-418b-9b0a-732f15ca6cdc.png)\r\n\r\n\r\n### Actual result\r\n\r\nThe Marker is showing a larger icon size in the final release build when using the `icon` prop.\r\n![actual](https:\/\/user-images.githubusercontent.com\/30114733\/217654693-7d8b1c94-bdda-4a08-a416-6a720a698312.png)\r\n\r\n\r\n### React Native Maps Version\r\n\r\n1.3.2\r\n\r\n### What platforms are you seeing the problem on?\r\n\r\niOS (Google Maps)\r\n\r\n### React Native Version\r\n\r\n0.70.5\r\n\r\n### What version of Expo are you using?\r\n\r\nSDK 47\r\n\r\n### Device(s)\r\n\r\niPhone 13, iOS simulator\r\n\r\n### Additional information\r\n\r\n_No response_","comments":["I'm seeing the same behaviour on Android, during development icons are 3 times smaller.\r\n\r\nI believe this is the same issue as described in https:\/\/github.com\/react-native-maps\/react-native-maps\/issues\/2016","I found that placing scaled images like `FileName@3x.png` alongside `FileName.png` makes image sizes consistent across builds. I didn't need to import the @3x variant in my code.","I can confirm that @jonathan-price-softwire's suggestion is an effective workaround. I hope that someday there will be a better solution.","This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. If the issue remains relevant, simply comment `Still relevant` and the issue will remain open. Thank you for your contributions.","Still relevant","Still a problem here, too. We've got the 2x and 3x images as well.\r\n\r\n<img src=\"https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/137158\/5ddc7b73-8eba-4639-ba70-faac9e8e449a\" height=\"300\"\/>\r\n\r\n```\r\ndefault.png PNG 48x48 48x48+0+0 8-bit sRGB 1773B 0.000u 0:00.001\r\ndefault@2x.png PNG 96x96 96x96+0+0 8-bit sRGB 3456B 0.000u 0:00.000\r\ndefault@3x.png PNG 144x144 144x144+0+0 8-bit sRGB 5226B 0.000u 0:00.000\r\nselected.png PNG 48x48 48x48+0+0 8-bit sRGB 1872B 0.000u 0:00.000\r\nselected@2x.png PNG 96x96 96x96+0+0 8-bit sRGB 3498B 0.000u 0:00.000\r\nselected@3x.png PNG 144x144 144x144+0+0 8-bit sRGB 5423B 0.000u 0:00.000\r\n```\r\n\r\n```jsx\r\nimport IconMarker from \"assets\/map-markers\/default.png\"\r\nimport IconMarkerSelected from \"assets\/map-markers\/selected.png\"\r\n\r\n...\r\n\r\n<MapView\r\n  ref={mapRef}\r\n  style={styles.map}\r\n  showsUserLocation\r\n  showsMyLocationButton={false}\r\n  showsCompass\r\n  showsScale\r\n  showsPointsOfInterest={false}\r\n  showsIndoors={false}\r\n  rotateEnabled={false}\r\n  onPanDrag={hideItemCard}\r\n  onPress={hideItemCard}\r\n  onRegionChangeComplete={handleRegionChangeComplete}\r\n>\r\n  {items?.map((item) => (\r\n    <Marker\r\n      key={item.id}\r\n      coordinate={{\r\n        longitude: item.geometry.coordinates[0],\r\n        latitude: item.geometry.coordinates[1],\r\n      }}\r\n      anchor={{ x: 0.5, y: 1 }}\r\n      onPress={(e) => {\r\n        log.info(\"marker pressed: %s\", item.id)\r\n        e.stopPropagation()\r\n        showItemCard(item)\r\n      }}\r\n      image={\r\n        selectedItem?.id === item.id ? IconMarkerSelected : IconMarker\r\n      }\r\n      \/\/ This needs to be a prop, not CSS, beacuse react-native-maps is buggy\r\n      zIndex={selectedItem?.id === item.id ? 1000 : 1}\r\n    \/>\r\n  ))}\r\n<\/MapView>\r\n```","i am facing same issue","As a workaround, dynamically choosing between the `image` prop and a child component based on platform works for us. I also had to add `tracksViewChanges={false}` since there's a large slowdown on Android by default (issue #4700)\r\n\r\n```jsx\r\n<MapView ...>\r\n  {items?.map((item) => {\r\n    const image =\r\n      selectedItem?.id === item.id ? IconMarkerSelected : IconMarker\r\n    return (\r\n      <Marker\r\n        ...\r\n        tracksViewChanges={false}\r\n        image={Platform.OS === \"ios\" ? undefined : image}\r\n      >\r\n        {Platform.OS === \"ios\" ? <Image source={image} \/> : null}\r\n      <\/Marker>\r\n    )\r\n  })}\r\n<\/MapView>\r\n```","any updates?","This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. If the issue remains relevant, simply comment `Still relevant` and the issue will remain open. Thank you for your contributions.","Still relevant","Also having issues.","We're still using the workaround I posted [above](https:\/\/github.com\/react-native-maps\/react-native-maps\/issues\/4605#issuecomment-1599028655) and that's been good enough for us \ud83e\udd37 ","What if you are using a Callout in the Marker? This fixes the image, but the callout is now too small:\r\n\r\nCode example:\r\n\r\n```jsx\r\n<Marker\r\n  key={index}\r\n  coordinate={{\r\n    latitude: parseFloat(lot.lat),\r\n    longitude: parseFloat(lot.lng),\r\n  }}\r\n  title={lot.title}\r\n  onPress={handleMarkerPress}\r\n  image={Platform.OS === 'android' ? pinImage : undefined}\r\n>\r\n  {Platform.OS === 'ios' ? <Text><Image source={pinImage} style={{width: 30, resizeMode: 'contain'}} \/><\/Text>: null}\r\n  <Callout style={tw.style('bg-white p-4 border-2 rounded-lg border-solid border-primary')} tooltip onPress={() => goToPay(lot.id)}>\r\n    <View>\r\n      <View style={{ flexDirection: 'column', alignSelf: 'flex-start' }}>\r\n        <Text style={tw.style('text-lg text-center mb-5')}>{lot.clean_title}<\/Text>\r\n        <Pressable style={tw.style('flex items-center justify-center py-2 px-4 bg-darkgrey rounded-2xl')} onPress={() => goToPay(lot.id)}>\r\n          <Text style={tw.style('text-center text-white')}>Purchase Parking<\/Text>\r\n        <\/Pressable>\r\n      <\/View>\r\n    <\/View>\r\n  <\/Callout>\r\n<\/Marker>\r\n```\r\n                \r\nResult:\r\n\r\n![Simulator Screenshot - iPhone 14 Pro Max - 2023-10-05 at 11 45 53](https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/4246039\/56f5a310-ed36-4cfd-87b6-7ac84ce27e75)\r\n","This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. If the issue remains relevant, simply comment `Still relevant` and the issue will remain open. Thank you for your contributions.","Still relevant ","getting same problem","still relevant. same problem on android"],"labels":["bug"]},{"title":"Flurry of setNativeProps deprecation warnings when using markers","body":"### Summary\n\nWe are updating plotted markers for drivers frequently and it gives a flurry of warnings stating - setNativeProps is deprecated and will be removed in next major release. This ultimately bloats the console outputs.\r\n\r\n`console.warn('setNativeProps is deprecated and will be removed in next major release');`\r\n\r\nPlease advise how to remove this warning.\n\n### Reproducible sample code\n\n```TSX\nimport {Animated, Easing, Image, Platform} from 'react-native';\r\nimport {useEffect, useRef, useState} from 'react';\r\nimport {AnimatedRegion, Marker} from 'react-native-maps';\r\nimport driverMarkerImg from '..\/..\/..\/..\/..\/assets\/driver-marker.png';\r\n\r\nconst AnimatedImage = Animated.createAnimatedComponent(Image);\r\n\r\nfunction DriverMarker({location, driver, ...rest}) {\r\n  const [marker, setMarker] = useState(null);\r\n  const [coordinate] = useState(\r\n    new AnimatedRegion({\r\n      latitude: location.Latitude,\r\n      longitude: location.Longitude,\r\n      latitudeDelta: 0.025,\r\n      longitudeDelta: 0.025,\r\n    })\r\n  );\r\n  const rotation = useRef(new Animated.Value(0.01)).current;\r\n  const bearingDegree = rotation.interpolate({\r\n    inputRange: [0, 360],\r\n    outputRange: ['0deg', '360deg'],\r\n  });\r\n\r\n  function animateMarker(newLocation) {\r\n    const newCoordinate = {\r\n      latitude: newLocation.Latitude,\r\n      longitude: newLocation.Longitude,\r\n      latitudeDelta: 0.025,\r\n      longitudeDelta: 0.025,\r\n    };\r\n    if (newLocation.Bearing !== null) {\r\n      Animated.timing(rotation, {\r\n        toValue: newLocation.Bearing,\r\n        useNativeDriver: Platform.OS !== 'android',\r\n        easing: Easing.linear,\r\n        duration: 250,\r\n      }).start();\r\n      setTimeout(() => {\r\n        smoothNavigation();\r\n      }, 250);\r\n    } else {\r\n      smoothNavigation();\r\n    }\r\n\r\n    function smoothNavigation() {\r\n      coordinate.timing(newCoordinate).start();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    animateMarker(location);\r\n  }, [location]);\r\n\r\n  return location.Bearing ? (\r\n    <Marker.Animated\r\n      identifier={driver.Id}\r\n      coordinate={coordinate}\r\n      ref={marker => {\r\n        setMarker(marker);\r\n      }}\r\n      {...rest}\r\n    >\r\n      <AnimatedImage source={driverMarkerImg} className=\"w-10 h-14\" style={{resizeMode: 'contain', transform: [{rotate: bearingDegree}]}} \/>\r\n    <\/Marker.Animated>\r\n  ) : null;\r\n}\r\n\r\nexport default DriverMarker;\n```\n\n\n### Steps to reproduce\n\nRe-render a marker multiple times and this warning will be printed as many times too.\n\n### Expected result\n\nGive an option to turn off this flurry of warnings.\n\n### Actual result\n\n![image](https:\/\/user-images.githubusercontent.com\/19903825\/203979702-4f89055c-ecaf-4f9f-ba86-28600e2e2ea3.png)\r\n\n\n### React Native Maps Version\n\n1.3.2\n\n### What platforms are you seeing the problem on?\n\nAndroid, iOS (Apple Maps)\n\n### React Native Version\n\n0.70.5\n\n### What version of Expo are you using?\n\nSDK 46\n\n### Device(s)\n\nAny device\n\n### Additional information\n\n_No response_","comments":["This is really funny.\r\n\r\nWith me, it just show on IOS, nothing on Android","@zhenguet Funny thing is the console.warn statements are eating up entire memory and it starts giving memory warnings.","@sharvilak11 yes. In my case it warns twice but I can not do anything with map -_-\r\nit's so crazy.","Same issue. Map still works but this warnings are spamming the console.",":tada: This issue has been resolved in version 1.6.0-beta.2 :tada:\n\nThe release is available on:\n- [npm package (@beta dist-tag)](https:\/\/www.npmjs.com\/package\/react-native-maps\/v\/1.6.0-beta.2)\n- [GitHub release](https:\/\/github.com\/react-native-maps\/react-native-maps\/releases\/tag\/v1.6.0-beta.2)\n\nYour **[semantic-release](https:\/\/github.com\/semantic-release\/semantic-release)** bot :package::rocket:",":tada: This issue has been resolved in version 1.6.0 :tada:\n\nThe release is available on:\n- [npm package (@latest dist-tag)](https:\/\/www.npmjs.com\/package\/react-native-maps\/v\/1.6.0)\n- [GitHub release](https:\/\/github.com\/react-native-maps\/react-native-maps\/releases\/tag\/v1.6.0)\n\nYour **[semantic-release](https:\/\/github.com\/semantic-release\/semantic-release)** bot :package::rocket:","This still happens on Version 1.8.0 \/ iOS, please re-open this.","This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. If the issue remains relevant, simply comment `Still relevant` and the issue will remain open. Thank you for your contributions."],"labels":["bug","stale","released on @beta","released"]},{"title":"Infinite loop: hasScheduledFrame is not checked in ViewChangesTracker runnable","body":"### Summary\n\nShould the runnable created in ViewChangesTracker be checking if hasScheduledFrame is true?\r\n\r\nIt's running in an infinite loop if any markers are created with a custom bitmap.  If this is intentional, then why is the runnable postDelayed again in addMarker?\n\n### Reproducible sample code\n\n```TSX\nprivate ViewChangesTracker() {\r\n    handler = new Handler(Looper.myLooper());\r\n    updateRunnable = new Runnable() {\r\n      @Override\r\n      public void run() {\r\n        hasScheduledFrame = false;\r\n        update();\r\n\r\n        if (markers.size() > 0) {\r\n          handler.postDelayed(updateRunnable, fps);\r\n        }\r\n      }\r\n    };\r\n  }\n```\n\n\n### Steps to reproduce\n\nAdd a marker to a Google Map\r\nhttps:\/\/github.com\/react-native-maps\/react-native-maps\/blob\/326a333fd386268817f97b4ed00486650c772ac8\/android\/src\/main\/java\/com\/airbnb\/android\/react\/maps\/AirMapMarker.java#L430\n\n### Expected result\n\nIt looks like the runnable should see if hasScheduledFrame is true before firing off the runnable again.  hasScheduledFrame  is true when a marker is added or updated\n\n### Actual result\n\nThe runnable is fired every 40ms.  \n\n### React Native Maps Version\n\n1.1.0\n\n### What platforms are you seeing the problem on?\n\nAndroid\n\n### React Native Version\n\n0.69.2\n\n### What version of Expo are you using?\n\nNot using Expo\n\n### Device(s)\n\nPixel 4a\n\n### Additional information\n\n_No response_","comments":["This is on my to-do list. The code was added way before I started maintaining the project, and I've wondered the same thing myself. Since the \"infinite loop\" and the rescheduling each x ms is so obvious, I assumed that something required the code to be as it is, but I haven't had the time to look into it.\r\n\r\nIf you are able to look into the issue, I'd be happy to help merge potential fixes \ud83d\udc4d ","This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.","Still applicable.","This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. If the issue remains relevant, simply comment `Still relevant` and the issue will remain open. Thank you for your contributions.","Still applicable.  Bot is quite pushy.","Still relevant","Still very relevant.","Is this fixed by https:\/\/github.com\/react-native-maps\/react-native-maps\/pull\/4969 ?"],"labels":["bug","reproducible"]},{"title":"react-native-maps does not support the New Architecture","body":"### Summary\n\nHi @Simon-TechForm, I'm a software engineer at Meta, working on React Native.\r\nWe notice that your library is really popular and we would like to know if you are considering migrating it to the New Architecture, using the Fabric Renderer and TurboModules. You can reed more about the New Architecture [here](https:\/\/reactnative.dev\/docs\/next\/the-new-architecture\/landing-page), and [here](https:\/\/reactnative.dev\/docs\/next\/new-architecture-intro) you can find a guide on how to migrate the library.\r\n\r\nAre there any plans to proceed with the migration?\r\nCan we support you in any way?\n\n### Reproducible sample code\n\n```TSX\nimport React from 'react';\r\nimport MapView from 'react-native-maps';\r\n\r\nexport default function App() {\r\n  return (\r\n    <MapView\r\n      style={{flex: 1}}\r\n      initialRegion={{\r\n        latitude: 42,\r\n        longitude: 30,\r\n        latitudeDelta: 1,\r\n        longitudeDelta: 1,\r\n      }}\r\n    \/>\r\n  );\r\n}\n```\n\n\n### Steps to reproduce\n\n- `npx react-native init TestMaps --version 0.70.0-rc.2`\r\n- `yarn add react-native-maps`\r\n- `cd ios`\r\n- `bundle install`\r\n- `RCT_NEW_ARCH_ENABLED=1 bundle exec pod install`\r\n- `cd ..`\r\n- open `android\/gradle.properties`\r\n- change the `newArchEnabled` boolean from `false` to `true`\r\n- `npx react-native run-ios`\r\n- `npx react-native run-android`\r\n- Update the App.js file with the snippet in the **Reproducible Sample Code** section\n\n### Expected result\n\nA properly loaded map.\n\n### Actual result\n\nA screen with pink background saying Unimplemented component:\r\n<table>\r\n<tr><th>iOS<\/th><th>Android<\/th><\/tr>\r\n<tr><td><img src=\"https:\/\/user-images.githubusercontent.com\/11162307\/183689037-467b9aa8-41cc-4055-bb01-e91237133cf2.png\" width=\"240\" \/><\/td><td><img src=\"https:\/\/user-images.githubusercontent.com\/11162307\/183692621-2c1cce0e-9984-419d-939d-9cba4d43cb84.png\" width=\"240\" \/><\/td><\/tr>\r\n<\/table>\r\n\r\n\n\n### React Native Maps Version\n\n1.2.0\n\n### What platforms are you seeing the problem on?\n\nAndroid, iOS (Apple Maps), iOS (Google Maps)\n\n### React Native Version\n\n0.70.0-rc.2\n\n### What version of Expo are you using?\n\nNot using Expo\n\n### Device(s)\n\niPhone 13 (iOS 15.5) | Android Pixel 5 (API 33)\n\n### Additional information\n\n_No response_","comments":["Hello @cipolleschi. Thank you for reaching out.\r\n\r\nI've already started doing some of the prerequisites, and I'm definitely planning to migrate as soon as my calendar allows me to. I spent some time looking into the migration a couple of weeks ago and wrote down a few notes\/questions that I was planning to post in the new architecture workgroup.\r\n\r\nI see that the documentation got a major overhaul, so I'll revisit the subject and get back to you if my questions are still relevant after reading the updated docs :)","That's an amazing news! Thank you so much.\r\nFeel free to reach out anytime with any question you may have! :D ","@cipolleschi I have a couple of questions that I hope you can help sort out :)\r\n\r\n[Prerequisites for Libraries](https:\/\/reactnative.dev\/docs\/new-architecture-library-intro#preparing-your-javascript-codebase-for-the-new-react-native-renderer-fabric) states that `The new renderer also known as Fabric doesn\u2019t use the UIManager so direct calls to UIManager will need to be migrated.`. Is that to be interpreted as any use of UIManager will have to be removed or only the specific cases that the documentation then goes on to describe? `react-native-maps` makes use of `UIManager.getViewManagerConfig` for instance.\r\n\r\nI assume that it isn't, but is native code like:\r\n```java\r\nUIManagerModule uiManager = context.getNativeModule(UIManagerModule.class);\r\nuiManager.addUIBlock(new UIBlock(){}\r\n```\r\nor\r\n```objc\r\n[self.bridge.uiManager addUIBlock:^(__unused RCTUIManager *uiManager, NSDictionary<NSNumber *, UIView *> *viewRegistry){}\r\n```\r\naffected by the above?\r\n\r\nLast but not least, `react-native-maps` makes use of a `provider` prop that determines what native component to load during runtime, meaning a single js\/react component doesn't map to a single native component per platform, but to two or, in theory, more.\r\nDoes the new arch make any use of the default export from `<FABRIC COMPONENT>NativeComponent.ts` or would it be possible to export multiple native components? E.g.:\r\n```ts\r\nexport const AirMap = codegenNativeComponent<NativeProps>(\r\n  'AirMap'\r\n) as HostComponent<NativeProps>;\r\n\r\nexport const AirGoogleMap = codegenNativeComponent<NativeProps>(\r\n  'AirGoogleMap'\r\n) as HostComponent<NativeProps>;\r\n```\r\nor would it be better to create two `<FABRIC COMPONENT>NativeComponent.ts`, one for each native component, even though they are used by the same js\/react component and share the same NativeProps and NativeCommands? Or do you have an entirely different solution?","Hi @Simon-TechForm. I made some test on the second question, and unless I did something very wrong, it does not seem to work.\r\n\r\nMy tests were:\r\n* A single `<FABRIC COMPONENT>NativeComponent.js` with two exports => the codegen runs but it is not able to generate any components.\r\n* Extracted the props in a separated file and created a `<FABRIC COMPONENT>1NativeComponent.js` and a `<FABRIC COMPONENT>2NativeComponent.js` importing those props => The parsers fails to find the proper type for the props and fails trying to generate them.\r\n\r\nSo, the output is that, currently, the only way to generate two components with the same props is to create two separate `<FABRIC COMPONENT 1>NativeComponent.js` and `<FABRIC COMPONENT 2>NativeComponent.js` files, copying and pasting the props. \r\n\r\nThat's far from ideal, but we plan to improve the Codegen a little, so I hope we would be able to bring this scenario to life. \r\n\r\n---\r\n\r\nFor your first question I have to dig more internally. I hope to get back with an answer as soon as possible.","Will this fix web support for Expo SDK 46? \ud83e\udd7a\r\n\r\n```\r\nUncaught TypeError: react_native_1.UIManager.getViewManagerConfig is not a function\r\n    at ..\/node_modules\/react-native-maps\/lib\/decorateMapComponent.js (decorateMapComponent.js:29:1)\r\n    at __webpack_require__ (bootstrap:789:1)\r\n    at fn (bootstrap:100:1)\r\n    at ..\/node_modules\/react-native-maps\/lib\/MapMarker.js (MapMarker.js:29:1)\r\n    at __webpack_require__ (bootstrap:789:1)\r\n    at fn (bootstrap:100:1)\r\n    at ..\/node_modules\/react-native-maps\/lib\/index.js (index.js:37:1)\r\n    at __webpack_require__ (bootstrap:789:1)\r\n    at fn (bootstrap:100:1)\r\n    at .\/routes\/ride\/FindBeep.tsx (Report.tsx:66:1)\r\n    at __webpack_require__ (bootstrap:789:1)\r\n    at fn (bootstrap:100:1)\r\n    at .\/navigators\/Drawer.tsx (index.js:8:1)\r\n    at __webpack_require__ (bootstrap:789:1)\r\n    at fn (bootstrap:100:1)\r\n    at .\/App.tsx (App.tsx:1:1)\r\n    at __webpack_require__ (bootstrap:789:1)\r\n    at fn (bootstrap:100:1)\r\n    at .\/index.js (index.js:1:1)\r\n    at __webpack_require__ (bootstrap:789:1)\r\n    at fn (bootstrap:100:1)\r\n    at 1 (useValidationErrors.tsx:38:1)\r\n    at __webpack_require__ (bootstrap:789:1)\r\n    at bootstrap:856:1\r\n    at bootstrap:856:1\r\n```","Hello @Simon-TechForm\n\nThe [linked paragraph](https:\/\/reactnative.dev\/docs\/new-architecture-library-intro) talks about JavaScript specifically. iOS and Android have their dedicated sections.\n\nWhen writing components in the new architecture, UIManager won't be accessible on the host platform. For example on iOS inside your component, there is no way to get hold of UIManager and other mechanisms have to be used. \n\nWhat do you need view configs for? We can try to find a way to achieve the same functionality in the new architecture.","Hello @cipolleschi & @sammy-SC. Thank you both for getting back to me.\r\n\r\n@cipolleschi thank you for running the tests. I'm not surprised by the results, and I get why it would \"have\" to behave like that. While the first case seems like an edge case, I could see the second case, importing props from another file, being useful outside of `react-native-maps` though :)\r\n\r\n@sammy-SC `UIManager.getViewManagerConfig` is currently only being used for convenience. As `requireNativeComponent` will run and return a string for non-existing native views, `getViewManagerConfig` is used to print a warning and return `null` for the component instead of crashing the app when trying to render the non-existing native view (installing Google Maps is optional on iOS in `react-native-maps`). But given how early in the dev cycle the error will show itself, and how clear the error message is, I'm honestly fine just removing the check.\r\n\r\nOne other thing: Quite a few methods that are esentially NativeCommands for the NativeComponent was done as NativeModule methods to allow for async methods that could be resolved\/rejected with a value. This is currently done by passing a view tag to the NativeModule method by passing `findNodeHandle(this.ref.current)` as the first argument, much like we used to do with `dispatchViewManagerCommand` before migrating to `codegenNativeCommands`. With `findNodeHandle` being out of the picture, can you recommend some other way (or docs) to do this? I currenly have a working example that passes `this.ref.current._nativeTag` instead, but I can imagine that accesing what I assume is meant to be a private member has both your eyebrows twitching violently \ud83d\ude2c \ud83d\ude01 ","Hi @Simon-TechForm! Sorry for the late answer.\r\n\r\n> I could see the second case, importing props from another file, being useful outside of react-native-maps though :)\r\n\r\nYes, I agree. That's an interesting use case and can lead to much better code. I hope to find some time to deliver this soon.\r\n\r\n>  This is currently done by passing a view tag to the NativeModule method by passing findNodeHandle(this.ref.current) as the first argument, much like we used to do with dispatchViewManagerCommand before migrating to codegenNativeCommands. With findNodeHandle being out of the picture, can you recommend some other way (or docs) to do this? I currenly have a working example that passes this.ref.current._nativeTag instead, but I can imagine that accesing what I assume is meant to be a private member has both your eyebrows twitching violently \ud83d\ude2c \ud83d\ude01\r\n\r\nXD Yep, access a private APIs should be avoided.\r\nSo, the proper way to replace `findNodeHandle` is with [`forwardRefs`](https:\/\/reactnative.dev\/docs\/next\/new-architecture-library-intro#using-forwardref) for function components and with a [`getter`](https:\/\/reactnative.dev\/docs\/next\/new-architecture-library-intro#using-a-getter-note-the-addition-of-getviewref) for class components.\r\nThat said, we are working on ways to simplify the migration and we are considering keeping around the `findNodeHandle` API for a while. This should give you and other library maintainer some more time to migrate! ;) \r\n\r\nThe reason why we are deprecating it is because its behavior is unpredictable with some new features of React18. However, this features are opt-in and therefore, it _should_ be safe to still use `findNodeHandle` if you don't adopt them (however, you'll never know if an app importing your library will wrap your component in some of the new features... So it is much safer to migrate them).\r\n\r\n\r\n\r\n\r\n","Hi @cipolleschi. Don't worry :)\r\n\r\nProblem is, we are passing it to the native side through `NativeModule` methods, so I can't really use either of them.\r\n\r\nE.g:\r\n```ts\r\nNativeModules.AirMapModule.coordinateForPoint(findNodeHandle(this.map.current), point);\r\n```\r\n\r\nand then on the native side we are doing (android as an example):\r\n```java\r\n  @ReactMethod\r\n  public void coordinateForPoint(final int tag, ReadableMap point, final Promise promise) {\r\n    ...\r\n    UIManagerModule uiManager = context.getNativeModule(UIManagerModule.class);\r\n    uiManager.addUIBlock(new UIBlock()\r\n    {\r\n      @Override\r\n      public void execute(NativeViewHierarchyManager nvhm)\r\n      {\r\n        AirMapView view = (AirMapView) nvhm.resolveView(tag);\r\n        ...\r\n    });\r\n  }\r\n```\r\nto get a reference to the view on the native side. This is currently the only use we have for `findNodeHandle`, so I'd prefer migrating as well :)","This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.","@Simon-TechForm Are you still working on the new arch?","@Simon-TechForm Hey, hope you are doing well :) Like @midrizi, I also wanted to see if there was an update around the usage of the new architecture? Is there a place where pending tasks are listed? More than happy to contribute!","@midrizi @kalyantm I've had very limited time to spend on react-native-maps in the previous months, but the time I had, I spent on supporting the new architecture. I've had no \"behind the scenes\" communication with the RN team, so the issue I mentioned in my latest comment is very much still applicable. But since `findNodeHandle` seems to stick around, I've moved on to the next step(s).\r\n\r\nI've just applied for access to the new architecture working group as I've stumbled upon a couple of features that doesn't seem to be supported when codegenerating typescript specs in the new architecture and am currently awaiting access :)","> and am currently awaiting access :)\r\n\r\nYou should have access by now \ud83d\udc4d ","For me it was adding the two lines below.\r\n\r\nimport {enableLatestRenderer} from 'react-native-maps';\r\nenableLatestRenderer();","@uwakahuche Where did you specify that? I still get `Unimplemented component <AIRGoogleMap>`","@kalyantm App.js","@cortinico Thank you and apologies for the late reply :)\r\n\r\nI've just commented in the [Codegen Missing features](https:\/\/github.com\/reactwg\/react-native-new-architecture\/discussions\/91) discussion, raising the issues that's currently blocking migration of `react-native-maps`.","Hi!\r\n\r\nThank you for this awesome library! It's really one of the most helpful I've ever used on RN :D\r\n\r\nIs there any news regarding this issue ? I'm currently working with RN 0.71.2 with the new Architecture and I really miss react-native-maps \ud83d\ude2c \r\nI forked @michbil's fork (https:\/\/github.com\/michbil\/react-native-maps\/tree\/feature\/new-architecture-exp) where he tried to add support for the new architecture, and I got it working on iOS but not on Android yet, and my knowledge of native code is...well, not enough sadly! I just tried to command some stuff but of course I suppose this is not enough even though it compiles and run on dev env for iOS \ud83d\ude04 (https:\/\/github.com\/michbil\/react-native-maps\/tree\/feature\/new-architecture-exp)\r\n\r\nIs the anything I can do to help make react-native-maps support the new architecture ?","I have figured it out for iOS . Check this https:\/\/www.youtube.com\/watch?v=-08s1kr1SBE","Any updates? We still earnestly waiting for it \ud83e\udd79","I am also willing to help. I am author of this summer hack(https:\/\/github.com\/michbil\/react-native-maps\/tree\/feature\/new-architecture-exp) to make library work on new architecture iOS. @Simon-TechForm Is there any branch where help is needed? ","I have figured out how to display google maps for both android as well, if interested check it out https:\/\/www.youtube.com\/watch?v=ZpYDzLGJTXY ","A quick update for everyone interested. The status of this is the same as mentioned in https:\/\/github.com\/react-native-maps\/react-native-maps\/issues\/4383#issuecomment-1435786037 :)","@Simon-TechForm we are migrating our app to new architecture, Is there any quick workaround to add support for fabric. Please suggest. \r\n","@ravindraguptacapgemini you can try the new interop layer https:\/\/github.com\/reactwg\/react-native-new-architecture\/discussions\/135\r\nbut I'm not sure if it will work with react-native-maps","yes, please! If any of you had chance, let's try to use the interop layer and report failures. We are actively working on that and any feedback is super valuable.\r\nWe are committing on fixing most of the basic failures to try and support most of the use cases with the interop layer!","@cipolleschi thanks for the update. I have tried Interop layer with 0.72.0 with react-native-maps on iOS, specified this in react-native-config.js\r\n```\r\nmodule.exports = {\r\n    project: {\r\n        android: {\r\n            unstable_reactLegacyComponentNames: ['AIRGoogleMap'],\r\n        },\r\n        ios: {\r\n            unstable_reactLegacyComponentNames: ['AIRGoogleMap'],\r\n        }\r\n    },\r\n};\r\n```\r\n\r\nIt crash on load the map, sharing part of crash report here:\r\n\r\nIncident Identifier: 7B53C949-83B7-4B42-A5B0-39AE5F2F933A\r\nCrashReporter Key:   6E546EFD-FB91-747D-EE9D-6F28E9A1CB76\r\nHardware Model:      Mac14,10\r\nProcess:             intelexMobile [4241]\r\nPath:                \/Users\/USER\/Library\/Developer\/CoreSimulator\/Devices\/CAB004FE-326E-4CAE-8167-3CEEE227C70C\/data\/Containers\/Bundle\/Application\/D9F5B09C-1A1F-411D-A2E9-0BFFE049988C\/intelexMobile.app\/intelexMobile\r\nIdentifier:          com.intelex.intelexMobile\r\nVersion:             1.0 (1.0)\r\nCode Type:           X86-64 (Native)\r\nRole:                Foreground\r\nParent Process:      launchd_sim [2229]\r\nCoalition:           com.apple.CoreSimulator.SimDevice.CAB004FE-326E-4CAE-8167-3CEEE227C70C [1448]\r\nResponsible Process: SimulatorTrampoline [2133]\r\n\r\nDate\/Time:           2023-06-30 21:21:46.7224 +0530\r\nLaunch Time:         2023-06-30 21:18:31.0195 +0530\r\nOS Version:          macOS 13.4 (22F66)\r\nRelease Type:        User\r\nReport Version:      104\r\n\r\nException Type:  EXC_CRASH (SIGABRT)\r\nException Codes: 0x0000000000000000, 0x0000000000000000\r\nTriggered by Thread:  6\r\n\r\nThread 0::  Dispatch queue: com.apple.main-thread\r\n0   ???                           \t       0x1058539a8 ???\r\n1   <translation info unavailable>\t       0x105929584 ???\r\n2   libsystem_kernel.dylib        \t       0x116dcc72d mach_msg2_internal + 78\r\n3   libsystem_kernel.dylib        \t       0x116dc55e4 mach_msg_overwrite + 692\r\n4   libsystem_kernel.dylib        \t       0x116dbe89a mach_msg + 19\r\n5   CoreFoundation                \t       0x1171bc437 __CFRunLoopServiceMachPort + 145\r\n6   CoreFoundation                \t       0x1171b6b7b __CFRunLoopRun + 1338\r\n7   CoreFoundation                \t       0x1171b6264 CFRunLoopRunSpecific + 560\r\n8   GraphicsServices              \t       0x11adc724e GSEventRunModal + 139\r\n9   UIKitCore                     \t       0x1265a67bf -[UIApplication _run] + 994\r\n10  UIKitCore                     \t       0x1265ab5de UIApplicationMain + 123\r\n11  intelexMobile                 \t       0x10081ae68 main + 104 (main.m:7)\r\n12  dyld_sim                      \t       0x10de52384 start_sim + 10\r\n13  dyld                          \t       0x2059b841f start + 1903\r\n\r\nThread 1:: com.apple.rosetta.exceptionserver\r\n0   ???                           \t    0x7ff7ffbd6694 ???\r\n\r\nThread 2:: com.apple.uikit.eventfetch-thread\r\n0   ???                           \t       0x1058539a8 ???\r\n1   <translation info unavailable>\t       0x105929584 ???\r\n2   libsystem_kernel.dylib        \t       0x116dcc72d mach_msg2_internal + 78\r\n3   libsystem_kernel.dylib        \t       0x116dc55e4 mach_msg_overwrite + 692\r\n4   libsystem_kernel.dylib        \t       0x116dbe89a mach_msg + 19\r\n5   CoreFoundation                \t       0x1171bc437 __CFRunLoopServiceMachPort + 145\r\n6   CoreFoundation                \t       0x1171b6b7b __CFRunLoopRun + 1338\r\n7   CoreFoundation                \t       0x1171b6264 CFRunLoopRunSpecific + 560\r\n8   Foundation                    \t       0x114f7bc8d -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 213\r\n9   Foundation                    \t       0x114f7bf04 -[NSRunLoop(NSRunLoop) runUntilDate:] + 72\r\n10  UIKitCore                     \t       0x12667ac29 -[UIEventFetcher threadMain] + 521\r\n11  Foundation                    \t       0x114fa53f4 __NSThread__start__ + 1009\r\n12  libsystem_pthread.dylib       \t       0x116e2f1d3 _pthread_start + 125\r\n13  libsystem_pthread.dylib       \t       0x116e2abd3 thread_start + 15\r\n\r\nThread 3:: KSCrash Exception Handler (Secondary)\r\n0   ???                           \t       0x1058539a8 ???\r\n1   <translation info unavailable>\t       0x105929584 ???\r\n2   libsystem_kernel.dylib        \t       0x116dcc72d mach_msg2_internal + 78\r\n3   libsystem_kernel.dylib        \t       0x116de39d0 thread_suspend + 84\r\n4   intelexMobile                 \t       0x100821118 ksmachexc_i_handleExceptions + 136 (BSG_KSCrashSentry_MachException.c:222)\r\n5   libsystem_pthread.dylib       \t       0x116e2f1d3 _pthread_start + 125\r\n6   libsystem_pthread.dylib       \t       0x116e2abd3 thread_start + 15\r\n\r\nThread 4:: KSCrash Exception Handler (Primary)\r\n0   ???                           \t       0x1058539a8 ???\r\n1   <translation info unavailable>\t       0x105929584 ???\r\n2   libsystem_kernel.dylib        \t       0x116dcc72d mach_msg2_internal + 78\r\n3   libsystem_kernel.dylib        \t       0x116dc55e4 mach_msg_overwrite + 692\r\n4   libsystem_kernel.dylib        \t       0x116dbe89a mach_msg + 19\r\n5   intelexMobile                 \t       0x100821156 ksmachexc_i_handleExceptions + 198 (BSG_KSCrashSentry_MachException.c:229)\r\n6   libsystem_pthread.dylib       \t       0x116e2f1d3 _pthread_start + 125\r\n7   libsystem_pthread.dylib       \t       0x116e2abd3 thread_start + 15\r\n\r\nThread 5:: com.bugsnag.app-hang-detector\r\n0   ???                           \t       0x1058539a8 ???\r\n1   <translation info unavailable>\t       0x106b98934 ???\r\n2   libdispatch.dylib             \t       0x113cc851d _dispatch_sema4_wait + 16\r\n3   libdispatch.dylib             \t       0x113cc8a44 _dispatch_semaphore_wait_slow + 98\r\n4   intelexMobile                 \t       0x10082a8b9 -[BSGAppHangDetector detectAppHangs] + 169 (BSGAppHangDetector.m:126)\r\n5   intelexMobile                 \t       0x10082a805 DetectAppHangs + 21 (BSGAppHangDetector.m:216)\r\n6   libsystem_pthread.dylib       \t       0x116e2f1d3 _pthread_start + 125\r\n7   libsystem_pthread.dylib       \t       0x116e2abd3 thread_start + 15\r\n\r\nThread 6 Crashed:: com.facebook.react.JavaScript\r\n0   <translation info unavailable>\t       0x1849ad3a4 ???\r\n1   <translation info unavailable>\t       0x1849ad3a4 ???\r\n2   libsystem_platform.dylib      \t       0x1168bb603 _sigtramp + 51\r\n3   libsystem_c.dylib             \t       0x114101e58 abort + 130\r\n4   libsystem_c.dylib             \t       0x114101144 __assert_rtn + 314\r\n5   intelexMobile                 \t       0x100de56d1 facebook::react::constructCoordinator(std::__1::shared_ptr<facebook::react::ContextContainer const> const&, std::__1::shared_ptr<void const> const&) + 257 (LegacyViewManagerInteropComponentDescriptor.mm:64)\r\n6   intelexMobile                 \t       0x100de5549 facebook::react::LegacyViewManagerInteropComponentDescriptor::LegacyViewManagerInteropComponentDescriptor(facebook::react::ComponentDescriptorParameters const&) + 73 (LegacyViewManagerInteropComponentDescriptor.mm:94)\r\n7   intelexMobile                 \t       0x100de5bfd facebook::react::LegacyViewManagerInteropComponentDescriptor::LegacyViewManagerInteropComponentDescriptor(facebook::react::ComponentDescriptorParameters const&) + 29 (LegacyViewManagerInteropComponentDescriptor.mm:95)\r\n8   intelexMobile                 \t       0x100fccfaf std::__1::__unique_if<facebook::react::LegacyViewManagerInteropComponentDescriptor const>::__unique_single std::__1::make_unique[abi:v15006]<facebook::react::LegacyViewManagerInteropComponentDescriptor const, facebook::react::ComponentDescriptorParameters const&>(facebook::react::ComponentDescriptorParameters const&) + 63 (unique_ptr.h:714)\r\n9   intelexMobile                 \t       0x100fccf48 std::__1::unique_ptr<facebook::react::ComponentDescriptor const, std::__1::default_delete<facebook::react::ComponentDescriptor const>> facebook::react::concreteComponentDescriptorConstructor<facebook::react::LegacyViewManagerInteropComponentDescriptor>(facebook::react::ComponentDescriptorParameters const&) + 40 (ComponentDescriptorProvider.h:53)\r\n10  intelexMobile                 \t       0x100d5fd39 facebook::react::ComponentDescriptorRegistry::add(facebook::react::ComponentDescriptorProvider) const + 153 (ComponentDescriptorRegistry.cpp:33)\r\n11  intelexMobile                 \t       0x100d5a8fb facebook::react::ComponentDescriptorProviderRegistry::add(facebook::react::ComponentDescriptorProvider const&) const + 539 (ComponentDescriptorProviderRegistry.cpp:40)\r\n12  intelexMobile                 \t       0x100f96246 -[RCTComponentViewFactory _addDescriptorToProviderRegistry:] + 118 (RCTComponentViewFactory.mm:174)\r\n13  intelexMobile                 \t       0x100f957b0 -[RCTComponentViewFactory registerComponentIfPossible:] + 576 (RCTComponentViewFactory.mm:131)\r\n14  intelexMobile                 \t       0x100f991c4 +[RCTComponentViewFactory currentComponentViewFactory]::'block-literal'::$_1::operator()(char const*) const + 68 (RCTComponentViewFactory.mm:79)\r\n15  intelexMobile                 \t       0x100f99170 decltype(std::declval<+[RCTComponentViewFactory currentComponentViewFactory]::'block-literal'::$_1&>()(std::declval<char const*>())) std::__1::__invoke[abi:v15006]<+[RCTComponentViewFactory currentComponentViewFactory]::'block-literal'::$_1&, char const*>(+[RCTComponentViewFactory currentComponentViewFactory]::'block-literal'::$_1&, char const*&&) + 32 (invoke.h:394)\r\n16  intelexMobile                 \t       0x100f9911d void std::__1::__invoke_void_return_wrapper<void, true>::__call<+[RCTComponentViewFactory currentComponentViewFactory]::'block-literal'::$_1&, char const*>(+[RCTComponentViewFactory currentComponentViewFactory]::'block-literal'::$_1&, char const*&&) + 29 (invoke.h:479)\r\n17  intelexMobile                 \t       0x100f990f5 std::__1::__function::__alloc_func<+[RCTComponentViewFactory currentComponentViewFactory]::'block-literal'::$_1, std::__1::allocator<+[RCTComponentViewFactory currentComponentViewFactory]::'block-literal'::$_1>, void (char const*)>::operator()[abi:v15006](char const*&&) + 37 (function.h:185)\r\n18  intelexMobile                 \t       0x100f98121 std::__1::__function::__func<+[RCTComponentViewFactory currentComponentViewFactory]::'block-literal'::$_1, std::__1::allocator<+[RCTComponentViewFactory currentComponentViewFactory]::'block-literal'::$_1>, void (char const*)>::operator()(char const*&&) + 33 (function.h:359)\r\n19  intelexMobile                 \t       0x100d5d2ea std::__1::__function::__value_func<void (char const*)>::operator()[abi:v15006](char const*&&) const + 58 (function.h:512)\r\n20  intelexMobile                 \t       0x100d5aead std::__1::function<void (char const*)>::operator()(char const*) const + 29 (function.h:1197)\r\n21  intelexMobile                 \t       0x100d5ad79 facebook::react::ComponentDescriptorProviderRegistry::request(char const*) const + 137 (ComponentDescriptorProviderRegistry.cpp:62)\r\n22  intelexMobile                 \t       0x100d603df facebook::react::ComponentDescriptorRegistry::at(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const + 255 (ComponentDescriptorRegistry.cpp:69)\r\n23  intelexMobile                 \t       0x100eb38f5 facebook::react::UIManager::createNode(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, int, facebook::react::RawProps const&, std::__1::shared_ptr<facebook::react::EventTarget const>) const + 165 (UIManager.cpp:64)\r\n24  intelexMobile                 \t       0x100ed7320 facebook::react::UIManagerBinding::get(facebook::jsi::Runtime&, facebook::jsi::PropNameID const&)::$_1::operator()(facebook::jsi::Runtime&, facebook::jsi::Value const&, facebook::jsi::Value const*, unsigned long) const + 576 (UIManagerBinding.cpp:197)\r\n25  intelexMobile                 \t       0x100ed70d6 decltype(std::declval<facebook::react::UIManagerBinding::get(facebook::jsi::Runtime&, facebook::jsi::PropNameID const&)::$_1&>()(std::declval<facebook::jsi::Runtime&>(), std::declval<facebook::jsi::Value const&>(), std::declval<facebook::jsi::Value const*>(), std::declval<unsigned long>())) std::__1::__invoke[abi:v15006]<facebook::react::UIManagerBinding::get(facebook::jsi::Runtime&, facebook::jsi::PropNameID const&)::$_1&, facebook::jsi::Runtime&, facebook::jsi::Value const&, facebook::jsi::Value const*, unsigned long>(facebook::react::UIManagerBinding::get(facebook::jsi::Runtime&, facebook::jsi::PropNameID const&)::$_1&, facebook::jsi::Runtime&, facebook::jsi::Value const&, facebook::jsi::Value const*&&, unsigned long&&) + 70 (invoke.h:394)\r\n26  intelexMobile                 \t       0x100ed7060 facebook::jsi::Value std::__1::__invoke_void_return_wrapper<facebook::jsi::Value, false>::__call<facebook::react::UIManagerBinding::get(facebook::jsi::Runtime&, facebook::jsi::PropNameID const&)::$_1&, facebook::jsi::Runtime&, facebook::jsi::Value const&, facebook::jsi::Value const*, unsigned long>(facebook::react::UIManagerBinding::get(facebook::jsi::Runtime&, facebook::jsi::PropNameID const&)::$_1&, facebook::jsi::Runtime&, facebook::jsi::Value const&, facebook::jsi::Value const*&&, unsigned long&&) + 64 (invoke.h:470)\r\n27  intelexMobile                 \t       0x100ed7010 ","@ravindraguptacapgemini thanks for testing that. For 0.72.0, we are aware of a bug in the iOS interop layer, for which legacy components with ViewManagers not starting with the `RCT` prefix were crashing the app.\r\nThe bug has been fixed in 0.72.1, so now that should be ok. [Commit](https:\/\/github.com\/facebook\/react-native\/commit\/f5372578acdc4c356c62de324593823cc3ed302d) for reference.\r\n\r\nLet me know if you have time to try with 72.1! :D ","@cipolleschi thank you so much, I tried with React Native 0.72.1, and it did work fine for iOS but somehow it's breaking up for android, the map loads with some error, here is the error screenshot. Please check of you can help here.\r\n<img width=\"397\" alt=\"Screenshot 2023-07-03 at 7 19 02 PM\" src=\"https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/97147467\/e6174601-15e5-4e73-aa90-3dc92ace0271\">\r\n","@ravindraguptacapgemini thank you so much for testing this! In your message, you wrote:\r\n\r\n> I tried with React Native 0.72.1, and it did work fine for **android** but somehow it's breaking up for **android**\r\n\r\nI guess that the first **android** was actually **ios**, as the image you linked with the error is of an Android device.\r\n\r\n@cortinico this seems to be a problem with the events (surprise surprise).\r\n\r\n@ravindraguptacapgemini can you create a repro using [this repo](https:\/\/github.com\/react-native-community\/reproducer-react-native)?","@cipolleschi @cortinico  can we expect this issue to be fixed in coming version (may be an RC) of React Native, also please let me know, if there is any timeline. thanks ","Very likely yes. Events are one of the basic features of React Native and the interop layer, so we would like to have it fixed in the interop layer. But to fix this effectively, we are going to need a reliable repro","@cipolleschi I have created a repro for you, please check it out from [here](https:\/\/github.com\/ravindraguptacapgemini\/reproducer-react-native-maps-events). \r\n","@cortinico \u261d\ufe0f ","@cortinico hey man!, have you got a chance to check for this issue?","Hey @ravindraguptacapgemini \nPlease don't ping us over the weekend. I'll check that once we're back in the office next week. Thank you","Hey, also face this issue on android, find any solution for it?","> Hey @ravindraguptacapgemini\r\n> Please don't ping us over the weekend. I'll check that once we're back in the office next week. Thank you\r\n\r\n@cortinico sorry to ping here on weekend, hope now you are in office and just curious to if by any chance you checked on this issue. Thanks","We are facing the unsupported event issue as well for Android. Is there a solution for this? ","Hi @ravindraguptacapgemini,\r\nThanks for providing a reproducer, this was really valuable for me. I identified a scenario in the interop layer where direct (non-bubbling) events, like the one fired from `react-native-maps` are not properly handled. I'll work on a fix, and this should hopefully land in the next point release of 0.72","The fix is here:\r\n- https:\/\/github.com\/facebook\/react-native\/pull\/38352\r\n\r\nI'll have it reviewed and merged in the upcoming stable for 0.72","@cortinico really appreciate your effort to check for the issue. I have tried to apply the changes from the PR on my local, but they do not work, still getting the same error. I even tried to replace contents of the file as there were other changes as well, nothing changed. Could you please suggest how to check this fix on local. Also please let me know if there is any tentative date for the next stable release of 0.72. Thanks again!","@cortinico Thanks for your effort. Trying this changes locally with react-native 0.72.3 but facing same issue on it.","This change is not released yet. It will be included in 0.72.4","@Simon-TechForm please update if you are now planning the add new architecture support for the library.","@cortinico We are also observing the map to crash on re-render in some case with new architecture, here is the stack-trace:\r\n\r\nException Type:  EXC_CRASH (SIGABRT)\r\nException Codes: 0x0000000000000000, 0x0000000000000000\r\nTriggered by Thread:  0\r\n\r\nLast Exception Backtrace:\r\n0   CoreFoundation                \t       0x11b4aa77b __exceptionPreprocess + 226\r\n1   libobjc.A.dylib               \t       0x112b51b73 objc_exception_throw + 48\r\n2   Foundation                    \t       0x1190fe109 -[NSMutableDictionary(NSMutableDictionary) classForCoder] + 0\r\n3   intelexMobile                 \t       0x10512ad41 -[RCTComponentViewRegistry _enqueueComponentViewWithComponentHandle:componentViewDescriptor:] + 721 (RCTComponentViewRegistry.mm:115)\r\n4   intelexMobile                 \t       0x10512a1bc -[RCTComponentViewRegistry enqueueComponentViewWithComponentHandle:tag:componentViewDescriptor:] + 940 (RCTComponentViewRegistry.mm:70)\r\n5   intelexMobile                 \t       0x10516d921 RCTPerformMountInstructions(std::__1::vector<facebook::react::ShadowViewMutation, std::__1::allocator<facebook::react::ShadowViewMutation>> const&, RCTComponentViewRegistry*, RCTMountingTransactionObserverCoordinator&, int) + 593 (RCTMountingManager.mm:71)\r\n6   intelexMobile                 \t       0x10516d6bb -[RCTMountingManager performTransaction:]::$_1::operator()(facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&) const + 75 (RCTMountingManager.mm:279)\r\n7   intelexMobile                 \t       0x10516d665 decltype(std::declval<-[RCTMountingManager performTransaction:]::$_1&>()(std::declval<facebook::react::MountingTransaction const&>(), std::declval<facebook::react::SurfaceTelemetry const&>())) std::__1::__invoke[abi:v15006]<-[RCTMountingManager performTransaction:]::$_1&, facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&>(-[RCTMountingManager performTransaction:]::$_1&, facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&) + 37 (invoke.h:394)\r\n8   intelexMobile                 \t       0x10516d615 void std::__1::__invoke_void_return_wrapper<void, true>::__call<-[RCTMountingManager performTransaction:]::$_1&, facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&>(-[RCTMountingManager performTransaction:]::$_1&, facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&) + 37 (invoke.h:480)\r\n9   intelexMobile                 \t       0x10516d5dd std::__1::__function::__alloc_func<-[RCTMountingManager performTransaction:]::$_1, std::__1::allocator<-[RCTMountingManager performTransaction:]::$_1>, void (facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&)>::operator()[abi:v15006](facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&) + 45 (function.h:185)\r\n10  intelexMobile                 \t       0x10516c5d9 std::__1::__function::__func<-[RCTMountingManager performTransaction:]::$_1, std::__1::allocator<-[RCTMountingManager performTransaction:]::$_1>, void (facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&)>::operator()(facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&) + 41 (function.h:359)\r\n11  intelexMobile                 \t       0x105015102 std::__1::__function::__value_func<void (facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&)>::operator()[abi:v15006](facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&) const + 66 (function.h:512)\r\n12  intelexMobile                 \t       0x105013b35 std::__1::function<void (facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&)>::operator()(facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&) const + 37 (function.h:1197)\r\n13  intelexMobile                 \t       0x105013949 facebook::react::TelemetryController::pullTransaction(std::__1::function<void (facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&)> const&, std::__1::function<void (facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&)> const&, std::__1::function<void (facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&)> const&) const + 377 (TelemetryController.cpp:39)\r\n14  intelexMobile                 \t       0x105167e69 -[RCTMountingManager performTransaction:] + 649 (RCTMountingManager.mm:271)\r\n15  intelexMobile                 \t       0x105167bba -[RCTMountingManager initiateTransaction:] + 394\r\n16  intelexMobile                 \t       0x10516753e __42-[RCTMountingManager scheduleTransaction:]_block_invoke + 350 (RCTMountingManager.mm:213)\r\n17  intelexMobile                 \t       0x104e5c66a __RCTExecuteOnMainQueue_block_invoke + 26 (RCTUtils.m:266)\r\n18  libdispatch.dylib             \t       0x117f12e40 _dispatch_call_block_and_release + 12\r\n19  libdispatch.dylib             \t       0x117f140d9 _dispatch_client_callout + 8\r\n20  libdispatch.dylib             \t       0x117f23b86 _dispatch_main_queue_drain + 1330\r\n21  libdispatch.dylib             \t       0x117f23646 _dispatch_main_queue_callback_4CF + 31\r\n22  CoreFoundation                \t       0x11b4086cc __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ + 9\r\n23  CoreFoundation                \t       0x11b402fbe __CFRunLoopRun + 2429\r\n24  CoreFoundation                \t       0x11b402264 CFRunLoopRunSpecific + 560\r\n25  GraphicsServices              \t       0x11f01324e GSEventRunModal + 139\r\n26  UIKitCore                     \t       0x12a7f27bf -[UIApplication _run] + 994\r\n27  UIKitCore                     \t       0x12a7f75de UIApplicationMain + 123\r\n28  intelexMobile                 \t       0x10499bbb8 main + 104 (main.m:7)\r\n29  dyld_sim                      \t       0x11209e384 start_sim + 10\r\n30  dyld                          \t       0x209c2241f start + 1903\r\n\r\nThread 0 Crashed::  Dispatch queue: com.apple.main-thread\r\n0   <translation info unavailable>\t       0x18acc266c ???\r\n1   <translation info unavailable>\t       0x18acc266c ???\r\n2   libsystem_platform.dylib      \t       0x11ab07603 _sigtramp + 51\r\n3   libsystem_c.dylib             \t       0x11834de58 abort + 130\r\n4   libc++abi.dylib               \t       0x1121ca5f2 abort_message + 241\r\n5   libc++abi.dylib               \t       0x1121bc7cb demangling_terminate_handler() + 267\r\n6   libobjc.A.dylib               \t       0x112b36182 _objc_terminate() + 96\r\n7   intelexMobile                 \t       0x1049a1345 CPPExceptionTerminate() + 277 (BSG_KSCrashSentry_CPPException.mm:137)\r\n8   libc++abi.dylib               \t       0x1121c9a4b std::__terminate(void (*)()) + 6\r\n9   libc++abi.dylib               \t       0x1121c9a06 std::terminate() + 54\r\n10  libdispatch.dylib             \t       0x117f140ed _dispatch_client_callout + 28\r\n11  libdispatch.dylib             \t       0x117f23b86 _dispatch_main_queue_drain + 1330\r\n12  libdispatch.dylib             \t       0x117f23646 _dispatch_main_queue_callback_4CF + 31\r\n13  CoreFoundation                \t       0x11b4086cc __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ + 9\r\n14  CoreFoundation                \t       0x11b402fbe __CFRunLoopRun + 2429\r\n15  CoreFoundation                \t       0x11b402264 CFRunLoopRunSpecific + 560\r\n16  GraphicsServices              \t       0x11f01324e GSEventRunModal + 139\r\n17  UIKitCore                     \t       0x12a7f27bf -[UIApplication _run] + 994\r\n18  UIKitCore                     \t       0x12a7f75de UIApplicationMain + 123\r\n19  intelexMobile                 \t       0x10499bbb8 main + 104 (main.m:7)\r\n20  dyld_sim                      \t       0x11209e384 start_sim + 10\r\n21  dyld                          \t       0x209c2241f start + 1903\r\n\r\nThread 1:: com.apple.rosetta.exceptionserver\r\n0   ???                           \t    0x7ff7fff95694 ???\r\n\r\nThread 2:: com.apple.uikit.eventfetch-thread\r\n0   ???                           \t       0x109a9f9a8 ???\r\n1   <translation info unavailable>\t       0x109b7554c ???\r\n2   libsystem_kernel.dylib        \t       0x11b01872d mach_msg2_internal + 78\r\n3   libsystem_kernel.dylib        \t       0x11b0115e4 mach_msg_overwrite + 692\r\n4   libsystem_kernel.dylib        \t       0x11b00a89a mach_msg + 19\r\n5   CoreFoundation                \t       0x11b408437 __CFRunLoopServiceMachPort + 145\r\n6   CoreFoundation                \t       0x11b402b7b __CFRunLoopRun + 1338\r\n7   CoreFoundation                \t       0x11b402264 CFRunLoopRunSpecific + 560\r\n8   Foundation                    \t       0x1191c7c8d -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 213\r\n9   Foundation                    \t       0x1191c7f04 -[NSRunLoop(NSRunLoop) runUntilDate:] + 72\r\n10  UIKitCore                     \t       0x12a8c6c29 -[UIEventFetcher threadMain] + 521\r\n11  Foundation                    \t       0x1191f13f4 __NSThread__start__ + 1009\r\n12  libsystem_pthread.dylib       \t       0x11b07b1d3 _pthread_start + 125\r\n13  libsystem_pthread.dylib       \t       0x11b076bd3 thread_start + 15\r\n\r\nThread 3:: KSCrash Exception Handler (Secondary)\r\n0   ???                           \t       0x109a9f9a8 ???\r\n1   <translation info unavailable>\t       0x109b7554c ???\r\n2   libsystem_kernel.dylib        \t       0x11b01872d mach_msg2_internal + 78\r\n3   libsystem_kernel.dylib        \t       0x11b02f9d0 thread_suspend + 84\r\n4   intelexMobile                 \t       0x1049a1e68 ksmachexc_i_handleExceptions + 136 (BSG_KSCrashSentry_MachException.c:222)\r\n5   libsystem_pthread.dylib       \t       0x11b07b1d3 _pthread_start + 125\r\n6   libsystem_pthread.dylib       \t       0x11b076bd3 thread_start + 15\r\n\r\nThread 4:: KSCrash Exception Handler (Primary)\r\n0   ???                           \t       0x109a9f9a8 ???\r\n1   <translation info unavailable>\t       0x109b7554c ???\r\n2   libsystem_kernel.dylib        \t       0x11b01872d mach_msg2_internal + 78\r\n3   libsystem_kernel.dylib        \t       0x11b0115e4 mach_msg_overwrite + 692\r\n4   libsystem_kernel.dylib        \t       0x11b00a89a mach_msg + 19\r\n5   intelexMobile                 \t       0x1049a1ea6 ksmachexc_i_handleExceptions + 198 (BSG_KSCrashSentry_MachException.c:229)\r\n6   libsystem_pthread.dylib       \t       0x11b07b1d3 _pthread_start + 125\r\n7   libsystem_pthread.dylib       \t       0x11b076bd3 thread_start + 15","This is an iOS crash, so more on my plate rather than @cortinico.\r\n\r\nCan you set up a repro for this crash so that I can investigate it properly?","@cipolleschi I was not able to add it to the reproducer app.\r\nIt happens when providing custom icon component for marker, like:\r\n\r\n```\r\n<Marker coordinate={{latitude: latitude, longitude: longitude}}>\r\n  <MyCustomMarkerView {...marker} \/>\r\n<\/Marker>\r\n```\r\n\r\nPlease check if updated log can help:\r\n\r\nException Type:  EXC_CRASH (SIGABRT)\r\nException Codes: 0x0000000000000000, 0x0000000000000000\r\nTriggered by Thread:  0\r\n\r\nLast Exception Backtrace:\r\n0   CoreFoundation                \t       0x11b9df77b __exceptionPreprocess + 226\r\n1   libobjc.A.dylib               \t       0x113086b73 objc_exception_throw + 48\r\n2   CoreFoundation                \t       0x11b9ee8c4 +[NSObject(NSObject) instanceMethodSignatureForSelector:] + 0\r\n3   UIKitCore                     \t       0x12ad61822 -[UIResponder doesNotRecognizeSelector:] + 264\r\n4   CoreFoundation                \t       0x11b9e3c66 ___forwarding___ + 1443\r\n5   CoreFoundation                \t       0x11b9e5e08 _CF_forwarding_prep_0 + 120\r\n6   intelexMobile                 \t       0x10595b99d -[AIRGoogleMapMarker removeReactSubview:] + 61 (AIRGoogleMapMarker.m:100)\r\n7   intelexMobile                 \t       0x1056cea6d -[RCTLegacyViewManagerInteropComponentView unmountChildComponentView:index:] + 157 (RCTLegacyViewManagerInteropComponentView.mm:163)\r\n8   intelexMobile                 \t       0x1056e752f RCTPerformMountInstructions(std::__1::vector<facebook::react::ShadowViewMutation, std::__1::allocator<facebook::react::ShadowViewMutation>> const&, RCTComponentViewRegistry*, RCTMountingTransactionObserverCoordinator&, int) + 1679 (RCTMountingManager.mm:104)\r\n9   intelexMobile                 \t       0x1056e6e8b -[RCTMountingManager performTransaction:]::$_1::operator()(facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&) const + 75 (RCTMountingManager.mm:279)\r\n10  intelexMobile                 \t       0x1056e6e35 decltype(std::declval<-[RCTMountingManager performTransaction:]::$_1&>()(std::declval<facebook::react::MountingTransaction const&>(), std::declval<facebook::react::SurfaceTelemetry const&>())) std::__1::__invoke[abi:v15006]<-[RCTMountingManager performTransaction:]::$_1&, facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&>(-[RCTMountingManager performTransaction:]::$_1&, facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&) + 37 (invoke.h:394)\r\n11  intelexMobile                 \t       0x1056e6de5 void std::__1::__invoke_void_return_wrapper<void, true>::__call<-[RCTMountingManager performTransaction:]::$_1&, facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&>(-[RCTMountingManager performTransaction:]::$_1&, facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&) + 37 (invoke.h:480)\r\n12  intelexMobile                 \t       0x1056e6dad std::__1::__function::__alloc_func<-[RCTMountingManager performTransaction:]::$_1, std::__1::allocator<-[RCTMountingManager performTransaction:]::$_1>, void (facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&)>::operator()[abi:v15006](facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&) + 45 (function.h:185)\r\n13  intelexMobile                 \t       0x1056e5da9 std::__1::__function::__func<-[RCTMountingManager performTransaction:]::$_1, std::__1::allocator<-[RCTMountingManager performTransaction:]::$_1>, void (facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&)>::operator()(facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&) + 41 (function.h:359)\r\n14  intelexMobile                 \t       0x10558dc32 std::__1::__function::__value_func<void (facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&)>::operator()[abi:v15006](facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&) const + 66 (function.h:512)\r\n15  intelexMobile                 \t       0x10558c665 std::__1::function<void (facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&)>::operator()(facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&) const + 37 (function.h:1197)\r\n16  intelexMobile                 \t       0x10558c479 facebook::react::TelemetryController::pullTransaction(std::__1::function<void (facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&)> const&, std::__1::function<void (facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&)> const&, std::__1::function<void (facebook::react::MountingTransaction const&, facebook::react::SurfaceTelemetry const&)> const&) const + 377 (TelemetryController.cpp:39)\r\n17  intelexMobile                 \t       0x1056e1639 -[RCTMountingManager performTransaction:] + 649 (RCTMountingManager.mm:271)\r\n18  intelexMobile                 \t       0x1056e138a -[RCTMountingManager initiateTransaction:] + 394\r\n19  intelexMobile                 \t       0x1056e0d0e __42-[RCTMountingManager scheduleTransaction:]_block_invoke + 350 (RCTMountingManager.mm:213)\r\n20  intelexMobile                 \t       0x1053d5d1a __RCTExecuteOnMainQueue_block_invoke + 26 (RCTUtils.m:266)\r\n21  libdispatch.dylib             \t       0x118447e40 _dispatch_call_block_and_release + 12\r\n22  libdispatch.dylib             \t       0x1184490d9 _dispatch_client_callout + 8\r\n23  libdispatch.dylib             \t       0x118458b86 _dispatch_main_queue_drain + 1330\r\n24  libdispatch.dylib             \t       0x118458646 _dispatch_main_queue_callback_4CF + 31\r\n25  CoreFoundation                \t       0x11b93d6cc __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ + 9\r\n26  CoreFoundation                \t       0x11b937fbe __CFRunLoopRun + 2429\r\n27  CoreFoundation                \t       0x11b937264 CFRunLoopRunSpecific + 560\r\n28  GraphicsServices              \t       0x11f54824e GSEventRunModal + 139\r\n29  UIKitCore                     \t       0x12ad277bf -[UIApplication _run] + 994\r\n30  UIKitCore                     \t       0x12ad2c5de UIApplicationMain + 123\r\n31  intelexMobile                 \t       0x104f1b198 main + 104 (main.m:7)\r\n32  dyld_sim                      \t       0x1125d3384 start_sim + 10\r\n33  dyld                          \t       0x20a27e41f start + 1903\r\n\r\nThread 0 Crashed::  Dispatch queue: com.apple.main-thread\r\n0   <translation info unavailable>\t       0x18bb22054 ???\r\n1   <translation info unavailable>\t       0x18bb22054 ???\r\n2   libsystem_platform.dylib      \t       0x11b03c603 _sigtramp + 51\r\n3   libsystem_c.dylib             \t       0x118882e58 abort + 130\r\n4   libc++abi.dylib               \t       0x1126ff5f2 abort_message + 241\r\n5   libc++abi.dylib               \t       0x1126f17cb demangling_terminate_handler() + 267\r\n6   libobjc.A.dylib               \t       0x11306b182 _objc_terminate() + 96\r\n7   intelexMobile                 \t       0x104f20925 CPPExceptionTerminate() + 277 (BSG_KSCrashSentry_CPPException.mm:137)\r\n8   libc++abi.dylib               \t       0x1126fea4b std::__terminate(void (*)()) + 6\r\n9   libc++abi.dylib               \t       0x1126fea06 std::terminate() + 54\r\n10  libdispatch.dylib             \t       0x1184490ed _dispatch_client_callout + 28\r\n11  libdispatch.dylib             \t       0x118458b86 _dispatch_main_queue_drain + 1330\r\n12  libdispatch.dylib             \t       0x118458646 _dispatch_main_queue_callback_4CF + 31\r\n13  CoreFoundation                \t       0x11b93d6cc __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ + 9\r\n14  CoreFoundation                \t       0x11b937fbe __CFRunLoopRun + 2429\r\n15  CoreFoundation                \t       0x11b937264 CFRunLoopRunSpecific + 560\r\n16  GraphicsServices              \t       0x11f54824e GSEventRunModal + 139\r\n17  UIKitCore                     \t       0x12ad277bf -[UIApplication _run] + 994\r\n18  UIKitCore                     \t       0x12ad2c5de UIApplicationMain + 123\r\n19  intelexMobile                 \t       0x104f1b198 main + 104 (main.m:7)\r\n20  dyld_sim                      \t       0x1125d3384 start_sim + 10\r\n21  dyld                          \t       0x20a27e41f start + 1903\r\n\r\nThread 1:: com.apple.rosetta.exceptionserver\r\n0   ???                           \t    0x7ff7ffd73694 ???\r\n\r\nThread 2:: com.apple.uikit.eventfetch-thread\r\n0   ???                           \t       0x109fd49a8 ???\r\n1   <translation info unavailable>\t       0x10a0aa584 ???\r\n2   libsystem_kernel.dylib        \t       0x11b54d72d mach_msg2_internal + 78\r\n3   libsystem_kernel.dylib        \t       0x11b5465e4 mach_msg_overwrite + 692\r\n4   libsystem_kernel.dylib        \t       0x11b53f89a mach_msg + 19\r\n5   CoreFoundation                \t       0x11b93d437 __CFRunLoopServiceMachPort + 145\r\n6   CoreFoundation                \t       0x11b937b7b __CFRunLoopRun + 1338\r\n7   CoreFoundation                \t       0x11b937264 CFRunLoopRunSpecific + 560\r\n8   Foundation                    \t       0x1196fcc8d -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 213\r\n9   Foundation                    \t       0x1196fcf04 -[NSRunLoop(NSRunLoop) runUntilDate:] + 72\r\n10  UIKitCore                     \t       0x12adfbc29 -[UIEventFetcher threadMain] + 521\r\n11  Foundation                    \t       0x1197263f4 __NSThread__start__ + 1009\r\n12  libsystem_pthread.dylib       \t       0x11b5b01d3 _pthread_start + 125\r\n13  libsystem_pthread.dylib       \t       0x11b5abbd3 thread_start + 15\r\n\r\nThread 3:: KSCrash Exception Handler (Secondary)\r\n0   ???                           \t       0x109fd49a8 ???\r\n1   <translation info unavailable>\t       0x10a0aa584 ???\r\n2   libsystem_kernel.dylib        \t       0x11b54d72d mach_msg2_internal + 78\r\n3   libsystem_kernel.dylib        \t       0x11b5649d0 thread_suspend + 84\r\n4   intelexMobile                 \t       0x104f21448 ksmachexc_i_handleExceptions + 136 (BSG_KSCrashSentry_MachException.c:222)\r\n5   libsystem_pthread.dylib       \t       0x11b5b01d3 _pthread_start + 125\r\n6   libsystem_pthread.dylib       \t       0x11b5abbd3 thread_start + 15\r\n\r\nThread 4:: KSCrash Exception Handler (Primary)\r\n0   ???                           \t       0x109fd49a8 ???\r\n1   <translation info unavailable>\t       0x10a0aa584 ???\r\n2   libsystem_kernel.dylib        \t       0x11b54d72d mach_msg2_internal + 78\r\n3   libsystem_kernel.dylib        \t       0x11b5465e4 mach_msg_overwrite + 692\r\n4   libsystem_kernel.dylib        \t       0x11b53f89a mach_msg + 19\r\n5   intelexMobile                 \t       0x104f21486 ksmachexc_i_handleExceptions + 198 (BSG_KSCrashSentry_MachException.c:229)\r\n6   libsystem_pthread.dylib       \t       0x11b5b01d3 _pthread_start + 125\r\n7   libsystem_pthread.dylib       \t       0x11b5abbd3 thread_start + 15\r\n\r\nThread 5:: com.bugsnag.app-hang-detector\r\n0   ???                           \t       0x109fd49a8 ???\r\n1   <translation info unavailable>\t       0x10ae42cec ???\r\n2   libdispatch.dylib             \t       0x11844959d _dispatch_sema4_timedwait + 72\r\n3   libdispatch.dylib             \t       0x118449a1c _dispatch_semaphore_wait_slow + 58\r\n4   intelexMobile                 \t       0x104f2ac4d -[BSGAppHangDetector detectAppHangs] + 269 (BSGAppHangDetector.m:133)\r\n5   intelexMobile                 \t       0x104f2ab35 DetectAppHangs + 21 (BSGAppHangDetector.m:216)\r\n6   libsystem_pthread.dylib       \t       0x11b5b01d3 _pthread_start + 125\r\n7   libsystem_pthread.dylib       \t       0x11b5abbd3 thread_start + 15\r\n\r\nThread 6:: com.apple.NSURLConnectionLoader\r\n0   ???                           \t       0x109fd49a8 ???\r\n1   <translation info unavailable>\t       0x10a0aa584 ???\r\n2   libsystem_kernel.dylib        \t       0x11b54d72d mach_msg2_internal + 78\r\n3   libsystem_kernel.dylib        \t       0x11b5465e4 mach_msg_overwrite + 692\r\n4   libsystem_kernel.dylib        \t       0x11b53f89a mach_msg + 19\r\n5   CoreFoundation                \t       0x11b93d437 __CFRunLoopServiceMachPort + 145\r\n6   CoreFoundation                \t       0x11b937b7b __CFRunLoopRun + 1338\r\n7   CoreFoundation                \t       0x11b937264 CFRunLoopRunSpecific + 560\r\n8   CFNetwork                     \t       0x113ff048e 0x113dc5000 + 2274446\r\n9   Foundation                    \t       0x1197263f4 __NSThread__start__ + 1009\r\n10  libsystem_pthread.dylib       \t       0x11b5b01d3 _pthread_start + 125\r\n11  libsystem_pthread.dylib       \t       0x11b5abbd3 thread_start + 15","have you added also `MyCustomMarker` to the interop layer?","@cipolleschi Actually there I am using createIconSetFromIcoMoon from react-native-vector-icons as\r\n\r\n```\r\nconst { createIconSetFromIcoMoon } = require('react-native-vector-icons');\r\nconst icoMoonConfig = require('..\/stylesheets\/ilxIconSelection.json');\r\n\r\nconst IXIcon = createIconSetFromIcoMoon(icoMoonConfig);\r\n\r\n<Marker coordinate={{latitude: latitude, longitude: longitude}}>\r\n  < IXIcon name='room' size={30}\/>\r\n<\/Marker>\r\n```\r\n\r\nThis IXIcon or createIconSetFromIcoMoon is not added to Interop layer (react-native.config.js)\r\n\r\n```\r\nmodule.exports = {\r\n  project: {\r\n    android: {\r\n      unstable_reactLegacyComponentNames: ['AIRMap', 'RNSketchCanvas', 'RNCamera'],\r\n    },\r\n    ios: {\r\n      unstable_reactLegacyComponentNames: ['AIRGoogleMap', 'AIRGoogleMapMarker', 'AIRMap', 'RNSketchCanvas', 'RNCamera'],\r\n    },\r\n  },\r\n  dependencies: {\r\n    'react-native-vector-icons': {\r\n      platforms: {\r\n        ios: null,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\n```","Hi, In my case getting crash when use View or any other component inside Marker. So custom Marker getting crash.","@meghvarse I suppose it's happening only when Fabric (New Architecture) is enabled, please confirm","@ravindraguptacapgemini Yes, it's only with new architecture.","@cortinico  have you got a chance to check the issue with adding Custom Marker on Map with Interop layer.","> The fix is here:\r\n> \r\n> * [Fabric Interop - Also normalize direct events\u00a0facebook\/react-native#38352](https:\/\/github.com\/facebook\/react-native\/pull\/38352)\r\n> \r\n> I'll have it reviewed and merged in the upcoming stable for 0.72\r\n\r\ni think that fix is not going to work since the event already is called `topOnMapReady`. I've tried it locally and i'm still getting the same error.","> i think that fix is not going to work since the event already is called `topOnMapReady`. I've tried it locally and i'm still getting the same error.\r\n\r\n@cortinico just checking if you can comment on this, as I also tried it locally but didn't work.","> > i think that fix is not going to work since the event already is called `topOnMapReady`. I've tried it locally and i'm still getting the same error.\r\n\r\nHow have you tried locally @sebastianMagnaldi ? The Android library is precompiled so your local fixes won't be applied. You'll have to setup a build-from-source or wait for the point release.","@cortinico Thank you so much for releasing RN 0.72.4, We had a chance to check with latest version if it resolves the issue. So yes, it resolves issue with the event 'tapOnMapReady' and other related events on android. But now it start throwing the other error as is the screenshot.\r\n\r\n![Screenshot_1692166896](https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/97147467\/3e0ff39d-5954-44a6-9995-30a5bbcf27b9)\r\n\r\nPlease have a look at it.","> @cortinico Thank you so much for releasing RN 0.72.4, We had a chance to check with latest version if it resolves the issue. So yes, it resolves issue with the event 'tapOnMapReady' and other related events on android. But now it start throwing the other error as is the screenshot.\r\n> \r\n> ![Screenshot_1692166896](https:\/\/user-images.githubusercontent.com\/97147467\/260918438-3e0ff39d-5954-44a6-9995-30a5bbcf27b9.png)\r\n> \r\n> Please have a look at it.\r\n\r\nThanks for the report @ravindraguptacapgemini \r\nDo you happen to have a repro so I can take a look at it?","@cortinico updated the reproducer app to 0.72.4, please check it from [here](https:\/\/github.com\/ravindraguptacapgemini\/reproducer-react-native-maps-events\/tree\/main)","@ravindraguptacapgemini thanks for the repro. There is a bug in the library code, specifically here: https:\/\/github.com\/react-native-maps\/react-native-maps\/blob\/673e9d21212442af9795cc21a17bf477623c458b\/android\/src\/main\/java\/com\/rnmaps\/maps\/MapView.java#L756-L758\r\n\r\nThe code should be updated as follows:\r\n\r\n```diff\r\n    } else {\r\n+     if (child.getParent() != null) {\r\n+       ((ViewGroup) child.getParent()).removeView(child);\r\n+     }\r\n      addView(child, index);\r\n    }\r\n```\r\n\r\nas apparently the library is attempting to attach the a child view that is already attached to another parent.","Following diligently... Thank you for all the hard work \ud83d\ude4f \r\n","Just fyi for everyone following this, Fabric \/ RN seems to have backward compatability for old arch components:\r\nhttps:\/\/reactnative.dev\/docs\/the-new-architecture\/backward-compatibility-fabric-components\r\n\r\nthis might be worth looking into incase some projects want to update to the new arch and blocked by this library.\r\n\r\n@Simon-TechForm do you need help with the migration? ","@cortinico after updating these lines, we are not able place the marker. \r\n\r\nAlso realised that after the recent changes in Interop layer in RN 0.72.4 the map is not moving the initial region passed to it.\r\n\r\nPlease see if you can further investigate and help on it.","@cortinico  Later found out that the actual issue was because of an UnimplementedView (AIRMapMarker), so I added this to the list of legacy components in 'react-native-config.js'. This has finally worked.\r\n\r\nThe current issue what I see is that the map is not moving to the correct specified region (moveCamera) on load, can you please check it, if this is due to the events.\r\n\r\n@Simon-TechForm can you please look into this issue. Also I request you to please test the library with Interop Layer, and provide steps to setup the library with New Architecture. Thanks.\r\n\r\n<img width=\"1103\" alt=\"Screenshot 2023-08-21 at 2 25 54 PM\" src=\"https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/97147467\/b1c4a417-7b99-4b2c-b628-e272da287fb4\">","It will be great to have \"steps to setup the library\". \r\n\r\nIf someone can provide a workable solution, please do it because to use Interop Layer I will need to do another RN version upgrade which causes more errors in the project. And I even don't know if Interop Layer will fix the react-native-maps.\r\n\r\nThanks!","@DreamakerDimas Currently with the below setting in 'react-native.config.js' I am able to build the library without any crash with Interop Layer (RN 0.72.4)\r\n\r\nmodule.exports = {\r\n  project: {\r\n    android: {\r\n      unstable_reactLegacyComponentNames: [\r\n        'AIRGoogleMap',\r\n        'AIRMap',\r\n        'AIRMapMarker',\r\n      ],\r\n    },\r\n    ios: {\r\n      unstable_reactLegacyComponentNames: [\r\n        'AIRGoogleMap',\r\n        'AIRGoogleMapMarker',\r\n        'AIRMap',\r\n      ],\r\n    },\r\n  },\r\n};\r\n\r\nCurrent known issues:\r\n1. Unable to use Marker as custom component\r\n2. Setting the region\/initialRegion does not adjust the map accordingly (Android only).\r\n3. onRegionChanged\/onRegionChangeComplete events are not working (Android Only.\r\n\r\n@Simon-TechForm Please help here, if you can.\r\n","@cortinico react-native-maps uses bubbling events for the change in map region, the event name is 'topChange' which does not fire actually. Can you please what's the issue behind this.\r\n<img width=\"898\" alt=\"Screenshot 2023-08-21 at 6 37 56 PM\" src=\"https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/97147467\/8d62ff38-4198-4217-81f7-d295edaccf29\">\r\n<img width=\"968\" alt=\"Screenshot 2023-08-21 at 6 38 52 PM\" src=\"https:\/\/github.com\/react-native-maps\/react-native-maps\/assets\/97147467\/505c8d64-4699-4dd2-9e8b-cbb5ffea5688\">\r\n","@cortinico Need your attention here, please.","@ravindraguptacapgemini: Please, stop pinging us continuously. We are dedicating already all the time that we can to these issues, but they are not our only priority. \r\n\r\nThe New Architecture is experimental: you should NOT use it in your production application already. We appreciate that you and the company you work for are experimenting with it and providing feedback, we really value it and we also shown that we are acting upon it. \r\n\r\nContinuously pinging us will not make us faster and, in any case, the fix you are requiring can't arrive before the release crew prepare another release and you are not helping us with all this noise. ","@cipolleschi I feel sorry now, I was quite exhausted with the issue for quite sometime. You all are doing fantastic, I really appreciate. Will try to keep the pings at the least now.","any update  Android  maker is not displayed \r\nmodule.exports = {\r\nproject: {\r\nandroid: {\r\nunstable_reactLegacyComponentNames: [\r\n'AIRGoogleMap',\r\n'AIRMap',\r\n'AIRMapMarker',\r\n],\r\n},\r\nios: {\r\nunstable_reactLegacyComponentNames: [\r\n'AIRGoogleMap',\r\n'AIRGoogleMapMarker',\r\n'AIRMap',\r\n],\r\n},\r\n},\r\n};","This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. If the issue remains relevant, simply comment `Still relevant` and the issue will remain open. Thank you for your contributions.","Still relevant","@ravindraguptacapgemini What did you finally end up doing? Not using the control all together?","Hi there! In 0.73, we released an improved version of the Interop Layers.\r\nCould you try using `react-native-maps` with them, by registering all the components you are using?","@cipolleschi I used RN  0.73 and react-native-map new version but with newArchEnabled=true getting `AIRMap is not febric compatible` ","@forever-sumit i think you didn't enable the interop layer \r\n\r\nexample: https:\/\/github.com\/react-native-maps\/react-native-maps\/issues\/4383#issuecomment-1686095401","@chr314 I am using RN: 0.73.2 and implemented \r\n\r\n> react-native.config.js at root level\r\n\r\n```\r\nmodule.exports = {\r\n  project: {\r\n    android: {\r\n      unstable_reactLegacyComponentNames: [\r\n        'AIRGoogleMap',\r\n        'AIRMap',\r\n        'AIRMapMarker',\r\n      ],\r\n    },\r\n    ios: {\r\n      unstable_reactLegacyComponentNames: [\r\n        'AIRGoogleMap',\r\n        'AIRGoogleMapMarker',\r\n        'AIRMap',\r\n      ],\r\n    },\r\n  },\r\n};\r\n```\r\n\r\nBut still getting same messsage `AIRMAP is not febric competible`","Any update here?","> Hi there! In 0.73, we released an improved version of the Interop Layers. Could you try using `react-native-maps` with them, by registering all the components you are using?\r\n\r\nIts not working, still getting `AIRMAP is not febric competible` with RN `0.73.2`","You need to register the `AIRMap` component into the interop layer, following these steps: https:\/\/github.com\/reactwg\/react-native-new-architecture\/discussions\/135\r\n\r\nIt doesn't work out-of-the-box. Automatic Interop layers should arrive in 0.74.\r\n\r\nAlternatively, can you provide a reproducer using [this template](https:\/\/github.com\/react-native-community\/reproducer-react-native)? \ud83d\ude4f "],"labels":["bug"]}]
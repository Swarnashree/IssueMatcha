[{"issue_title": "[NOT READY FOR REVIEW] optimizing number of buffers sent to scheduler for foreach", "tags": ["Python", "GPU", "Deep Learning", "Neural Networks", "Tensors", "Autograd", "C++", "Cython", "Numba", "NumPy", "SciPy", "Jetson", "Docker", "Documentation", "CMake", "Sphinx", "BSD-style"], "summary": "PyTorch is a Python package that provides tensor computation with strong GPU acceleration and deep neural networks built on a tape-based autograd system. It is a GPU-ready tensor library and offers dynamic neural networks through tape-based autograd. PyTorch is built to be deeply integrated into Python and offers a Pythonic experience. It is designed to be intuitive, linear in thought, and easy to use, with minimal framework overhead and efficient memory usage. Writing new neural network modules or interfacing with PyTorch's Tensor API is straightforward."}, {"issue_title": "[dynamo] Suppress warning about torch.autograd.Function()", "tags": ["Python", "GPU", "Deep Learning", "Neural Networks", "Tensors", "Autograd", "C++", "Cython", "Numba", "NumPy", "SciPy", "Caffe2", "Jetson", "Docker", "Sphinx", "Sphinx-Themes", "BSD-License"], "summary": "PyTorch is a Python package that provides tensor computation with strong GPU acceleration and deep neural networks built on a tape-based autograd system. It is a GPU-ready tensor library, with a unique way of building neural networks using a tape-based autograd system. It is deeply integrated into Python, providing a wide variety of tensor routines and neural network modules. PyTorch is designed to be intuitive, linear in thought, and easy to use, with minimal framework overhead and efficient memory usage."}, {"issue_title": "[dynamo] Support __next__ on UserDefinedObjectVariable", "tags": ["Python", "GPU", "Deep Learning", "Neural Networks", "Tensors", "Autograd", "C++", "Cython", "NumPy", "SciPy", "Jetson", "NVIDIA", "ROCm", "AMD", "CMake", "Docker", "Sphinx", "Sphinx-Themes"], "summary": "PyTorch is a Python package that provides tensor computation with strong GPU acceleration and deep neural networks built on a tape-based autograd system. It is a GPU-ready tensor library and offers dynamic neural networks through tape-based autograd. PyTorch is designed to be deeply integrated with Python, providing a Python-first experience and imperative experiences. It is fast and lean, with minimal framework overhead and efficient memory usage. PyTorch allows for easy extensions without pain, with straightforward writing of new neural network modules or interfacing with PyTorch's Tensor API."}, {"issue_title": "[dynamo] Support hasattr on UserDefinedClassVariable", "tags": ["Python", "GPU", "Deep Learning", "Neural Networks", "Tensors", "Autograd", "C++", "Cython", "NumPy", "SciPy", "Data Loading", "Hogwild Training", "Jetson Platforms", "Docker", "Documentation", "CMake", "ROCm"], "summary": "PyTorch is a Python package that provides two main features: tensor computation with strong GPU acceleration and deep neural networks built on a tape-based autograd system. It is a GPU-ready tensor library and offers dynamic neural networks using tape-based autograd. PyTorch is deeply integrated with Python, providing a Python-first experience, and is designed to be intuitive and easy to use. It is fast and lean, with minimal framework overhead and efficient memory usage. Extensions can be written in Python or C/C++ with minimal boilerplate."}, {"issue_title": "[AOTInductor] Support use_runtime_constant_folding for CPU.", "tags": ["PyTorch", "AOTInductor", "CPU", "GPU", "tape-based autograd", "cpp fusions", "code generation", "memory management", "testing", "USE_CUDA flags", "config", "Differential Revision", "reviewed by", "GitHub Issues", "Python package", "NumPy", "SciPy", "Cython", "Continuous Integration", "hud.pytorch.org", "trunk health"], "summary": "PyTorch is a Python package that provides tensor computation with strong GPU acceleration and deep neural networks built on a tape-based autograd system. It is a GPU-ready tensor library, with a unique way of building neural networks using a tape-based autograd system. PyTorch is deeply integrated into Python, providing a Pythonic and intuitive experience, and is designed to be efficient in terms of memory usage and speed. It also provides a convenient extension API for writing new neural network layers in C/C++."}]
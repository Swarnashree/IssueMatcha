[{"title":"Improper use of PluggableDevice data pointer","body":"### Issue type\n\nBug\n\n### Have you reproduced the bug with TensorFlow Nightly?\n\nYes\n\n### Source\n\nbinary\n\n### TensorFlow version\n\n2.15.0\n\n### Custom code\n\nYes\n\n### OS platform and distribution\n\nLinux Arch\n\n### Mobile device\n\n_No response_\n\n### Python version\n\n3.11.8\n\n### Bazel version\n\n_No response_\n\n### GCC\/compiler version\n\n_No response_\n\n### CUDA\/cuDNN version\n\n_No response_\n\n### GPU model and memory\n\n_No response_\n\n### Current behavior?\n\nTensorListFromTensor op assumes that the data pointer from a PluggableDevice tensor is to virtual address space and can add an offset to it.\r\nhttps:\/\/github.com\/tensorflow\/tensorflow\/blob\/39cb3719012c249ba40bffc4cebaad66311a4669\/tensorflow\/core\/kernels\/list_kernels.h#L805-L821\r\n\r\nThe assumption that all PluggableDevices set the data pointer of Tensor to be virtual address space is false.\r\nhttps:\/\/github.com\/tensorflow\/tensorflow\/blob\/39cb3719012c249ba40bffc4cebaad66311a4669\/tensorflow\/c\/experimental\/stream_executor\/stream_executor.h#L144-L146\r\n\r\nUnfortunately, this is not the only occurrence of a bug like this. I have seen similar issues with distributed training offsetting PluggableDevice data pointers on copy as well but I have not taken the time to look into it yet.\n\n### Standalone code to reproduce the issue\n\n```shell\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\ntf.debugging.set_log_device_placement(True)\r\ntf.config.run_functions_eagerly(False)\r\na = np.zeros((8, 1), dtype=np.float32)\r\n\r\nwith tf.device(\"MY_DEVICE:0\"):\r\n    b = tf.raw_ops.TensorListFromTensor(tensor=a, element_shape=[1])\r\n\r\nprint(b)\n```\n\n\n### Relevant log output\n\n_No response_","comments":[],"labels":["type:bug"],"number":64372},{"title":"tflite-support not compatible with python 3.11","body":"### Issue type\n\nBuild\/Install\n\n### Have you reproduced the bug with TensorFlow Nightly?\n\nNo\n\n### Source\n\nsource\n\n### TensorFlow version\n\ntflite-support 0.4.4\n\n### Custom code\n\nNo\n\n### OS platform and distribution\n\nRaspberry Pi OS Bullseye 64 bit\n\n### Mobile device\n\nRaspberry Pi\n\n### Python version\n\n3.11\n\n### Bazel version\n\n_No response_\n\n### GCC\/compiler version\n\n_No response_\n\n### CUDA\/cuDNN version\n\n_No response_\n\n### GPU model and memory\n\n_No response_\n\n### Current behavior?\n\nI am unable to install tflite-support into my environment that is using python 3.11.  \r\nInstall method of pip3 install tflite-support\r\n\r\nI also tried to download src and build, but I'm still getting the same errors when I try to install\r\n```\r\ngit clone https:\/\/github.com\/tensorflow\/tflite-support.git\r\ncd tflite-support\r\npip install .\r\n```\n\n### Standalone code to reproduce the issue\n\n```shell\nusing python 3.11 install via pip\r\n pip3 install tflite-support\n```\n\n\n### Relevant log output\n\n_No response_","comments":[],"labels":["type:build\/install"],"number":64365},{"title":"XNNPACK is not supported in Linux armv7-a when compile source code","body":"Hi, I followed the instructions in the website:https:\/\/tensorflow.google.cn\/lite\/guide\/build_cmake_arm to cross compile and find a question XNNPACK is not supported in Linux armv7-a when compile source code. \r\n\r\n```\r\ncurl -LO https:\/\/storage.googleapis.com\/mirror.tensorflow.org\/developer.arm.com\/media\/Files\/downloads\/gnu-a\/8.3-2019.03\/binrel\/gcc-arm-8.3-2019.03-x86_64-arm-linux-gnueabihf.tar.xz\r\nmkdir -p ${HOME}\/toolchains\r\ntar xvf gcc-arm-8.3-2019.03-x86_64-arm-linux-gnueabihf.tar.xz -C ${HOME}\/toolchains\r\n```\r\n\r\n```\r\nARMCC_FLAGS=\"-march=armv7-a -mfpu=neon-vfpv4 -funsafe-math-optimizations -mfp16-format=ieee\"\r\nARMCC_PREFIX=${HOME}\/toolchains\/gcc-arm-8.3-2019.03-x86_64-arm-linux-gnueabihf\/bin\/arm-linux-gnueabihf-\r\ncmake -DCMAKE_C_COMPILER=${ARMCC_PREFIX}gcc \\\r\n  -DCMAKE_CXX_COMPILER=${ARMCC_PREFIX}g++ \\\r\n  -DCMAKE_C_FLAGS=\"${ARMCC_FLAGS}\" \\\r\n  -DCMAKE_CXX_FLAGS=\"${ARMCC_FLAGS}\" \\\r\n  -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \\\r\n  -DTFLITE_ENABLE_XNNPACK=ON  \\\r\n  -DCMAKE_SYSTEM_NAME=Linux \\\r\n  -DCMAKE_SYSTEM_PROCESSOR=armv7 \\\r\n  ..\/tensorflow\/lite\/\r\nmake -j8\r\n```\r\n**part error log:**\r\n`\/tensorflow\/build_arm\/xnnpack\/src\/qs8-qc8w-igemm\/gen\/qs8-qc8w-igemm-2x2c4-minmax-fp32-armsimd32.c:80:15: error: unknown type name \u2018int16x2_t\u2019\r\n         const int16x2_t va1c02 = __sxtb16(va1);\r\n`\r\n","comments":[],"labels":["TFLiteConverter"],"number":64358},{"title":"how to solve this error ? : AttributeError: module 'keras._tf_keras.keras.layers' has no attribute 'experimental' ","body":"### Issue type\n\nBug\n\n### Have you reproduced the bug with TensorFlow Nightly?\n\nYes\n\n### Source\n\nsource\n\n### TensorFlow version\n\ntf 2.15.0\n\n### Custom code\n\nYes\n\n### OS platform and distribution\n\n_No response_\n\n### Mobile device\n\n_No response_\n\n### Python version\n\n_No response_\n\n### Bazel version\n\n_No response_\n\n### GCC\/compiler version\n\n_No response_\n\n### CUDA\/cuDNN version\n\n_No response_\n\n### GPU model and memory\n\n_No response_\n\n### Current behavior?\n\nGot this Error while installing object detection tensorflow api.\r\n\r\ncommand :\r\n!python object_detection\/builders\/model_builder_tf2_test.py\n\n### Standalone code to reproduce the issue\n\n```shell\n2024-03-23 08:19:24.008197: W tensorflow\/compiler\/tf2tensorrt\/utils\/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT\r\nTraceback (most recent call last):\r\n  File \"\/content\/tf_CrimeDetection\/models\/research\/object_detection\/builders\/model_builder_tf2_test.py\", line 24, in <module>\r\n    from object_detection.builders import model_builder\r\n  File \"\/usr\/local\/lib\/python3.10\/dist-packages\/object_detection\/builders\/model_builder.py\", line 26, in <module>\r\n    from object_detection.builders import hyperparams_builder\r\n  File \"\/usr\/local\/lib\/python3.10\/dist-packages\/object_detection\/builders\/hyperparams_builder.py\", line 27, in <module>\r\n    from object_detection.core import freezable_sync_batch_norm\r\n  File \"\/usr\/local\/lib\/python3.10\/dist-packages\/object_detection\/core\/freezable_sync_batch_norm.py\", line 20, in <module>\r\n    class FreezableSyncBatchNorm(tf.keras.layers.experimental.SyncBatchNormalization\r\nAttributeError: module 'keras._tf_keras.keras.layers' has no attribute 'experimental'\n```\n\n\n### Relevant log output\n\n_No response_","comments":["Are you satisfied with the resolution of your issue?\n<a href=\"https:\/\/docs.google.com\/forms\/d\/e\/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew\/viewform?entry.85265664=Yes&entry.2137816233=https:\/\/github.com\/tensorflow\/tensorflow\/issues\/64349\">Yes<\/a>\n<a href=\"https:\/\/docs.google.com\/forms\/d\/e\/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew\/viewform?entry.85265664=No&entry.2137816233=https:\/\/github.com\/tensorflow\/tensorflow\/issues\/64349\">No<\/a>\n","after installing tf.nightly same issue is occuring.\r\n\r\n```\r\nfrom tensorflow.keras.layers.experimental import einsum\r\nprint(\"Done\")\r\n```\r\n\r\nModuleNotFoundError                       Traceback (most recent call last)\r\n[<ipython-input-3-fd5e9e3ce5fb>](https:\/\/localhost:8080\/#) in <cell line: 1>()\r\n----> 1 from tensorflow.keras.layers.experimental import einsum\r\n      2 print(\"Done\")\r\n\r\nModuleNotFoundError: No module named 'tensorflow.keras.layers.experimental'\r\n\r\n> How to reslove this.","workaround is to limit the tensorflow version and comment out keras from object detection>packages>tf2>setup.py as:\r\n```\r\n 'tf-models-official >=2.5.1, <2.16.0',\r\n    'tensorflow_io',\r\n    #'keras',\r\n```\r\n"],"labels":["type:bug"],"number":64349},{"title":"Fail to build from source: API rate limit exceeded for 216.228.127.129","body":"### Issue type\r\n\r\nBuild\/Install\r\n\r\n### Have you reproduced the bug with TensorFlow Nightly?\r\n\r\nYes\r\n\r\n### Source\r\n\r\nsource\r\n\r\n### TensorFlow version\r\n\r\n2.13.0\r\n\r\n### Custom code\r\n\r\nNo\r\n\r\n### OS platform and distribution\r\n\r\nlinux\r\n\r\n### Mobile device\r\n\r\n_No response_\r\n\r\n### Python version\r\n\r\n3.9\r\n\r\n### Bazel version\r\n\r\n5.3.0\r\n\r\n### GCC\/compiler version\r\n\r\n_No response_\r\n\r\n### CUDA\/cuDNN version\r\n\r\n_No response_\r\n\r\n### GPU model and memory\r\n\r\n_No response_\r\n\r\n### Current behavior?\r\n\r\nComplete the build without an issue (now it is intermittent because of the root cause below)\r\n\r\nTHE ACTUAL PROBLEM:\r\n\r\nThe problem is the `curl` request [here](https:\/\/github.com\/tensorflow\/text\/blob\/f0f675cb1e24cfd0e42aa95f3136b7aee3c91bc6\/oss_scripts\/prepare_tf_dep.sh#L38). The API request response is the following:\r\n```\r\n$> curl -s https:\/\/api.github.com\/repos\/tensorflow\/tensorflow\/commits\/1cb1a030                                                                           \r\n{\"message\":\"API rate limit exceeded for 216.228.127.129. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\",\"documentation_url\":\"https:\/\/docs.github.com\/rest\/overview\/resources-in-the-rest-api#rate-limiting\"}\r\n```\r\n\r\nNeed a more reliable way to get commit_slug, or IMHO it is better to use commit as a reference.\r\n\r\n### Standalone code to reproduce the issue\r\n\r\n```shell\r\n$> pip install tensorflow_datasets==4.9.2 auditwheel tensorflow==2.13.0\r\n$> git clone https:\/\/github.com\/tensorflow\/text.git \/opt\/tensorflow-text\r\n$> cd \/opt\/tensorflow-text\r\n$> git checkout 917a681d7220ebf9b62a08b6f9ce7b7db886ddef\r\n$> git submodule update --init --recursive\r\n$> .\/oss_scripts\/run_build.sh\r\n```\r\n\r\n\r\n### Relevant log output\r\n\r\n```shell\r\n+ .\/oss_scripts\/run_build.sh\r\n++ uname -s\r\n++ tr A-Z a-z\r\n+ osname=linux\r\n+ [[ linux == \\d\\a\\r\\w\\i\\n ]]\r\n+ source oss_scripts\/configure.sh\r\n+++ uname -s\r\n+++ tr A-Z a-z\r\n++ osname=linux\r\n++ echo linux\r\nlinux\r\n++ '[' -e .bazelrc ']'\r\n+++ pip show tensorflow\r\nUsing installed tensorflow.\r\n++ [[ Name: tensorflow\r\nVersion: 2.13.0\r\nSummary: TensorFlow is an open source machine learning framework for everyone.\r\nHome-page: https:\/\/www.tensorflow.org\/\r\nAuthor: Google Inc.\r\nAuthor-email: packages@tensorflow.org\r\nLicense: Apache 2.0\r\nLocation: \/usr\/local\/lib\/python3.10\/dist-packages\r\nRequires: tensorflow-cpu-aws\r\nRequired-by:  == *tensorflow* ]]\r\n++ echo 'Using installed tensorflow.'\r\n++ is_windows\r\n++ [[ linux =~ msys_nt*|mingw*|cygwin*|uwin* ]]\r\n++ curl https:\/\/raw.githubusercontent.com\/tensorflow\/tensorflow\/r2.13\/.bazelversion -o .bazelversion\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100    85  100    85    0     0    992      0 --:--:-- --:--:-- --:--:--  1000\r\n++ curl https:\/\/raw.githubusercontent.com\/tensorflow\/tensorflow\/r2.13\/.bazelrc -o .bazelrc\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100 36653  100 36653    0     0   372k      0 --:--:-- --:--:-- --:--:--  376k\r\n++ sed -i -e 's\/build --noincompatible_remove_legacy_whole_archive\/\/' .bazelrc\r\n++ write_to_bazelrc 'build:manylinux2010 --config=release_cpu_linux'\r\n++ echo 'build:manylinux2010 --config=release_cpu_linux'\r\n++ write_to_bazelrc 'build:manylinux2014 --config=release_cpu_linux'\r\n++ echo 'build:manylinux2014 --config=release_cpu_linux'\r\n++ which python3\r\n++ grep -q python3\r\n++ installed_python=python3\r\n++ TF_CFLAGS=($($installed_python -c \"import tensorflow as tf; print(' '.join(tf.sysconfig.get_compile_flags()))\" | awk '{print $1}'))\r\n+++ python3 -c 'import tensorflow as tf; print('\\'' '\\''.join(tf.sysconfig.get_compile_flags()))'\r\n+++ awk '{print $1}'\r\n++ TF_LFLAGS=($($installed_python -c \"import tensorflow as tf; print(' '.join(tf.sysconfig.get_link_flags()))\" | awk '{print $1}'))\r\n+++ python3 -c 'import tensorflow as tf; print('\\'' '\\''.join(tf.sysconfig.get_link_flags()))'\r\n+++ awk '{print $1}'\r\n++ TF_LFLAGS_2=($($installed_python -c \"import tensorflow as tf; print(' '.join(tf.sysconfig.get_link_flags()))\" | awk '{print $2}'))\r\n+++ python3 -c 'import tensorflow as tf; print('\\'' '\\''.join(tf.sysconfig.get_link_flags()))'\r\n+++ awk '{print $2}'\r\n+++ python3 -c 'import tensorflow as tf; print(tf.sysconfig.CXX11_ABI_FLAG)'\r\n++ TF_ABIFLAG=1\r\n++ HEADER_DIR=\/usr\/local\/lib\/python3.10\/dist-packages\/tensorflow\/include\r\n++ SHARED_LIBRARY_DIR=\/usr\/local\/lib\/python3.10\/dist-packages\/tensorflow\r\n+++ echo -l:libtensorflow_framework.so.2\r\n+++ rev\r\n+++ cut -d: -f1\r\n+++ rev\r\n++ SHARED_LIBRARY_NAME=libtensorflow_framework.so.2\r\n++ is_macos\r\n++ [[ linux == \\d\\a\\r\\w\\i\\n ]]\r\n++ is_windows\r\n++ [[ linux =~ msys_nt*|mingw*|cygwin*|uwin* ]]\r\n++ export LD_LIBRARY_PATH=\/opt\/amazon\/efa\/lib:\/usr\/local\/nvidia\/lib:\/usr\/local\/nvidia\/lib64:\/usr\/local\/lib\/python3.10\/dist-packages\/tensorflow\r\n++ LD_LIBRARY_PATH=\/opt\/amazon\/efa\/lib:\/usr\/local\/nvidia\/lib:\/usr\/local\/nvidia\/lib64:\/usr\/local\/lib\/python3.10\/dist-packages\/tensorflow\r\n++ write_action_env_to_bazelrc TF_HEADER_DIR \/usr\/local\/lib\/python3.10\/dist-packages\/tensorflow\/include\r\n++ write_to_bazelrc 'build --action_env TF_HEADER_DIR=\"\/usr\/local\/lib\/python3.10\/dist-packages\/tensorflow\/include\"'\r\n++ echo 'build --action_env TF_HEADER_DIR=\"\/usr\/local\/lib\/python3.10\/dist-packages\/tensorflow\/include\"'\r\n++ write_action_env_to_bazelrc TF_SHARED_LIBRARY_DIR \/usr\/local\/lib\/python3.10\/dist-packages\/tensorflow\r\n++ write_to_bazelrc 'build --action_env TF_SHARED_LIBRARY_DIR=\"\/usr\/local\/lib\/python3.10\/dist-packages\/tensorflow\"'\r\n++ echo 'build --action_env TF_SHARED_LIBRARY_DIR=\"\/usr\/local\/lib\/python3.10\/dist-packages\/tensorflow\"'\r\n++ write_action_env_to_bazelrc TF_SHARED_LIBRARY_NAME libtensorflow_framework.so.2\r\n++ write_to_bazelrc 'build --action_env TF_SHARED_LIBRARY_NAME=\"libtensorflow_framework.so.2\"'\r\n++ echo 'build --action_env TF_SHARED_LIBRARY_NAME=\"libtensorflow_framework.so.2\"'\r\n++ write_action_env_to_bazelrc TF_CXX11_ABI_FLAG 1\r\n++ write_to_bazelrc 'build --action_env TF_CXX11_ABI_FLAG=\"1\"'\r\n++ echo 'build --action_env TF_CXX11_ABI_FLAG=\"1\"'\r\n++ bazel version\r\n++ grep label\r\n++ sed -e 's\/.*: \/\/'\r\n2024\/03\/22 17:33:39 Downloading https:\/\/releases.bazel.build\/5.3.0\/release\/bazel-5.3.0-linux-arm64...\r\nExtracting Bazel installation...\r\nStarting local Bazel server and connecting to it...\r\n+ installed_bazel_version=5.3.0\r\n++ head -n 1 .bazelversion\r\n+ tf_bazel_version=5.3.0\r\n+ '[' 5.3.0 '!=' 5.3.0 ']'\r\n+ [[ linux != \\d\\a\\r\\w\\i\\n ]]\r\n+ source oss_scripts\/prepare_tf_dep.sh\r\n++ set -ex\r\n++ which python3\r\n++ grep -q python3\r\n++ installed_python=python3\r\n++ ext=\r\n+++ uname -s\r\n+++ tr A-Z a-z\r\n++ osname=linux\r\n++ [[ linux == \\d\\a\\r\\w\\i\\n ]]\r\n+++ python3 -c 'import tensorflow as tf; print(tf.__version__)'\r\n++ tf_version=2.13.0\r\n++ echo 2.13.0\r\n2.13.0\r\n++ sed -i 's\/project_version = '\\''REPLACE_ME'\\''\/project_version = '\\''2.13.0'\\''\/' oss_scripts\/pip_package\/setup.nightly.py\r\n++ sed -i 's\/__version__ = .*$\/__version__ = \"2.13.0\"\/' tensorflow_text\/__init__.py\r\n+++ python3 -c 'import tensorflow as tf; print(tf.__git_version__)'\r\n+++ tail -1\r\n++ short_commit_sha=v2.13.0-0-g1cb1a030\r\n++ [[ linux == \\d\\a\\r\\w\\i\\n ]]\r\n+++ echo v2.13.0-0-g1cb1a030\r\n+++ grep -oP '(?<=-g)[0-9a-f]*$'\r\n++ short_commit_sha=1cb1a030\r\n+++ curl -s https:\/\/api.github.com\/repos\/tensorflow\/tensorflow\/commits\/1cb1a030\r\n+++ grep sha\r\n+++ head -n 1\r\n+++ cut -d '\"' -f 4\r\n++ commit_sha=\r\n++ sed -E -i 's\/strip_prefix = \"tensorflow-2.+\",\/strip_prefix = \"tensorflow-\",\/' WORKSPACE\r\n++ sed -E -i 's|\"https:\/\/github.com\/tensorflow\/tensorflow\/archive\/v.+\\.zip\"|\"https:\/\/github.com\/tensorflow\/tensorflow\/archive\/.zip\"|' WORKSPACE\r\n+++ grep -A 1 -e 'strip_prefix.*tensorflow-' WORKSPACE\r\n+++ tail -1\r\n+++ awk -F '\"' '{print $2}'\r\n++ prev_shasum=447cdb65c80c86d6c6cf1388684f157612392723eaea832e6392d219098b49de\r\n++ sed -i 's\/sha256 = \"447cdb65c80c86d6c6cf1388684f157612392723eaea832e6392d219098b49de\",\/\/' WORKSPACE\r\n+ bazel build --enable_runfiles oss_scripts\/pip_package:build_pip_package\r\nINFO: Options provided by the client:\r\n  Inherited 'common' options: --isatty=0 --terminal_columns=80\r\nINFO: Reading rc options for 'build' from \/opt\/tensorflow-text\/.bazelrc:\r\n  Inherited 'common' options: --experimental_repo_remote_exec\r\nINFO: Reading rc options for 'build' from \/opt\/tensorflow-text\/.bazelrc:\r\n  'build' options: --define framework_shared_object=true --define tsl_protobuf_header_only=true --define=use_fast_cpp_protos=true --define=allow_oversize_protos=true --spawn_strategy=standalone -c opt --announce_rc --define=grpc_no_ares=true --enable_platform_specific_config --define=with_xla_support=true --config=short_logs --config=v2 --define=no_aws_support=true --define=no_hdfs_support=true --experimental_cc_shared_library --experimental_link_static_libraries_once=false --incompatible_enforce_config_setting_visibility --deleted_packages=tensorflow\/compiler\/mlir\/tfrt,tensorflow\/compiler\/mlir\/tfrt\/benchmarks,tensorflow\/compiler\/mlir\/tfrt\/jit\/python_binding,tensorflow\/compiler\/mlir\/tfrt\/jit\/transforms,tensorflow\/compiler\/mlir\/tfrt\/python_tests,tensorflow\/compiler\/mlir\/tfrt\/tests,tensorflow\/compiler\/mlir\/tfrt\/tests\/ir,tensorflow\/compiler\/mlir\/tfrt\/tests\/analysis,tensorflow\/compiler\/mlir\/tfrt\/tests\/jit,tensorflow\/compiler\/mlir\/tfrt\/tests\/lhlo_to_tfrt,tensorflow\/compiler\/mlir\/tfrt\/tests\/lhlo_to_jitrt,tensorflow\/compiler\/mlir\/tfrt\/tests\/tf_to_corert,tensorflow\/compiler\/mlir\/tfrt\/tests\/tf_to_tfrt_data,tensorflow\/compiler\/mlir\/tfrt\/tests\/saved_model,tensorflow\/compiler\/mlir\/tfrt\/transforms\/lhlo_gpu_to_tfrt_gpu,tensorflow\/core\/runtime_fallback,tensorflow\/core\/runtime_fallback\/conversion,tensorflow\/core\/runtime_fallback\/kernel,tensorflow\/core\/runtime_fallback\/opdefs,tensorflow\/core\/runtime_fallback\/runtime,tensorflow\/core\/runtime_fallback\/util,tensorflow\/core\/tfrt\/eager,tensorflow\/core\/tfrt\/eager\/backends\/cpu,tensorflow\/core\/tfrt\/eager\/backends\/gpu,tensorflow\/core\/tfrt\/eager\/core_runtime,tensorflow\/core\/tfrt\/eager\/cpp_tests\/core_runtime,tensorflow\/core\/tfrt\/gpu,tensorflow\/core\/tfrt\/run_handler_thread_pool,tensorflow\/core\/tfrt\/runtime,tensorflow\/core\/tfrt\/saved_model,tensorflow\/core\/tfrt\/graph_executor,tensorflow\/core\/tfrt\/saved_model\/tests,tensorflow\/core\/tfrt\/tpu,tensorflow\/core\/tfrt\/utils,tensorflow\/core\/tfrt\/utils\/debug --action_env TF_HEADER_DIR=\/usr\/local\/lib\/python3.10\/dist-packages\/tensorflow\/include --action_env TF_SHARED_LIBRARY_DIR=\/usr\/local\/lib\/python3.10\/dist-packages\/tensorflow --action_env TF_SHARED_LIBRARY_NAME=libtensorflow_framework.so.2 --action_env TF_CXX11_ABI_FLAG=1\r\nINFO: Found applicable config definition build:short_logs in file \/opt\/tensorflow-text\/.bazelrc: --output_filter=DONT_MATCH_ANYTHING\r\nINFO: Found applicable config definition build:v2 in file \/opt\/tensorflow-text\/.bazelrc: --define=tf_api_version=2 --action_env=TF2_BEHAVIOR=1\r\nINFO: Found applicable config definition build:linux in file \/opt\/tensorflow-text\/.bazelrc: --define=build_with_onednn_v2=true --host_copt=-w --copt=-Wno-all --copt=-Wno-extra --copt=-Wno-deprecated --copt=-Wno-deprecated-declarations --copt=-Wno-ignored-attributes --copt=-Wno-array-bounds --copt=-Wunused-result --copt=-Werror=unused-result --copt=-Wswitch --copt=-Werror=switch --copt=-Wno-error=unused-but-set-variable --define=PREFIX=\/usr --define=LIBDIR=$(PREFIX)\/lib --define=INCLUDEDIR=$(PREFIX)\/include --define=PROTOBUF_INCLUDE_PATH=$(PREFIX)\/include --cxxopt=-std=c++17 --host_cxxopt=-std=c++17 --config=dynamic_kernels --experimental_guard_against_concurrent_changes\r\nINFO: Found applicable config definition build:dynamic_kernels in file \/opt\/tensorflow-text\/.bazelrc: --define=dynamic_loaded_kernels=true --copt=-DAUTOLOAD_DYNAMIC_KERNELS\r\nLoading: \r\nLoading: 0 packages loaded\r\nINFO: Repository org_tensorflow instantiated at:\r\n  \/opt\/tensorflow-text\/WORKSPACE:71:13: in <toplevel>\r\nRepository rule http_archive defined at:\r\n  \/root\/.cache\/bazel\/_bazel_root\/85e1e75b08f730f1cb0a39e292604ff5\/external\/bazel_tools\/tools\/build_defs\/repo\/http.bzl:355:31: in <toplevel>\r\nWARNING: Download from https:\/\/github.com\/tensorflow\/tensorflow\/archive\/.zip failed: class java.io.FileNotFoundException GET returned 404 Not Found\r\nERROR: An error occurred during the fetch of repository 'org_tensorflow':\r\n   Traceback (most recent call last):\r\n\tFile \"\/root\/.cache\/bazel\/_bazel_root\/85e1e75b08f730f1cb0a39e292604ff5\/external\/bazel_tools\/tools\/build_defs\/repo\/http.bzl\", line 125, column 45, in _http_archive_impl\r\n\t\tdownload_info = ctx.download_and_extract(\r\nError in download_and_extract: java.io.IOException: Error downloading [https:\/\/github.com\/tensorflow\/tensorflow\/archive\/.zip] to \/root\/.cache\/bazel\/_bazel_root\/85e1e75b08f730f1cb0a39e292604ff5\/external\/org_tensorflow\/temp689896470524611324\/.zip: GET returned 404 Not Found\r\nERROR: \/opt\/tensorflow-text\/WORKSPACE:71:13: fetching http_archive rule \/\/external:org_tensorflow: Traceback (most recent call last):\r\n\tFile \"\/root\/.cache\/bazel\/_bazel_root\/85e1e75b08f730f1cb0a39e292604ff5\/external\/bazel_tools\/tools\/build_defs\/repo\/http.bzl\", line 125, column 45, in _http_archive_impl\r\n\t\tdownload_info = ctx.download_and_extract(\r\nError in download_and_extract: java.io.IOException: Error downloading [https:\/\/github.com\/tensorflow\/tensorflow\/archive\/.zip] to \/root\/.cache\/bazel\/_bazel_root\/85e1e75b08f730f1cb0a39e292604ff5\/external\/org_tensorflow\/temp689896470524611324\/.zip: GET returned 404 Not Found\r\nERROR: no such package '@org_tensorflow\/\/tensorflow': java.io.IOException: Error downloading [https:\/\/github.com\/tensorflow\/tensorflow\/archive\/.zip] to \/root\/.cache\/bazel\/_bazel_root\/85e1e75b08f730f1cb0a39e292604ff5\/external\/org_tensorflow\/temp689896470524611324\/.zip: GET returned 404 Not Found\r\nINFO: Elapsed time: 1.254s\r\nINFO: 0 processes.\r\nFAILED: Build did NOT complete successfully (0 packages loaded)\r\nFAILED: Build did NOT complete successfully (0 packages loaded)\r\n```\r\n","comments":[],"labels":["type:build\/install"],"number":64320}]
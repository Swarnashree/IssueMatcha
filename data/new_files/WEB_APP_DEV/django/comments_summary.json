[{"issue_title": "Fixed #35319 -- Move the link to add a related object inside the .selector-available column for FilteredSelectMultiple", "summary": "A draft pull request has been created by knyghty to test their current approach for moving the add link to the header and hiding the original link in the `SelectFilter2.js` file. The current issue is that the add link opens in the current tab instead of as a popup. Additionally, hrushikeshrv has been mentioned to ensure that the link is present and to consider adding selenium tests or ensuring existing tests fail if the link is not shown."}, {"issue_title": "Fixed #35189 -- Render admin collapsible fieldsets with <details>.", "summary": "The issue discusses the reorganization of the heading layout in the test project, providing an example of the new layout. The buildbot and Selenium tests are mentioned to be not working anymore. The draft status of the related PR has been removed, and the user will work on adding the feature of making inline admins collapsible."}, {"issue_title": "Fixed #10403 -- Added a declarative syntax for FormSet, ModelFormSet & InlineFormSet.", "summary": "The maintainer is grateful for the contributor's efforts in working on an old pull request (PR) and finds the overall changes promising. The contributor mentions that the changes by another user and the PR's directions have been fundamental to their work and appreciates the opportunity to build upon them."}, {"issue_title": "Fixed #34789: `filter_horizontal` duplicates entries in \"Chosen\" column after instance is added via in another field using the \"plus\" JS action", "summary": "Issue involves a casing problem in model names, causing data-model-ref to fail in matching. Two additional issues identified: 1) Incorrect update of M2M with filter_horizontal when adding new related entry using '+' sign from FK field, and 2) No update of other widgets when adding new related entry using '+' sign from M2M field. Proposed solutions and potential fixes discussed."}, {"issue_title": "Fixed #35235 -- ArrayAgg() doesn't return default when filter contains __in=[].", "summary": "Discussion around adding a test for `_output_field_or_none` and introducing a new exception `OutputFieldIsNoneError` in Django's expressions.py"}]
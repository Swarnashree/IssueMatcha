[{"title":"Add a Threat Model","body":"This proposal is very open for debate and improvements, it is basically a fork from Node.js one (https:\/\/github.com\/nodejs\/node\/pull\/45223).\r\n\r\nI suggest you to review Node.js one first if you are not familiar with Threat models at all.\r\n\r\nThe main goal of this Threat Model is to provide a better support for Security Researches and for us on the triage. This Threat model can be considered as the \"playbook rules\" for reporting vulnerabilities into the project.\r\n\r\nNote: Only the Threat Model is in scope of this PR. The `security.md` has already existing elements that are going to change soon (see: https:\/\/github.com\/expressjs\/security-wg\/issues\/7), so please keep the focus on the target.\r\n\r\n\r\n**Context**\r\nFix https:\/\/github.com\/expressjs\/security-wg\/issues\/3\r\n\r\nYour feedback is more than appreciated: @bensternthal @ruddermann @ljharb @lirantal @mcollina @fraxken @expressjs\/security-wg @expressjs\/security-triage @expressjs\/express-tc ","comments":["I think this is a good starting point.","this looks great, just some small edit suggestions.  also, we should consider moving this to the `.github` repo, but this can be done later"],"labels":["docs","top priority","security"],"number":5526},{"title":"Update release process documentation","body":"This is a new version for the documentation. It is based on the experience doing #5505 but with some tweaks. \r\n\r\n**Key assumptions**\r\n- We expect to use PGP to verify commits and releases (done by github mostly out-of-the-box)\r\n- We expect to land most of the changes into `master` branch and pick the relevant commits once doing a release\r\n- We can backport changes to the major branches (at any time) without managing releases so we avoid a lot of conflict management \r\n\r\n**Some notes**\r\n- This is based on the [Node.js release process](https:\/\/github.com\/nodejs\/node\/blob\/main\/doc\/contributing\/releases.md)\r\n- I don't think that this process is perfect, but it is an starting point that we can shape in the next releases for v4 and v4 and onboarding new releasers \ud83d\udc4d \r\n- I need to normalize the branches `4.x` and `5.x` in order to make this guide accurate (if you try to follow it in a fork o similar)\r\n- The current release process was not working (out-of-the-box) when @wesleytodd and I reviewed, but feel free to rescue things and propose more changes.\r\n- I will work on a separate Pr once this one is merged just to clarify how to do security releases, just to avoid having a mix guideline that can be more complex to follow.\r\n- From this PR is expected to extract a consolidated way on how to land PRs (see step 4) that we can isolate in a separate guide \"how to land PRs\" \ud83d\udc4d ","comments":["Great work, but I am not really convinced that the Express way \/ Node.js way is the good one here. \r\nI just have one major question here, why are we not switching to using github release to do all the \"hard work\"? I guess we need less process than Node.js itself - this is how fastify is [doing it it seems](https:\/\/github.com\/fastify\/fastify\/releases) - and how I do handle my releases at work\r\n\r\nA lot less maintenance, a lot less impact and manual workflow\r\n- clic on \"generate new release\"\r\n- choose your branche \"v5\"\r\n- setup your tag \"v5.3.2\"\r\n- clic on \"generate release note\" (update if you want)\r\n- done\r\n\r\nWe can discuss that when you want, but for me this would be simpler, and it would be the same process for all packages (not just express)","> I just have one major question here, why are we not switching to using github release to do all the \"hard work\"? \r\n\r\nWe actually do it on the step 7 (partially). If we work directly with the major branches we depend a lot on what is included there in terms of changes (minor, patch...) and it will be hard to select what we ship and when (specially thinking on v5\/v6\/v7 when we only have partial features, etc... \r\n\r\nAlso this can be challenging if we want to do just a security release fast (patching) as we will need to create more ad-hoc branches, etc... \r\n\r\n> We can discuss that when you want, but for me this would be simpler, and it would be the same process for all packages (not just express)\r\n\r\nAlso I don't expect this process to be the same for other libraries in the project.\r\n\r\n","> Also I don't expect this process to be the same for other libraries in the project.\r\n\r\nthat is my main issue, I am not seeing why this is not the same process. For me we should be able to deliver things quickly, like other framework that have multiple releases per months.\r\n\r\nAfter all, in my eyes, Express is just \"another library\" so why not follow a more traditional \/simplified way? (This process would be for the v5 - maybe not v4)\r\n\r\nI am not seeing that we should create a new version every day but even if we have a security update, then let's push what's already merged (that was reviewed and validated, so it should be working)\r\nEven if Express is huge, I don't think we need the same heavyness in the process than for a Node.js release. No specific need to announce before.\r\n\r\nWe could even say \"Hey, every Monday, if there is something new we do a release if not let's see in a week\". This way we have small and quick incremental changes.\r\nFor reference, back in the 2.x days Express had releases every couple weeks, some time even multiples times in the same week https:\/\/github.com\/expressjs\/express\/tags?after=2.5.9 ","Have y\u2019all consider using the semantic-release tooling? I\u2019m using it in [Hubot](https:\/\/github.com\/hubotio\/hubot\/blob\/bb636e20857f54926916f250ee9b2c63e224dd46\/.github\/workflows\/pipeline.yml#L103).","> Great work, but I am not really convinced that the Express way \/ Node.js way is the good one here.\r\n\r\nI think I agree with @sheplu on this, but I have to say seeing it in this form (as a pr changing existing docs) makes it REALLY hard to fully grok the differences. IMO this conversation would be a lot more clear it we had a plain issue write up of the proposal before a PR version. Because I am not sure we really have clarity on the differences and what the ideal even is, I feel like we should start with a *new* issue and outline 2 or 3 options for workflows we can compare.\r\n\r\n","thanks for all the feedback! I will work in an issue to present this version and a simpler one, so we can have a better high level discussion. \r\n\r\nAlso I need to include an step to update the website: (Ref: https:\/\/github.com\/expressjs\/expressjs.com\/pull\/1469)"],"labels":["docs","feedback"],"number":5513},{"title":"add Github Access Structure Overview section","body":"Here's a first pass at adding a section about planned Org\/Repo access levels. \r\n\r\nThis doesn't spell out what _has changed_ or _will change_ about who has access. You can see some of the shaking out of dust in this issue https:\/\/github.com\/expressjs\/discussions\/issues\/132\r\n\r\nWe should document that somewhere, but I wanted to open a PR to land what I've seen proposed. \r\n\r\nI went with my own definitions and opinions here, and specifically am curious if I got the role for Committer correct re: access to a single repo vs all repos in an org. ","comments":["> I think we need some more work on this. I left a few initial questions but also I think we need to define what the team names are and likely what specific permissions they have. This should both be a doc for folks to understand what it means but also for us on how explicitly to manage it so we are all on the same page on how to do it.\r\n\r\nI left the team names out because naming is hard! I agree we should define names and specific perms\r\n\r\n[Github has built in roles](https:\/\/docs.github.com\/en\/organizations\/managing-user-access-to-your-organizations-repositories\/managing-repository-roles\/repository-roles-for-an-organization#repository-roles-for-organizations) that are close to what we want, but we should evaluate if we need deviations. I err on the side of running with the built in perms where possible and adjusting when necessary. \r\n\r\n<details><summary>an aside...<\/summary>\r\nre: evaluating deviations from the built in roles: e.g. Triagers can review\/approve\/reject PRs, but the reviews don't count towards merging, as approval by user w\/ write permissions is required. It's a nit, but PRs that don't get merged despite being approved by N folks w\/o write looks worse than a PR not merging bc it hasn't been approved at all. Taking away approval perms from Triagers is not a priority, but it is an example of a perm we could deviate on and a weak justification. Honestly, this is likely moot bc you can't create custom roles without having Github Enterprise\r\n\r\n<\/details>\r\n\r\nHere is a summary of the groups I outlined in the PR and what permissions I am suggesting:\r\n* [`@expressjs\/express-tc`](https:\/\/github.com\/orgs\/expressjs\/teams\/express-tc) (already exists) -- `owners` role on the org as defined in [github org permission docs](https:\/\/docs.github.com\/en\/organizations\/managing-peoples-access-to-your-organization-with-roles\/roles-in-an-organization#permissions-for-organization-roles) \r\n* `expressjs\/project-captain` -- no role assigned to the team beyond base org member role. Dunno if this team would be useful or not as permissions for maintaining a given repo will not be assigned at team level, but individually applied to user accounts. It would give an `@expressjs\/project-captain` mention ability, but I don't think see the need for pinging like 3-4 people who are captains, but not all commiters. Won't block on this. \r\n  *  Users will be individually assigned `admin` repo role as defined in [github repo permission docs](https:\/\/docs.github.com\/en\/organizations\/managing-user-access-to-your-organizations-repositories\/managing-repository-roles\/repository-roles-for-an-organization#permissions-for-each-role), per repo they are given project captain status for\r\n* `@expressjs\/committers` -- no role assigned to the team beyond base org member role (Im assuming that committers have write on a subset of repos and not all in the org, if it's all repos in the org then team based permissions would be appropriate). This one I actually do see as having everyone w\/ a commit bit, including TC, Project Captains, and Committers w\/ ad hoc write access. So you can just ping everyone with write. \r\n  * Users will be individually assigned `write` repo role as defined in [github repo permission docs](https:\/\/docs.github.com\/en\/organizations\/managing-user-access-to-your-organizations-repositories\/managing-repository-roles\/repository-roles-for-an-organization#permissions-for-each-role), per repo they are given committer status for\r\n* [`@expressjs\/triagers`](https:\/\/github.com\/orgs\/expressjs\/teams\/triagers) (already exists) -- `triager` role on each repo as defined in [github repo permission docs](https:\/\/docs.github.com\/en\/organizations\/managing-user-access-to-your-organizations-repositories\/managing-repository-roles\/repository-roles-for-an-organization#permissions-for-each-role)\r\n\r\n\r\n### Glossary for Above\r\n\r\n* team -- Github team, a named group of people which can be used to manage permissions\/access for people in an organization, sending notifications via @ mention, or requesting review from the team on PRs\r\n* role -- Github role, a set of built in permissions bundled under a specific name which can be assigned to a user or a team. There are different roles at the Org level and the Repo level\r\n* \"individually applied permission\" -- manually adding\/removing a role or specific permissions for a given collaborator's user account\r\n"],"labels":["docs","pr"],"number":5503},{"title":"feature: add a GitHub action to quell spam PRs","body":"## Problem\r\nI was scrolling through Twitter and someone posted about [the spam PR](https:\/\/github.com\/expressjs\/express\/pulls?page=1&q=is%3Apr+is%3Aclosed+Readme.md). \r\n\r\n## Possible Solution\r\nImplement this [GitHub action](https:\/\/github.com\/marketplace\/actions\/mark-as-spam). It'll lessen the workload for maintainers. \r\n\r\n","comments":["I am not sure we need an action for this unless there is an action which does more than that one (like spam detection with ai or something). It is easy to delete\/close\/lock with as many clicks as it is to comment and we don't need an additional third party action (added security risk and maintenance) to do it right?","It's kinda scary that, Those idiots spamming PR's","I agree and we are actively removing their comments and blocking them. I wish that work was not necessary, and I appreciate y'all working to help with suggestions and feedback. We used to have a pretty active triage team in place, maybe we can revive that to be more active, and if we do you all are welcome to help!","> unless there is an action which does more than that one (like spam detection with ai or something)\n\nNot sure about AI spam detection, but almost all of these PRs update the readme, have default name (_Update filename_), change only a single line and have no description, so it should be rather easy to close them automatically.\n\nMost authors of these PRs have a repsitory called \"localrepo\", so that's another rule that could be used to detect spam from this source (Apna College).","Yeah this is a one-off issue of the day. Spam PRs have been a problem for years and they come in different varieties. This is why I am hesitant do add an action for this as I would rather ask GitHub for better spam management tooling.","I reported a couple users already for spam. But this is just mopping with the tap wide open. I hate how this impacts contributors their time.","Hey @wesleytodd. I found this on X: https:\/\/twitter.com\/github\/status\/1311772722234560517\r\nMaybe that could work?\r\n ","> This is why I am hesitant do add an action for this as I would rather ask GitHub for better spam management tooling.\r\n\r\nAgree with @wesleytodd. The issue is quite complex because the moderation in GitHub is not an easy thing:\r\n- Many people (those that are watching the repo) will receive a notification in their email or in the app\/web once a new PR is created. This will occur even before a Github Action is triggered. \r\n- Closing PRs is an easy action (1 click), so that is not a big time consumer\r\n- Detecting invalid PRs is not the big issue because you can easily to spot them with the practice.\r\n- Reporting issues\/users is complex because the UI requires many steps to do it for each user, so that is a blocker for many maintainers.\r\n- Nuke button like @CBID2 suggested is great when the community needs to slow down due a discussion\/flame in certain moments, but is not the long term solution as it will prevent other users from contributing (PRs) that are legit or need help (issues) while using Express.\r\n\r\nSo, I think that we are quite limited on how much we can do with GitHub actions in this case. There are other scenarios that are less frequent but more prone to use GitHub Actions to moderate, for example when people do comments that include offensive content or heavily language. In most projects that I am involved the moderation is done by the humans behind the project or a specific team that volunteer to do it, it is a heavy job. The same way as it is hard to keep a slack\/discord\/gitter community channel a safe space by moderating content.","> In most projects that I am involved the moderation is done by the humans behind the project or a specific team that volunteer to do it, it is a heavy job. The same way as it is hard to keep a slack\/discord\/gitter community channel a safe space by moderating content.\r\n\r\nI think historically the express project has not needed the same style of moderation as things like Node.js does. There have been less contentious discussions and mostly the CoC violations have come from folks outside the project so it was relatively simple to ban and move on. I don't think we need to immediately spin up a moderation team but I do think that the Triage team and TC should have the tools to properly moderate. Right now I don't think we have that well in hand. I believe that we can add this to the list of TODOs to address after we can get next weeks TC meeting organized and finished.\r\n\r\nAre we in agreement that a GH Action is most likely not the direction we would want to take to solve this problem?","> I believe that we can add this to the list of TODOs to address after we can get next weeks TC meeting organized and finished.\r\n\r\nYes, we can add it to the TODO list and start to work on it in few weeks\r\n\r\n> Are we in agreement that a GH Action is most likely not the direction we would want to take to solve this problem?\r\n\r\n+1 from me","Maybe a [pull reqest template](https:\/\/docs.github.com\/en\/communities\/using-templates-to-encourage-useful-issues-and-pull-requests\/creating-a-pull-request-template-for-your-repository) would make some people think before creating a PR?\nOn the other hand, it doesn't look like those who spam with pull requests will even bother to read it and they'll probably just click \"Create pull reqest\" with unedited description.","> I agree and we are actively removing their comments and blocking them. I wish that work was not necessary, and I appreciate y'all working to help with suggestions and feedback. We used to have a pretty active triage team in place, maybe we can revive that to be more active, and if we do you all are welcome to help!\r\n\r\nHow can we join the triage team?","> How can we join the triage team?\n\nhttps:\/\/github.com\/expressjs\/express\/blob\/master\/Contributing.md#becoming-a-triager\n","Doesn't need to stop the conversation, but since we specifically don't want to use a GHA to do this then this issue is complete. There are more threads to follow up on, but I think we can do that in other discussions more specific to those.","A workflow could be an option too, These spam PRs generally don't have more than 2-3 words. Closing PRs with less than 3 words sounds reasonable. GitHub too does something similar in it's documentation repository.  [GitHub's workflow](https:\/\/github.com\/github\/docs\/blob\/main\/.github\/workflows\/check-for-spammy-issues.yml)","> A workflow could be an option too, These spam PRs generally don't have more than 2-3 words. Closing PRs with less than 3 words sounds reasonable. GitHub too does something similar in it's documentation repository. [GitHub's workflow](https:\/\/github.com\/github\/docs\/blob\/main\/.github\/workflows\/check-for-spammy-issues.yml)\r\n\r\n@wesleytodd, I think you should reopen this issue. @gaurishhs made another point about using GitHub actions","I do agree that workflow is a bit more well suited IMO. I am still hesitant and I would like to also look at other ways but yeah in the mean time lets re-open the issue so we don't end up having multiple on the same topic or miss out on good ideas like @gaurishhs'.","even one more  better thing is maximum spam pr revolve around README.md ,if we can specify to block those pr updating readme for now (upto the  spam pr's get less) we can  handle this through github actions for this so that good pr's may not effect.","Is it possible to have the workflow also incorporate a check for new contributors when doing the x words check? I feel like that people who contributed, and already have code merged, in the past do not pose much of a threat in regards to spam. Or am I overthinking it?","> Is it possible to have the workflow also incorporate a check for new contributors when doing the x words check? I feel like that people who contributed, and already have code merged, in the past do not pose much of a threat in regards to spam. Or am I overthinking it?\n\nI don't think you're overthinking it @TimGels. Previous contributors should be spared in some way. ","I think the workflow should be something like this:\r\n\r\nThe expressjs member check can be omitted \/ replaced with a collaborator check \r\n![image](https:\/\/github.com\/expressjs\/express\/assets\/78847111\/b849b627-fd97-49a5-ba21-1a1af54c4147)\r\n","> I think the workflow should be something like this:\r\n> \r\n> The expressjs member check can be omitted \/ replaced with a collaborator check ![image](https:\/\/private-user-images.githubusercontent.com\/78847111\/303097006-b849b627-fd97-49a5-ba21-1a1af54c4147.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MDczMzY3OTAsIm5iZiI6MTcwNzMzNjQ5MCwicGF0aCI6Ii83ODg0NzExMS8zMDMwOTcwMDYtYjg0OWI2MjctZmQ5Ny00OWE1LWJhMjEtMWExYWY1NGM0MTQ3LnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDAyMDclMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwMjA3VDIwMDgxMFomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWQxNGFlMzJkOTczNjRkMTk5OGFlMjAxMzEzMTc0ZWQzN2JjOTE4MmQ1MzVhMzBhZWViZDA2MDEyOWRiMjkzYTEmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.UiIggnRUVhRL7WH6ZnJQ_BINPfT97aKWrNLIEPMwALs)\r\n\r\nI don't think word count matters because some bugs only requires a minimal changes. ","And if word count check is added, they must find some other way to open spam prs. The problem here is those who make spam prs, they just started their development journey and when they got introduced to github (by some youtubers or some articles), they tried to test it by themselves. They didn't have any idea that the thing they are doing is a headace of someone else.\r\n\r\n**The only way we can stop this is by creating awarness.**\r\n","> And if word count check is added, they must find some other way to open spam prs. The problem here is those who make spam prs, they just started their development journey and when they got introduced to github (by some youtubers or some articles), they tried to test it by themselves. They didn't have any idea that the thing they are doing is a headace of someone else.\n> \n> \n> \n> **The only way we can stop this is by creating awarness.**\n> \n> \n\nTrue, but knowing that there those who create spam PRs out of malice, raising awareness is not enough. Protective measures are a must too. ","> > And if word count check is added, they must find some other way to open spam prs. The problem here is those who make spam prs, they just started their development journey and when they got introduced to github (by some youtubers or some articles), they tried to test it by themselves. They didn't have any idea that the thing they are doing is a headace of someone else.\r\n> > **The only way we can stop this is by creating awarness.**\r\n> \r\n> True, but knowing that there those who create spam PRs out of malice, raising awareness is not enough. Protective measures are a must too.\r\n\r\nThere are Rest APIs for getting the info of prs and also for actions. Making a bot which can automate spam pr closing using those rest apis can help. But not sure how to detect spam.","Hello! While I may not possess your level of genius, I've got an idea. Can we utilize NLP in Python code to detect significant changes in a `Readme` file solely through a GitHub Action?","I think we should try my suggestion for now and then do more afterwards. We must take some form of action quickly ","Hello team!\r\nA quick action could be to limit who can submit a PR while there is no action to filter PR spamming.\r\n\r\ngithub provide a settings to limit temporarly the submitted PR for a determined duration (maybe one week) for an external contributor:\r\nhttps:\/\/twitter.com\/github\/status\/1311772722234560517\r\nhttps:\/\/github.com\/orgs\/community\/discussions\/22804\r\n(in this case only express team member can submit a PR)\r\n\r\nI know isn\u2019t aligned with open source phylosophy but it can stop this PR spamming cycle quickly while waiting for a real solution. Maybe when they see that it no longer works, the followers of the video will ask the YouTuber for explanations :)\r\n\r\nAnother solution, is to check if a PR have a commit related to an open issue on the same repo. If not the github action xill close automatically the PR.\r\n\r\nsee you\r\n","I really feel pensive seeing all these PRs come from literally \"tech youtubers\" who don't use basic common senses before uploading a video, I apologize on their behalf \ud83d\ude4f .","> spam detection with ai\r\n\r\nThis seems like a pretty cool project idea, someone should DEFINITELY put something like this into place to help with spam hell for open-source maintainers. ","Hello team,\r\n\r\nSpent few hours learning about GitHub actions and came up with this rule-based spam PR detection action which automatically closes the PR based on user-configurable rules.\r\n\r\nI have setup few rules like detecting the default commit message for `README.md` and also if the pull request template has been updated with the details. It can be easily extended to prevent this PR havoc and future misuses.\r\n\r\nCheck it out here: https:\/\/github.com\/animesh-chouhan\/github-spamstop","@animesh-chouhan The action certainly is a decent idea, however I don't think a simple check of whether a default `README.md` change commit exists in a PR would be enough to prevent such spam. I feel like we should have a greater set of rules to check against, such as how active the said user is on GitHub, whether they've contributed to different repositories, etc.","> @animesh-chouhan The action certainly is a decent idea, however I don't think a simple check of whether a default `README.md` change commit exists in a PR would be enough to prevent such spam. I feel like we should have a greater set of rules to check against, such as how active the said user is on GitHub, whether they've contributed to different repositories, etc.\r\n\r\n@CompeyDev Yeah it is upto the repository owner to configure rules. I have just provide a template and added basic rules just to give an idea. More complex rules can be added depending on the requirement. ","So can we get started?","Hey Everyone, lots going on in here but I suggest we take a beat and pause here. I don't think anyone currently on the contributor, triager, or TC roles really want's an action for this (if anyone in those groups disagrees please correct me). Closing PRs from legitimate users is a bad experience, and avoiding that should be a goal which is hard to do with any automated tooling. This idea is more of a \"last resort\" than an ideal solution.\r\n\r\nTo update folks on the status:\r\n\r\n1. We added Issue templates and will be adding PR templates which will hopefully warn folks against opening spam prs\r\n2. We have reached out through more official ways to the video creators about editing the video to reduce the likelyhood of causing accidental spam\r\n3. Medium term we will likely attempt to get the Triage Team's help for this, but we are not going to do much of that until we sort out a few other things\r\n4. We are continuing to close and locking the spam PRs\r\n\r\nAll that said, if folks could **please STOP directly mentioning maintainers in these PRs (or in any other fashion)** that would be great. We are watching the repos and are well aware without the direct ping's, they are only causing more notification spam. ","> Hey Everyone, lots going on in here but I suggest we take a beat and pause here. I don't think anyone currently on the contributor, triager, or TC roles really want's an action for this (if anyone in those groups disagrees please correct me). Closing PRs from legitimate users is a bad experience, and avoiding that should be a goal which is hard to do with any automated tooling. This idea is more of a \"last resort\" than an ideal solution.\r\n> \r\n> To update folks on the status:\r\n> \r\n> 1. We added Issue templates and will be adding PR templates which will hopefully warn folks against opening spam prs\r\n> 2. We have reached out through more official ways to the video creators about editing the video to reduce the likelyhood of causing accidental spam\r\n> 3. Medium term we will likely attempt to get the Triage Team's help for this, but we are not going to do much of that until we sort out a few other things\r\n> 4. We are continuing to close and locking the spam PRs\r\n> \r\n> All that said, if folks could **please STOP directly mentioning maintainers in these PRs (or in any other fashion)** that would be great. We are watching the repos and are well aware without the direct ping's, they are only causing more notification spam.\r\n\r\nSounds wonderful @wesleytodd! :) I'm going to join the triage team to offer more ideas","Could Github not implement something like stack overflow? (like you need some amount of rating before you could file a PR on a Repo which is a little old, maybe 10-20 commits)","I'm an open source contributor on other projects, I stumbled upon a video explaining what was going on.  Unfortunately this project has become part of a video to teach people how to make github pull requests to open source projects (https:\/\/www.youtube.com\/watch?v=Ez8F0nW6S-w),  Do as I did and report this video to try and get it taken down. Whilst not harmful content its damaging \"misinformation\" after which I gave a description why. (if enough people complain then maybe it can be forced to remove it and that might help, but this video has 1.4M views so be prepared for the number of PRs to keep coming in (pretty much forever and fast)\r\n\r\n I'm not a github expert maybe there is a way to prevent submission of the PR ahead of time if it doesn't contain a github issue, or maybe a \"bug\/enhancement\/contributor label\" , other projects I've worked on you need to be a member of a \"virtual\" organization (e.g. expressjs community), but you can easily join that organization by raising a ticket, a moderator can adds people to that orginization. Nothing would stop contributors creating their own commits in their own forks, but they couldn't then send you their PRs unless they were part of your organization. \r\n\r\nSorry just trying to help, feel bad for you all.\r\n\r\n```yaml\r\nname: Prevent PR submission from non-organization members\r\n\r\non:\r\n  pull_request:\r\n    types:\r\n      - opened\r\n      - synchronize\r\n\r\njobs:\r\n  validate_pr:\r\n    runs-on: ubuntu-latest\r\n    steps:\r\n      - name: Check if PR author is organization member\r\n        uses: actions\/github-script@v4\r\n        with:\r\n          script: |\r\n            const { owner, repo } = context.repo;\r\n            const { login } = context.payload.pull_request.user;\r\n\r\n            const { data: orgMembers } = await github.rest.orgs.listMembers({\r\n              org: owner,\r\n            });\r\n\r\n            const isMember = orgMembers.some((member) => member.login === login);\r\n\r\n            if (!isMember) {\r\n              core.setFailed(`PR author is not an organization member: ${login}`);\r\n            }\r\n        env:\r\n          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}```","I keep getting email notifications so I figured I would contribute something to the conversation. From my reading of the spam PR's, a lot of them add their own name to the commit. Perhaps a regex to detect if the diff consists of only any variation of username, along with the title \"Update README.md\" would filter at least 60% of the spam PRs.  You don't need to use AI for this","Heya! An update on my last comment: I think I'll be working on an AI based spam detector for use-cases like this, which would analyze diff files of PRs and conclude whether it is worthwhile to keep or not. Will update with progress on that here if y'all would like that.","> Heya! An update on my last comment: I think I'll be working on an AI based spam detector for use-cases like this, which would analyze diff files of PRs and conclude whether it is worthwhile to keep or not. Will update with progress on that here if y'all would like that.\n\nI'd like that ","> Heya! An update on my last comment: I think I'll be working on an AI based spam detector for use-cases like this, which would analyze diff files of PRs and conclude whether it is worthwhile to keep or not. Will update with progress on that here if y'all would like that.\r\n\r\nYou don't need AI for this. How are you going to approach this?","> > Heya! An update on my last comment: I think I'll be working on an AI based spam detector for use-cases like this, which would analyze diff files of PRs and conclude whether it is worthwhile to keep or not. Will update with progress on that here if y'all would like that.\r\n> \r\n> You don't need AI for this. How are you going to approach this?\r\n\r\nI agree with @QuantGeekDev, detecting this kind of spam is relatively easy and using AI would be an overkill. A simple rule-based approach will work well in this case: https:\/\/github.com\/animesh-chouhan\/github-spamstop\/blob\/main\/index.js#L48-L66\r\n\r\nThis uses a pull-request template which needs to be edited with the details of the change which would easily deter a large amount of such PRs.\r\n\r\nPR template: https:\/\/github.com\/animesh-chouhan\/github-spamstop\/blob\/main\/.github\/pull_request_template.md","Yep. I agree, too. A pull request template would be best to fight these spam pull requests.","I just stumbled upon a tweet about a problem that seems identical to the Binod virus that surfaced a few years ago. It's high time that GitHub takes notice of this new issue. Repositories like these should have a strict set of criteria or credibility requirements for contributors. It's imperative to understand that libraries like these are fundamental building blocks of the web ecosystem, and such issues only hinder progress.","Honestly, the only way to qwell this issue is to ask the person who [originally posted a github tutorial on youtube](https:\/\/www.youtube.com\/watch?v=Ez8F0nW6S-w) to pull down her video and reupload it without the ExpressJS bits in the very end. Otherwise, it may keep happening in the future. Honestly not a big ask. I think the express team should get in contact and ask them to do so. They are a medium size coding tutor platform so it should not be a crazy ask. Their contact and other details are available on their website. ","You could probably block 99% of the spam by checking the IP address from which it came. Dunno how to do that, though.","> You could probably block 99% of the spam by checking the IP address from which it came. Dunno how to do that, though.\r\n\r\nBlocking PRs based on IP address isn't a solution because 1. Different people are making these spam PRs so IP addresses are different, 2. If you meant IP range that targets some region, then it can result in legit PR getting blocked.","A PR template with some automation seems good to me . We can check for the change in description . Most of these student dont care to change description , so if a PR is opened with the template as it is without any change then most probably it is spam and a action or any automation could be used to close it .","A way to do this, I think, would be to check diffs and auto-close one without substantial changes\r\n\r\n> checking the IP address from which it came.\r\n\r\nDon't think seeing ips is possible thru github\r\n\r\nFeb 11, 2024 1:27:48 AM Rishabh Bohra ***@***.***>:\r\n\r\n> \r\n> A PR template with some automation seems good to me . We can check for the change in description . Most of these student dont care to change description , so if a PR is opened with the template as it is without any change then most probably it is spam and a action or any automation could be used to close it .\r\n> \r\n> \u2014\r\n> Reply to this email directly, view it on GitHub[https:\/\/github.com\/expressjs\/express\/issues\/5449#issuecomment-1937489364], or unsubscribe[https:\/\/github.com\/notifications\/unsubscribe-auth\/AV2UYYYQLESIVVNMLT6SGJTYTCFILAVCNFSM6AAAAABC4M772OVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSMZXGQ4DSMZWGQ].\r\n> You are receiving this because you are subscribed to this thread.\r\n> [Tracking image][https:\/\/github.com\/notifications\/beacon\/AV2UYY4TQ2OHBPWHV55C77DYTCFILA5CNFSM6AAAAABC4M772OWGG33NNVSW45C7OR4XAZNMJFZXG5LFINXW23LFNZ2KUY3PNVWWK3TUL5UWJTTTPO65I.gif]\r\n> \r\n","> We have reached out through more official ways to the video creators about editing the video to reduce the likelyhood of causing accidental spam.\r\n\r\n> the only way to qwell this issue is to ask the person who originally posted a github tutorial on youtube to pull down her video and reupload it without the ExpressJS bits in the very end.\r\n\r\nProbably not going to happen. Based on their post in their Instagram broadcast channel, they feel they did everything right, and they are calling us a bunch of bullies and whiners.\r\n\r\n[Click here to see a screenshot of the channel.](https:\/\/github.com\/expressjs\/express\/assets\/6047296\/30077167-3e1c-4d5e-a062-70bc6e3b3237)\r\n\r\nThis is so unfortunate for the open source community.\r\n\r\n> without substantial changes\r\n\r\nOne of the spam PRs replaced the entire Readme file with junk text. It is a substantial change.","@ADTC is any of this on a public link? I don't have an Instagram account but would be interested in reading links if they are available. Screenshots just don't seem to provide enough context to interpret what she is saying in that post.","@wesleytodd there isn't much on the channel related to this topic. She posted a copy of the tweet, made her comment and started the poll. That's all.\r\n\r\n[Here's the screenshot with the tweet.](https:\/\/github.com\/expressjs\/express\/assets\/6047296\/84126115-d1f2-4bbd-a2dc-9364a4680958)\r\n\r\n\r\nYou can't access the channel without an Instagram account. Here's a link though: https:\/\/ig.me\/j\/AbagxilRJ7KwLyaD\/\r\n\r\nPS: last ditch effort would be to create a new repo and lock this repo as read only. Post a notice sign posting the new repo.","Thanks for the help, we reached out via more formal methods and have not heard anything back afaik so just wanted to check if this had any added context on the situation.\r\n\r\nI am going to take a pass pretty soon on this thread to mark a lot of the comments in here as \"off topic\", so please don't take offense, but this is all really off topic conversation.","Really, I think you could probably just reject anything with \"update: '<filename>'\" as a PR title, I don't think that would be too disruptive for normal PRs.","Maybe we can add a PR template when people want to issue a PR \n\nIt is probably as this people won't be able to know how to change basic things in the PR template","Most of them can be auto-closed if they meet all of the below criteria:\r\n\r\n1. PR has only one commit.\r\n2. Commit changes only one file.\r\n3. Commit has a message subject matching regex `Update [^ ]*\\.[^ ]+` (match is for all file names generally).\r\n4. Commit has no message body.\r\n\r\nThis should auto-close almost all of them. Maybe 1 or 2 every month may not match, but it's much less work to manually check and close them.\r\n\r\nPS: The regex match should be on commit subject, not PR title because the newbie spammers are more likely to change the title.\r\n\r\nFor fun: Close them with a cheeky comment: Congrats! You are now an open source spam contributor. Now learn how to make real contributions and your training will be complete. [Add a Hindi translation of the same.]","I think we can get auther (who made PR) total lifetime PR count if it is more then 10 or whatever we can prevent that ?  \r\n\r\n\r\nlike this \r\n\r\n```sh\r\nname: Spam Detect\r\n\r\non:\r\n  pull_request:\r\n    types:\r\n      - opened\r\n\r\njobs:\r\n  check_author_pr_count:\r\n    runs-on: ubuntu-latest\r\n\r\n    steps:\r\n    - name: Checkout code\r\n      uses: actions\/checkout@v2\r\n\r\n    - name: Set up Node.js\r\n      uses: actions\/setup-node@v4\r\n      with:\r\n        node-version: '14'\r\n\r\n    - name: Install dependencies\r\n      run: npm install github-api\r\n\r\n    - name: Count Merged PRs\r\n      id: pr_count\r\n      run: |\r\n        AUTHOR=$(curl -sSL https:\/\/api.github.com\/repos\/${{ github.repository }}\/pulls\/${{ github.event.pull_request.number }} | jq -r '.user.login')\r\n\r\n        MERGED_PR_COUNT=$(curl -sSL -H \"Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}\" \"https:\/\/api.github.com\/search\/issues?q=is:pr+author:$AUTHOR+is:merged\" | jq -r '.total_count')\r\n        \r\n        echo \"merged_pr_count=$MERGED_PR_COUNT\" >> $GITHUB_OUTPUT\r\n\r\n    - name: Check PR Count\r\n      run: |\r\n        if [[ \"${{ steps.pr_count.outputs.merged_pr_count }}\" -gt 20 ]]; then\r\n          echo \"PR count is greater than 20. Proceed with the workflow.\"\r\n        else\r\n          echo \"PR count is not greater than 20. Blocking the PR.\"\r\n          exit 1  \r\n        fi\r\n```\r\n\r\nthis is it's test https:\/\/github.com\/Kamleshpaul\/github-spam-action-test\/pulls","> I think we can get auther (who made PR) total lifetime PR count if it is more then 10 or whatever we can prevent that ?  \n\nThey already made a github action which takes care of this ","Well, it looks like the issue will be solved when the pr is merged","Hey folks, just to update you: We have a thread open with GitHub support where they are passing along our requests to the various product teams on how to improve the moderation features. I personally am still \ud83d\udc4e on an action which auto closes PRs as it is both a maintenance burden and something best handled by features on GitHub's side. We are focused right now on landing some governance changes and will be following up with re-constituting the triage team. I think ideally this decision is left up to the triage team members. So likely there will not be action on this or the PR until we can get that team organized again. If you are interested in helping that please follow the instructions to get involved there (as some of you already have, thank you very much for that). ","They have slowed down too for the time being, the last one already is two days old.","> > unless there is an action which does more than that one (like spam detection with ai or something)\r\n> \r\n> Not sure about AI spam detection, but almost all of these PRs update the readme, have default name (_Update filename_), change only a single line and have no description, so it should be rather easy to close them automatically.\r\n> \r\n> Most authors of these PRs have a repsitory called \"localrepo\", so that's another rule that could be used to detect spam from this source (Apna College).\r\n\r\nThe flood of pull requests (PRs) occurred due to individuals learning about Git and GitHub from a specific YouTube video \r\n\r\nhttps:\/\/youtu.be\/Ez8F0nW6S-w?t=4323\r\n\r\nIn the video, the presenter demonstrated how to contribute to open-source projects using the Express repository as an example. While the video emphasized creating PRs for meaningful changes only, the majority of the audience consisted of beginners unfamiliar with GitHub and community guidelines. Consequently, many blindly followed the steps outlined in the tutorial, resulting in an overwhelming influx of PRs.\r\n","Thanks @nkroker, please read above as that topic has been covered quite a few times. I will mark this as off topic but thanks for the well intentioned help."],"labels":["ideas"],"number":5449},{"title":"Add dependabot","body":"### Main Changes\r\n\r\nThe dependabot will check for available updates for the dependencies that we use in the project. In the current setup it will generate PRs once per week if the are new versions for our dependencies (npm and Github Actions).\r\n\r\nWe can remove npm and limit it to Github Actions, as well we can modify the frequency.\r\n\r\nThe dependabot is capable of follow the pin version schema introduced in https:\/\/github.com\/expressjs\/express\/pull\/5432, so it will be able to upgrade and pin the GIthub actions accordantly.\r\n\r\nThe configuration is very flexible, see the [documentation](https:\/\/docs.github.com\/en\/code-security\/dependabot\/dependabot-version-updates\/configuration-options-for-the-dependabot.yml-file)\r\n\r\n\r\n### Context\r\n- Ref: https:\/\/github.com\/expressjs\/security-wg\/issues\/2\r\n- Report: https:\/\/kooltheba.github.io\/openssf-scorecard-api-visualizer\/#\/projects\/github.com\/expressjs\/express\/commit\/2a00da2067b7017f769c9100205a2a5f267a884b\r\n\r\n### Changelog\r\n\r\n- 8e81a04 chore: add dependabot tool by @UlisesGascon\r\n\r\n\r\n\r\n","comments":["@UlisesGascon you can also set pull request limit and timezone, that would be nice!","> @UlisesGascon you can also set pull request limit and timezone, that would be nice!\r\n\r\nFeel free to add [a suggestion](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/reviewing-changes-in-pull-requests\/commenting-on-a-pull-request#adding-comments-to-a-pull-request) in the PR directly @shivam-sharma7 \ud83d\udc4d ","Hey, I just wanted to drop a note in here (I haven't had time to review yet) but we had talked about different approaches to dependency updates for `express` in the past and this approach does not align with the previous decisions on how we should do this. Once we get a regular cadence of meetings going and get over the hump of kicking everything back off I think we should address this, but I believe that it will take some discussion and alignment. Just didn't want folks to get frustrated if this sat for a while without clarity. "],"labels":["pr","deps","tsc-agenda"],"number":5435}]
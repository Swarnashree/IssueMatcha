[{"issue_title": "[Bug]: Wrong transpilling @babel/standalone@7.24.3 when destructuring to a new object", "summary": "A user, marionicolas, has reported an issue and was encouraged to join the project's Slack community for assistance. The collaborators are volunteers and may not be able to address the issue immediately."}, {"issue_title": "fix: TypeScript annotation affects output", "summary": "Build successful, new changes can be tested in the REPL at <https://babeljs.io/repl/build/56569>"}, {"issue_title": "[Bug]: TypeScript annotation that contains the name of the annotated class method changes final output", "summary": "A new issue has been reported, welcoming the reporter and directing them to the project's Slack community for assistance while noting that the team is composed of volunteers and may not be able to address the issue immediately."}, {"issue_title": "Improve `super.x` output", "summary": "The issue resulted in a successful build, and the changes can be tested in the REPL provided."}, {"issue_title": "[Bug]: Exception when combining a decorated class, a decorated method, and a static field", "summary": "Issue reported by @SirPepe regarding a problem with the Typescript preset in Babel. The problem seems to be a plugin ordering issue where the Typescript transform is removing the `applyDecs` call inserted by the decorator transform. A workaround is provided: setting the Typescript preset option `allowDeclareFields` to `true`. A reproduction of the issue can be found in the provided GitHub repository."}, {"issue_title": "[Bug]: Babel TypeScript syntax throws with error recovery enabled where offical does not", "summary": "New issue reported by @msteen, encouraging them to seek help from the Babel Slack community while issue is pending."}, {"issue_title": "Fix incorrect function hoisting in some case statements", "summary": "The issue was regarding a build successful message, with jest tests failing due to a bug that has since been fixed by a pull request. There is a suggestion to change `babel-plugin-transform-block-scoped-functions`, but there is uncertainty about whether it would be a better solution. The suggested change would involve moving the hoisting logic, which could potentially cause a similar bug for 'Annex B.3.3' code, requiring a duplicated fix."}, {"issue_title": "[Bug]: The internal class binding captured in element decorators should not be mutated", "summary": "Issue reporter, JLHwung, was thanked for reporting an issue and encouraged to seek help from the project's Slack community with any questions."}, {"issue_title": "[Bug]: sourceCode.getScope is not a function (`@babel/eslint-plugin`)", "summary": "Issue report for using @babel/no-invalid-this rule with ESLint 8 and a discussion on a similar issue with @babel/semi and @babel/object-curly-spacing rules. Suggestion to update the docs/README.md. Request for a reproduction repo to investigate the error with @babel/object-curly-spacing."}, {"issue_title": "[Bug]: plugin-transform-regenerator together with async-to-generator incorrectly shadow function name in local scope", "summary": "New issue reported by @larabr. The collaborators are a limited number of volunteers and may not be able to address the issue immediately. A suggestion to join the Babel Slack community for quicker assistance is provided."}]
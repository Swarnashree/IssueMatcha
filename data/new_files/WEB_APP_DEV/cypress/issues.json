[{"title":"fix: unskip rerun.cy.js for chromium browsrs","body":"### Current behavior\n\nCurrently the `rerun.cy.js` tests are hanging in chromium browsers when recording to the cloud. This is likely due to some refactors with protocol. To unblock the pipeline, we will be skipping this test in chromium browsers, but will reintroduce them once we have the fix in protocol resolved \n\n### Desired behavior\n\ntests should run in chromium browsers while recording to cloud cypress with protocol enabled\n\n### Test code to reproduce\n\nsee https:\/\/github.com\/cypress-io\/cypress\/blob\/develop\/packages\/driver\/cypress\/e2e\/e2e\/rerun.cy.js#L13\n\n### Cypress Version\n\n13.7.0\n\n### Node version\n\n18.17.1\n\n### Operating System\n\nMacOS 14.3\n\n### Debug Logs\n\n_No response_\n\n### Other\n\n_No response_","comments":[],"labels":["process: tests"],"number":29181},{"title":"Internal test hanging: 'stores viewport globally and does not hang on re-runs'","body":"### What would you like?\n\nWe have this test that has begun hanging our internal test runs recently and more frequently. This should not be hanging.\r\n\r\nhttps:\/\/github.com\/cypress-io\/cypress\/blob\/develop\/packages\/driver\/cypress\/e2e\/e2e\/rerun.cy.js#L17\r\n\r\n![Screenshot 2024-03-20 at 5 57 02\u202fPM](https:\/\/github.com\/cypress-io\/cypress\/assets\/1271364\/def6ccec-8df5-40aa-a084-4ee216a90300)\r\n![Screenshot 2024-03-20 at 5 56 29\u202fPM](https:\/\/github.com\/cypress-io\/cypress\/assets\/1271364\/3e936405-d54d-4d8f-a27c-f24ded68ea42)\r\n\r\n![Screenshot 2024-03-21 at 10 18 42\u202fAM](https:\/\/github.com\/cypress-io\/cypress\/assets\/1271364\/d6494ee7-903c-46bc-a78e-b647d39ed35e)\r\n\r\n\n\n### Why is this needed?\n\n_No response_\n\n### Other\n\n_No response_","comments":["This is the earliest commit that I can find it\u2019s hanging: https:\/\/github.com\/cypress-io\/cypress\/commit\/a368a6421e548ae7817efa779eacd8da865da23b\r\n\r\nThat run: https:\/\/app.circleci.com\/pipelines\/github\/cypress-io\/cypress\/60475\/workflows\/b627cdf6-bbb3-4768-b4ec-2144d4f6915c","This hanging only occurs while recording and is suspected to possibly be due to this change: https:\/\/github.com\/cypress-io\/cypress-services\/pull\/8004 which would largely not be affecting customers likely."],"labels":["process: flaky test"],"number":29180},{"title":"Cypress Component Testing with Local Storage","body":"### Current behavior\r\n\r\n## Problem\r\nIn my current cypress component test if I run the component test locally the local storage sets the data and test will pass when you run cypress open command ie: \r\n`npx cypress open --component `\r\nIn the image below you can see this is the Components Test and that I have Mocked the localStorage to show these items listed\r\n\r\n![image](https:\/\/github.com\/cypress-io\/cypress\/assets\/7504929\/f1612efc-950c-4b4d-b3f4-7890de586724)\r\n\r\nHowever when running the test through cypress run command the LocalStorage gets set but the component never renders the data ie:\r\n\r\n`npx cypress run --component`\r\n\r\nThis is a screenshot of the headed cypress run  is when the component is loading. I have tried BeforeEach and even using \r\n```\r\nCypress.on('test:before:run:async', async () => {\r\n  await window.localStorage.setItem('cartItems', JSON.stringify(items))\r\n});\r\n```\r\nThe data does load before this mounts. \r\n![image](https:\/\/github.com\/cypress-io\/cypress\/assets\/7504929\/164d776a-bf7e-4316-85a7-b702dc8e4521)\r\n\r\n\r\n\r\nThis is a screenshot of the headed run you can see it here it populates the Data in local storage but after the component has rendered. \r\n\r\n![image](https:\/\/github.com\/cypress-io\/cypress\/assets\/7504929\/fd746404-128d-4803-88d4-3d78379ee2af)\r\n\r\nYet the CartDrawer is not rendering the items because Local Storage and react does not force a re-render of the component.\r\nAnd yet the test when running through cypress open command the component test render fine with the items and pass all the time. What is causing this difference between cypress open and cypress run? \r\n\r\n\r\n\r\n\r\n### Desired behavior\r\n\r\nWould like to be able to use LocalStorage with cypress components to mock the output of the component.\r\nShould work the same as cypress open.\r\n![image](https:\/\/github.com\/cypress-io\/cypress\/assets\/7504929\/7e6ee8c0-100a-4072-8124-d7615e45eb8f)\r\n\r\n\r\n### Test code to reproduce\r\n\r\nYou can fork my repo where I have created this test here [My repo](https:\/\/github.com\/iepoch\/cypress-vite-msw-rtk\/tree\/user\/iepoch\/fixMajorsetup)\r\n\r\n\r\n### Cypress Version\r\n\r\n13.7.0\r\n\r\n### Node version\r\n\r\n18.17.0\r\n\r\n### Operating System\r\n\r\nWindows 11\r\n\r\n### Debug Logs\r\n\r\n```shell\r\nLog is too long\r\n```\r\n\r\n\r\n### Other\r\n\r\nNone","comments":["![image](https:\/\/github.com\/cypress-io\/cypress\/assets\/7504929\/caac10b7-19a2-4764-bf48-db23b649e3ba)\r\nI am also Attaching this error when checking local storage after setting it the before test as mentioned above. I grabbed this screenshot in headed mode. As you can see even after setting it in the Before it does not appear to be setting local storage until after the component gets mounted. As far as the debug log I have most of it and even that is to long to post here. \r\nAll the test is checking for is that the Local storage is set in the before\r\n```\r\nCypress.on('test:before:run:async', async () => {\r\n  await window.localStorage.setItem('cartItems', JSON.stringify(items))\r\n});\r\n```"],"labels":["CT"],"number":29178},{"title":"Cypress hangs often or crashes. In test runner it takes forever to load.","body":"### Current behavior\r\n\r\nOnly killing the app and restarting works. \r\n\r\n### Desired behavior\r\n\r\nApp will work seamlessly until yesterday, was able to switch browsers and run tests easily, now specs are not loading at all.\r\n\r\n### Test code to reproduce\r\n```js\r\ndescribe('template spec', () => {\r\n  it('passes', () => {\r\n    cy.visit('https:\/\/example.cypress.io')\r\n  })\r\n})\r\n```\r\n\r\n### Cypress Version\r\n\r\n13.7.0\r\n\r\n### Node version\r\n\r\n16.16.0\r\n\r\n### Operating System\r\n\r\nmacOS\r\n\r\n### Debug Logs\r\n\r\n```shell\r\nThe Test Runner unexpectedly exited via a exit event with signal SIGKILL\r\n\r\nPlease search Cypress documentation for possible solutions:\r\n\r\nhttps:\/\/on.cypress.io\r\n\r\nCheck if there is a GitHub issue describing this crash:\r\n\r\nhttps:\/\/github.com\/cypress-io\/cypress\/issues\r\n\r\nConsider opening a new issue.\r\n\r\n----------\r\n\r\nPlatform: darwin-arm64 (22.6.0)\r\nCypress Version: 13.7.0\r\n```\r\n\r\n\r\n### Other\r\n\r\n_No response_","comments":["@jananibalakrishnanakamai \r\n- What browser are you using? \r\n- What changed between yesterday and today? Did you update Cypress? Did your browser update? (Chrome updated yesterday)\r\n- Could you run Cypress in [debug mode](https:\/\/on.cypress.io\/troubleshooting#Print-DEBUG-logs) mode and print the entire set of logs here?\r\n\r\n","I m using Chrome, Firefox and Electron. Seeing this behavior on all three browsers. \r\n\r\nI added couple of extensions in chrome, didn't update it. "],"labels":["stage: needs information"],"number":29177},{"title":"Open in IDE does not work","body":"### Current behavior\n\nI'm not able to use the Open in IDE feature from the Cypress Runner. When the link is pressed nothing happens.  Href is empty. \r\n![2024-03-21_07h28_25](https:\/\/github.com\/cypress-io\/cypress\/assets\/76098283\/160fb12e-4c6b-427a-95a1-dcc71cde41e9)\r\n![2024-03-21_07h30_38](https:\/\/github.com\/cypress-io\/cypress\/assets\/76098283\/0112f07c-e184-4bdb-8290-06ab6bfc7abd)\r\n![2024-03-21_07h37_57](https:\/\/github.com\/cypress-io\/cypress\/assets\/76098283\/bf976553-944d-4ec7-a296-d282955dd699)\r\n\n\n### Desired behavior\n\nFIle opened in the Visual Studio Code\n\n### Test code to reproduce\n\nn\/a\n\n### Cypress Version\n\n13.7.0\n\n### Node version\n\nv18.17.0\n\n### Operating System\n\nWindows 11\n\n### Debug Logs\n\n_No response_\n\n### Other\n\n_No response_","comments":["The anchor link is always empty, even when the link is functioning, so that's not the issue. This link works for me in a simple test.\r\n\r\nCould you provide the filepath that this is meant to redirect to? Is the URL as shown correct? Does that file and that line still exist in the code base?"],"labels":["stage: needs information"],"number":29176},{"title":"Can't omit --ci-build-id when running Cypress in Webapp.io","body":"### Current behavior\r\n\r\nWhen I omit the `--ci-build-id` flag from the Cypress command that executes within Webapp.io (formerly LayerCI) I get:\r\n```\r\n{\r\n  \"message\": \"CI Build ID could not be generated and was not specified.\",\r\n  \"code\": \"INDETERMINATE_CI_BUILD_ID\"\r\n}\r\n```\r\n\r\n### Desired behavior\r\n\r\nThe command should execute successfully when this flag is omitted since Cypress now supports Webapp.io internally as a CI provider. Omitting the flag will allow the command to be deterministic which will allow us to use Turborepo to not run Cypress when it is not necessary (e.g. only change is an update to README.md).\r\n\r\n### Test code to reproduce\r\n\r\nOur command looks like:\r\n```\r\ncypress run --spec cypress\/e2e\/card --record --parallel --group card --config baseUrl=http:\/\/localhost:7002 --ci-build-id $LAYERCI_JOB_ID-$RETRY_INDEX\r\n```\r\nSo you could run something similar in Webapp.io and then remove --ci-build-id to see the issue. \r\n\r\n### Cypress Version\r\n\r\n13.6.5\r\n\r\n### Node version\r\n\r\n20.11.0\r\n\r\n### Operating System\r\n\r\nUbuntu 22.04\r\n\r\n### Debug Logs\r\n\r\n```shell\r\n{\r\n  \"message\": \"CI Build ID could not be generated and was not specified.\",\r\n  \"code\": \"INDETERMINATE_CI_BUILD_ID\"\r\n}\r\n```","comments":["I've forwarded this request to our Cloud team for consideration."],"labels":["type: feature","CI","Cypress Cloud"],"number":29175},{"title":"Cypress Runner and Cypress Cloud running Different Commits From Main ","body":"### Current behavior\r\n\r\nI have a nightly suite of tests that run within Cypress Cloud against the FE of our application. To test the same errors from the night before, I would update my local main branch and then merge those changes into my local nightly testing branch and run the debug from the Runner. Within the past few days, I have noticed that there is a discrepancy between the most recent commit in Cloud and the most recent commit in my local Runner, and my runner will only update to the second-most current commit, one behind Cloud. I haven't changed any processes for my testing or any settings in either my runner or Cloud, save updating locally to 13.7.0.\r\n![screenshot_2024-03-20_at_10 30 47___am](https:\/\/github.com\/cypress-io\/cypress\/assets\/61167135\/e3d269c6-e695-49d4-91bc-82e99653dabf)\r\n![screenshot_2024-03-20_at_10 30 37___am](https:\/\/github.com\/cypress-io\/cypress\/assets\/61167135\/28a0aec4-8341-4fef-9a61-fc294d4e5660)\r\n![screenshot_2024-03-20_at_10 30 14___am](https:\/\/github.com\/cypress-io\/cypress\/assets\/61167135\/8e189025-a8b5-4889-90da-f4c11670ad43)\r\n**Note that I am 4 commits ahead in the Runner because I have unpushed changes locally that would not affect this issue. \r\n\r\n### Desired behavior\r\n\r\nCypress Runner and Cypress Cloud should be on the same commit. \r\n\r\n### Test code to reproduce\r\n\r\nThere is no specific code to reproduce this. \r\n\r\n### Cypress Version\r\n\r\n13.7.0\r\n\r\n### Node version\r\n\r\n18.17.1\r\n\r\n### Operating System\r\n\r\nmacOS 14.3.1 (23D60)\r\n\r\n### Debug Logs\r\n\r\n_No response_\r\n\r\n### Other\r\n\r\n_No response_","comments":[],"labels":["stage: needs investigating","pkg\/launchpad"],"number":29173},{"title":"Cypress open hangs for a minute or two before loading","body":"### Current behavior\r\nHi ! \r\nFor some time now, cypress open takes a couple minutes to start when running `npx cypress open`\r\nHere are the steps we've encountered:\r\n\r\n1.Cypress browser window is blank\r\n![image](https:\/\/github.com\/cypress-io\/cypress\/assets\/14081633\/3ff1558b-d76b-4de4-82e6-d366588ca4d0)\r\n\r\n2. After a minute or so, the cypress loading logo appears and cypress works normally \r\n![image](https:\/\/github.com\/cypress-io\/cypress\/assets\/14081633\/612c5a99-2c51-43cc-90f6-6ced4e2c4f01)\r\n\r\n### Desired behavior\r\n\r\n`npx cypress open` opens cypress window quickly\r\n\r\n### Test code to reproduce\r\n[bug-repro.zip](https:\/\/github.com\/cypress-io\/cypress\/files\/14693226\/bug-repro.zip)\r\n\r\n\r\n\r\nI dumped the output of `DEBUG=* npx cypress open --config-file cypress\/cypress.local.config.ts  --browser edge` in this file : \r\n[out.log](https:\/\/github.com\/cypress-io\/cypress\/files\/14665230\/out.log)\r\n\r\n\r\nIt seems that the app stops being stuck shortly after the following logs appear : \r\n\r\n```\r\n2024-03-20T08:16:30.243Z cypress:data-context:sources:GitDataSource Refreshing git data\r\n2024-03-20T08:16:30.243Z simple-git:task:rev-parse:4 Adding task to the queue, commands = [ 'rev-parse', '--show-toplevel' ]\r\n2024-03-20T08:16:30.244Z simple-git:scheduler Scheduling id=4\r\n2024-03-20T08:16:30.244Z simple-git:scheduler Attempting id=4\r\n2024-03-20T08:16:30.244Z simple-git:task:rev-parse:4 Starting task\r\n2024-03-20T08:16:30.244Z simple-git [GitExecutor] [SPAWN] git [ 'rev-parse', '--show-toplevel' ]\r\n2024-03-20T08:16:30.244Z simple-git:task:rev-parse:4 [SPAWN] git [ 'rev-parse', '--show-toplevel' ]\r\n2024-03-20T08:16:30.244Z simple-git:task:rev-parse:4 [SPAWN] {\r\n  cwd: '\/home\/rozierale\/Work\/Rte\/Naza\/alz\/naza-front',\r\n  env: undefined,\r\n  windowsHide: true\r\n}\r\n```\r\nThe \"execution time\" associated with the command `cypress:data-context:sources:GitDataSource Refreshing git data` was of 1minute (pretty long), so I dug a bit in cypress source code (`GitDataSource.ts`) , but it seems that the \"1min\" delay is due to this part : \r\n```\r\n# GitDataSource.ts -> refreshAllGitData()\r\nthis.#intervalTimer = setTimeout(() => {\r\n          this.#refreshAllGitData()\r\n        }, SIXTY_SECONDS)\r\n```\r\nNote that **we don't have any delay with `cypress run`**, and this piece of code is ran only in open mode, that's why I thought this was relevant ! \r\n```\r\nif (config.isRunMode) {\r\n      this.#verifyGitRepo().catch(() => {\r\n        \/\/ Empty catch for no-floating-promises rule\r\n      })\r\n    } else {\r\n      this.#refreshAllGitData()\r\n    }\r\n```\r\n\r\n**By downgrading to cypress 12.5.0, this issue disappears and cypress start normally. Here are the logs  of a successful execution** :\r\n[working.log](https:\/\/github.com\/cypress-io\/cypress\/files\/14665347\/working.log)\r\n\r\nInterestingly, these logs do not contain the lines that appear when cypress stops being stuck (see above), so they must be unrelated to the issue....\r\n\r\nAnd finally, cypress version 13.4.0  also has this issue (the only other I tried so far)\r\n\r\nSorry for the lack of other clues, I hope you'll have the time to take a look ! And thanks again for Cypress, we're using it everyday :)  \r\n\r\n### Cypress Version\r\n\r\n13.6.4\r\n\r\n### Node version\r\n\r\nv16.15.0\r\n\r\n### Operating System\r\n\r\nUbuntu 20.04.5 LTS Release\r\n\r\n### Debug Logs\r\n\r\n```shell\r\nsee linked files.\r\n```\r\n\r\n\r\n### Other\r\n\r\n_No response_","comments":["Hello,\r\nI'm facing the same problem. Here is my two cents:\r\n\r\n| Cypress versions  | Result |\r\n| ------------- | ------------- |\r\n| 12.5.0  | Launches quickly  |\r\n| 12.6.0  | Launches quickly  |\r\n| 13.0.0  | Launches quickly  |\r\n| 13.1.0  | Launches quickly  |\r\n| 13.2.0  | Crashes with seemingly unrelated error about dependencies (Error: Cannot find module 'bluebird'), didn't investigate further |\r\n| 13.3.0  | Hangs  |\r\n\r\n\r\n","@AlexandreRozier Thanks for the investigation. That sixty seconds is suspicious. This was introduced in 10.0, so it's interesting that @AlexGuironnetRTE mentions this behavior showing up in an older version. I wonder if it's a combination of something recent with this code. ","Thanks for the reply. Turns out my issue with 13.2.0 was the same as https:\/\/github.com\/cypress-io\/cypress\/issues\/27813. Clearing the cache and reinstalling as suggested made the error go away. And then.... cypress open hangs.\r\n\r\nSo that means whatever might interact with the function from 10.0 as you said would have been introduced with 13.2.0... \r\nUnfortunately, to my untrained eye there is nothing suspicious either in the release notes or in the [added commits](https:\/\/github.com\/cypress-io\/cypress\/compare\/v13.1.0...v13.2.0).\r\nCould dependency updates like the node or electron version have something to do with it?","I also tried from home to rule out any company proxy timeout or anything of this kind, and I have the same behaviour.","Thks for the reply ! I don't think `refreshAllGitData` is the culprit since it waits for 3 promises to resolve : \r\n\r\n- `loadAndWatchCurrentBranch` -> returns OK (`Watcher initialized`)\r\n- `loadGitHashes` -> returns OK (`Calling onGitLogChange: callback defined ...`)\r\n- `loadBulkGitInfo` -> never called, no mention of  `debugVerbose(`checking %d files`, absolutePaths.length)` in my logs\r\nSo none of these things seem to hang ","@jennifer-shehane I'm adding a bug repro to this issue , hopefully this will help ! \r\n\r\n[bug-repro.zip](https:\/\/github.com\/cypress-io\/cypress\/files\/14693221\/bug-repro.zip)\r\n\r\nSteps : \r\n\r\n1. (optional) rm -rf ~\/.npm\/_npx\/   \/\/ clear npx cache\r\n2. npm i \r\n3. npx cypress open\r\nIt should hang for a while :) \r\nAlso changing cypress version to 12.5.0 removes the launch delay on this repro."],"labels":["stage: needs investigating","type: performance \ud83c\udfc3\u200d\u2640\ufe0f"],"number":29171},{"title":"Custom assertion messages create confusing output in Cypress open","body":"### Current behavior\r\n\r\nHello,\r\nI just noticed a strange behaviour regarding custom assertion messages when running Cypress in open mode.\r\n\r\n`expect(2).to.be.a('string')`\r\n\r\n![image](https:\/\/github.com\/cypress-io\/cypress\/assets\/45459065\/4c816d5f-4d2a-4737-af41-fa5fecfd445a)\r\n\r\nexpect(2, \"Custom message\").to.be.a('string')\r\n\r\n![image](https:\/\/github.com\/cypress-io\/cypress\/assets\/45459065\/f077a2e2-46c9-4a42-ad10-6eebf5b2a9b1)\r\n\r\nAs you can see, the message on the first line is not in the right order : \"expected Custom message: to be a string 2\", whereas the \"AssertionError\" message below is correct : \"Custom message: expected 2 to be a string\"\r\n\r\nIt's even more of a problem for other chainers, particularly when the assertion passes so there is no correct \"AssertionError\" message below.\r\n\r\n`expect(2).to.be.at.least(0);`\r\nyields \r\n![image](https:\/\/github.com\/cypress-io\/cypress\/assets\/45459065\/1d9805aa-665c-486c-b02d-168b2eb9f193)\r\n\r\nwhereas \r\n`expect(2).to.be.at.least(0, \"Custom message\");`\r\n\r\nyields \r\n\r\n![image](https:\/\/github.com\/cypress-io\/cypress\/assets\/45459065\/a1b52360-0d59-4e82-969d-a994c565ffe3)\r\n\r\nThe expected min value (0) is no longer displayed and the message implies that we're expecting the value to be a least 2 (the actual value).\r\n\r\nSame problem with ` expect(2, \"Custom message\").to.be.at.least(0);`\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Desired behavior\r\n\r\nWhen using a custom message, the output just after \"assert\" should match what is done for the \"AssertionError\" message, meaning it should be something like : \"My custom message: Message I would have if no custom message\"\r\n\r\n### Test code to reproduce\r\n\r\nThe examples above are reproducible with any app, but please let me know if any additional information is needed.\r\n\r\n### Cypress Version\r\n\r\n13.7.0\r\n\r\n### Node version\r\n\r\nv16.15.0\r\n\r\n### Operating System\r\n\r\nUbuntu 20.04.5 LTS \/ 64 bits\r\n\r\n### Debug Logs\r\n\r\n_No response_\r\n\r\n### Other\r\n\r\n_No response_","comments":["@AlexGuironnetRTE I'm fairly certain I broke this in this PR: https:\/\/github.com\/cypress-io\/cypress\/pull\/28583 Downgrading to 13.6.2 would resolve the issue. \r\n\r\n13.6.2\r\n![Screenshot 2024-03-19 at 11 49 53\u202fAM](https:\/\/github.com\/cypress-io\/cypress\/assets\/1271364\/fc860efe-03df-4354-a0ff-59ed264c105d)\r\n\r\n13.6.3\r\n![Screenshot 2024-03-19 at 11 48 42\u202fAM](https:\/\/github.com\/cypress-io\/cypress\/assets\/1271364\/a74c572d-5571-4b6d-b73c-c3a0e20feb58)\r\n","Thanks a lot for the prompt reply ! \r\n\r\n"],"labels":["type: bug","stage: ready for work","v13.6.3 \ud83d\udc1b"],"number":29167},{"title":"Outdated text on https:\/\/example.cypress.io\/","body":"### Current behavior\r\n\r\nThe text on https:\/\/example.cypress.io\/ is out of date. It says:\r\n\r\n> This is an example app used to showcase Cypress.io testing. For a full reference of our documentation, go to docs.cypress.io\r\n\r\n### Desired behavior\r\n\r\nThe text on https:\/\/example.cypress.io\/ should say:\r\n\r\n> This is an example app used to showcase Cypress.io End-to-End (E2E) testing. For a full reference of our documentation, go to docs.cypress.io\r\n\r\n### Test code to reproduce\r\n\r\nExecute:\r\n\r\n```shell\r\ngit clone https:\/\/github.com\/cypress-io\/cypress-example-kitchensink\r\ncd cypress-example-kitchensink\r\nnpm ci\r\nnpm start\r\n```\r\n\r\nOpen http:\/\/localhost:8080 and compare the contents with https:\/\/example.cypress.io\/.\r\n\r\n### Cypress Version\r\n\r\n`13.7.0`\r\n\r\n### Node version\r\n\r\n`v20.11.1`\r\n\r\n### Operating System\r\n\r\nUbuntu `22.04.4` LTS\r\n\r\n### Debug Logs\r\n\r\n_No response_\r\n\r\n### Other\r\n\r\n- Depends on resolution of #29158","comments":["@MikeMcC399 Yah we haven't gone through the process of rereleasing yet since some things were still broken. We'll see if we can do that this week, if not it will be next release.","@jennifer-shehane \r\n\r\n> Yah we haven't gone through the process of rereleasing yet since some things were still broken. We'll see if we can do that this week, if not it will be next release.\r\n\r\nThis issue was more of a place-holder for the known deploy issues.\r\n\r\nThe change of text I commented on is not at all critical, so I'm not pushing for a quick result! \ud83d\ude42 \r\n\r\n"],"labels":["pkg\/example","process: release"],"number":29156}]
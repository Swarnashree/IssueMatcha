[{"issue_title": "[24.0 backport] plugin: fix mounting /etc/hosts when running in UserNS", "summary": "Discussion on the potential security vulnerability in the library's encryption method and a request for a fix or workaround."}, {"issue_title": "[23.0 backport] plugin: fix mounting /etc/hosts when running in UserNS", "summary": "Discussion on the potential security vulnerability in the library's encryption method and a request for a fix or workaround."}, {"issue_title": "Disabling the default bridge changes Docker's behavior regarding DOCKER-USER chain", "summary": "Discussion on the potential security vulnerability in the library's encryption method and a request for a fix or workaround."}, {"issue_title": "Restore the SetKey prestart hook.", "summary": "Discussion on the potential security vulnerability in the library's encryption method and a request for a fix or workaround."}, {"issue_title": "failed to register layer: operation not permitted", "summary": "Issue resolved by enabling user namespace in systemd-nspawn using the `-U` flag or adding `containers.<name>.extraFlags = [ \"-U\" ];` to the config. However, enabling user namespace triggers an error upon starting Docker Containers in unprivileged environments. A workaround for this is to run `SYSTEMD_SECCOMP=0 systemd-nspawn -b --network-bridge=your-bridge -D /opt/arch-nspawn -U --bind=/proc:/run/proc --bind=/sys:/run/sys`."}, {"issue_title": "simple run command with --sysctl for network interface fails after upgrade", "summary": "Issue caused by recent Docker release (v26) due to a change in network configuration, specifically the network interface renaming. The change results in the network interface renaming happening after sysctls are applied by the runtime. The issue has been traced back to a specific pull request (#47062) and a possible solution of reverting to the pre-start hook has been suggested."}, {"issue_title": "Windows: Process running within Docker Container throws OOM error but container doesn't report the error", "summary": "The issue is related to the lack of a way to determine if a Windows Container died due to an out-of-memory (OOM) condition. This is because the current underlying implementation of the Windows Containers code does not support OOM notifications. The equivalent code for Windows containers in 'containerd' implementation does not implement any sort of OOM notification. A new issue should be created in the 'microsoft/hcsshim' repository to address this problem."}, {"issue_title": "Docker engine starts containers before making shure docker.sock is created on host-system", "summary": "Error: permission denied while trying to connect to the Docker daemon socket on the server"}, {"issue_title": "Rootless container internet connectivity not working when iptables disabled", "summary": "There is a discussion about a potential issue related to iptables masquerade rules in the network namespace that rootless dockerd runs in. The issue causes unexpected behavior when trying to route traffic to the outside world. The maintainers are seeking more information about the use case for this feature and whether it is necessary for the users."}, {"issue_title": "docker checkpoint create failed with a huge image.", "summary": "The issue is related to CRIU failing to create checkpoints for a specific image with a size of more than 20GB. The failure does not seem to be related to the size of the image, as a larger image was tested successfully. The issue was reproduced on a machine with 2 CPUs and 4GB of memory, but not on a machine with 4 CPUs and 8GB of memory. The Docker version used is 25.0.5, and the CRIU version is 3.19. The log file and additional information are provided for further investigation."}]
[{"issue_title": "`terraform fmt` mangles hyphenated-heredoc `error_message`  with newlines embedded in interpolation", "tags": ["Terraform", "Infrastructure", "Code", "IaC", "Configuration", "Heredoc", "Interpolation", "Formatting", "Issue", "Bug", "New", "Version", "Resources", "Execution", "Plan", "Graph", "Dependencies", "Change", "Automation", "GitHub"], "summary": "This is the official Terraform repository on Github, developed by HashiCorp. Terraform is an open-source Infrastructure as Code (IaC) software tool that enables developers and DevOps teams to safely and efficiently build, change, and version infrastructure. It uses a high-level configuration language to describe and provide a blueprint of the datacenter. The repository includes the command line interface and the main graph engine, while providers are implemented as plugins. The Terraform website offers extensive documentation, tutorials, and a certification program. For contributing to the Terraform project, refer to the contributing and bug triage guides in the repository."}, {"issue_title": "docs: Terraform style guide", "tags": ["infrastructure", "automation", "IaC", "Terraform", "cloud", "resources", "provisioning", "configuration", "code", "style", "guide", "best", "practices", "documentation", "versioning", "state", "management", "secrets", "versioning", "hashicorp"], "summary": "Official Terraform repository by HashiCorp, a tool for building, changing, and versioning infrastructure safely and efficiently. It uses a high-level configuration syntax to describe infrastructure as code, with features such as execution plans, resource graph, and change automation. This repository contains only Terraform core, while providers are implemented as plugins. The repository includes documentation, contributing guide, and a Business Source License 1.1."}, {"issue_title": "Interpolate environment variables when configuring dev_overrides", "tags": ["terraform", "infrastructure", "code", "configuration", "provider", "plugins", "execution", "plan", "resource", "graph", "change", "automation", "cli", "graph engine", "open source", "hashicorp", "devops", "cloud", "provisioning"], "summary": "This is the official Terraform repository on Github, developed by HashiCorp. Terraform is an open-source Infrastructure as Code (IaC) software tool that enables developers and DevOps teams to safely and efficiently build, change, and version infrastructure. It uses a high-level configuration language to describe and provide a blueprint of the datacenter. The repository includes the command line interface and the main graph engine, while providers are implemented as plugins. The Terraform website offers extensive documentation, tutorials, and a certification program. For contributing to the Terraform project, refer to the contributing and bug triage guides in the repository."}, {"issue_title": "Terraform test expect_failures does not work as expected when type is invalid", "tags": ["Terraform", "Infrastructure", "Code", "IaC", "Execution", "Plans", "Resource", "Graph", "Change", "Automation", "Versioning", "Configuration", "Syntax", "Providers", "Plugins", "GraphEngine", "CLI", "BSL1.1", "OpenSource", "DevOps"], "summary": "This is the official Terraform repository on Github, developed by HashiCorp. Terraform is an open-source Infrastructure as Code (IaC) software tool that enables developers and DevOps teams to safely and efficiently build, change, and version infrastructure. It uses a high-level configuration language to describe and provide a blueprint of the datacenter. The repository includes the command line interface and the main graph engine, while providers are implemented as plugins. The Terraform website offers extensive documentation, tutorials, and a certification program. For contributing to the Terraform project, refer to the contributing and bug triage guides in the repository."}, {"issue_title": "Optional chaining operation", "tags": ["Terraform", "Infrastructure", "Code", "Versioning", "IaC", "Resource Graph", "Change Automation", "Execution Plans", "Planning", "Versioning Infrastructure", "HashiCorp", "Cloud Providers", "Custom Solutions", "Configuration Syntax", "Resource Management", "Infrastructure Blueprint", "Parallelization", "Dependency Management", "Terraform Registry"], "summary": "Official Terraform repository by HashiCorp. Terraform is an open-source Infrastructure as Code (IaC) software tool that provides a consistent CLI workflow to manage hundreds of cloud services. Terraform codifies APIs into declarative configuration files, which can be shared amongst team members, treated as code, edited, reviewed, and versioned."}, {"issue_title": "Planned value does not match config value for number", "tags": ["Terraform", "Infrastructure", "Code", "IaC", "Resource Graph", "Change Automation", "Go", "CLI", "Configuration Files", "Debugging", "Execution Plans", "Versioning", "GitHub", "Issue Tracking", "Open Source", "Infrastructure as Code", "DevOps", "Cloud Computing", "Infrastructure Management"], "summary": "Official Terraform repository by HashiCorp. Terraform is an open-source Infrastructure as Code (IaC) software tool that provides a consistent CLI workflow to manage hundreds of cloud services. Terraform codifies APIs into declarative configuration files, which can be shared amongst team members, treated as code, edited, reviewed, and versioned."}, {"issue_title": "Error when loading plugin schemas outputs diagnostics suffixed with double period", "tags": ["terraform", "infrastructure", "code", "cli", "graph", "execution", "planning", "resources", "configuration", "automation", "devops", "provider", "plugins", "hashicorp", "suffix", "diagnostics", "error", "output", "versioning"], "summary": "Official Terraform repository by HashiCorp. Terraform is an open-source Infrastructure as Code (IaC) software tool that provides a consistent CLI workflow to manage hundreds of cloud services. Terraform codifies APIs into declarative configuration files, which can be shared amongst team members, treated as code, edited, reviewed, and versioned."}, {"issue_title": "Can not run `terraform console` when I am in the projects directory", "tags": ["Terraform", "Infrastructure", "Code", "CLI", "Configuration", "Execution", "Planning", "Resource", "Graph", "Change", "Automation", "Versioning", "Documentation", "Open-source", "Plugin", "Provisioning", "IaC", "DevOps", "Cloud", "Infrastructure-as-code"], "summary": "Official Terraform repository by HashiCorp. Terraform is an open-source Infrastructure as Code (IaC) software tool that provides a consistent CLI workflow to manage hundreds of cloud services. Terraform codifies APIs into declarative configuration files, which can be shared amongst team members, treated as code, edited, reviewed, and versioned."}, {"issue_title": "Proposal for minimizing/removing secrets from the Terraform state file", "tags": ["Terraform", "Infrastructure", "Management", "IaC", "Security", "Secrets", "Statefile", "Plan", "Apply", "Privileges", "APIs", "Data Sources", "Resources", "Vault", "GCP", "Provider", "Plugins", "Configuration", "Automation"], "summary": "Official Terraform repository by HashiCorp. Terraform is an open-source Infrastructure as Code (IaC) software tool that provides a consistent CLI workflow to manage hundreds of cloud services. Terraform codifies APIs into declarative configuration files, which can be shared amongst team members, treated as code, edited, reviewed, and versioned."}, {"issue_title": "Fix leakage of sensitive variables on HCL syntax error in variable declaration", "tags": ["infrastructure", "terraform", "HCL", "syntax", "error", "sensitive", "variables", "security", "redaction", "diagnostics", "execution", "plan", "resource", "graph", "versioning", "code", "automation", "configuration", "plugins", "providers"], "summary": "Official Terraform repository by HashiCorp. Terraform is an open-source Infrastructure as Code (IaC) software tool that provides a consistent CLI workflow to manage hundreds of cloud services. Terraform codifies APIs into declarative configuration files, which can be shared amongst team members, treated as code, edited, reviewed, and versioned."}]
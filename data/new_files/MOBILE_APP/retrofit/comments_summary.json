[{"issue_title": "JDK test tasks do not have dependencies set up correctly", "summary": "Discussion on the potential security vulnerability in the library's encryption method and a request for a fix or workaround."}, {"issue_title": "R8 full mode and @Streaming giving runtime error with minifyEnabled", "summary": "Issue related to incompatibility with a specific commit in the released version of the repository. A workaround is provided by copying the commit into the user's project shrinker config. Similar issues have been reported with `@Streaming` annotated functions, where the app loads forever on signed builds with `minifyEnbaled = true`. The issue is not present in debug builds or with the addition of `HttpLoggingInterceptor`. The problem seems to be related to the type of params added in the `@Streaming` annotated functions."}, {"issue_title": "Client-Side host load-balance", "summary": "The general policy for handling requests with a specific host has been to use an OkHttp interceptor to rewrite the Request object and target the desired host. Currently, a global host can be used at the Retrofit layer or a dummy domain like `example.com` can be used to ensure the interceptor is required to rewrite the URL. A future consideration is the implementation of a factory for base URLs which is invoked each time a request is created."}, {"issue_title": "Throwing retrofit2.HttpException HTTP 500 Internal Server Error, although exception is handled", "summary": "Several users are experiencing an unhandled exception crash caused by non-200 status codes in Retrofit2, possibly related to FirebasePerf and okhttp. A solution involving the addition of exception handlers has been proposed, but it may result in the loss of the original exception. A failing test case or a minimally-reproducing sample project is needed to aid in debugging."}, {"issue_title": "Add support for Kotlin's Result", "summary": "There is discussion about supporting Kotlin Result in Retrofit, with some suggesting using a provided call adapter or using `runCatching` instead. Another solution, RetrofitKx, is also mentioned."}]
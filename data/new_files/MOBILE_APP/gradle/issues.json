[{"title":"Incorrect java warning\/error location in new Problems API","body":"### Current Behavior\n\nTake something like...\r\n```java\r\npublic class WarningsCreator {\r\n\r\n  private static int idx = 0;\r\n\r\n  private void createIndirectAccessWarning() {\r\n    int idx = new WarningsCreator().idx;\r\n  }\r\n}\r\n```\r\n\r\nwith compile settings...\r\n```groovy\r\ntasks.withType(JavaCompile).configureEach {\r\n\toptions.compilerArgs << '-Xlint:all'\r\n}\r\n```\r\n\r\nJava will throw a warning: `static variable should be qualified by type name, WarningsCreator, instead of by an expression`\r\n\r\nThe `javax.tools.Diagnostic` class will have the following position data for this warning...\r\n\r\n```java\r\n    int idx = new WarningsCreator().idx;\r\n              ^                               startPosition (in file)\r\n                                      ^       endPosition (in file)\r\n                                   ^          position (in file)\r\n                                   ^          columnNumber (in line)\r\n```\r\nThis is because Java sets `startPosition` and `endPosition` to the whole `new WarningsCreator().idx` range but it sets `columnNumber`, `position` to point to the start of `.idx;`\r\n\r\nThe `offsetInFileLocation` is being reported using `startPosition` and `endPosition - startPosition` (so the length is 25).  This is correct.\r\n\r\nBut the **`lineInFileLocation`** is being reported incorrectly because the `length` is calculated using `endPosition - startPosition` (i.e. 25) when it **should be using `endPosition - position`** (i.e. 4)\r\n\n\n### Expected Behavior\n\nThe length in `lineInFileLocation` should be correct\n\n### Context (optional)\n\nTrying to highlight the errors\/warning correctly in an IDE\n\n### Steps to Reproduce\n\nUse the simple java snippet above with the `xlint` settings provided.\n\n### Gradle version\n\n8.8-20240323001552+0000\n\n### Build scan URL (optional)\n\n_No response_\n\n### Your Environment (optional)\n\nWindows 11","comments":[],"labels":["a:bug","to-triage"],"number":28554},{"title":"[8.7, 8.6,...] Annotation processing issue ","body":"### Current Behavior\r\n\r\nI have 2 annotation processor defined in my project - one works, the other one is ignored by Gradle for no reason?\r\n\r\n### Expected Behavior\r\n\r\nI expected both annotation processor to work!\r\n\r\n### Steps to Reproduce\r\n\r\n[I have published a reproducible code](https:\/\/github.com\/hrstoyanov\/gradle-issue-28553), look at the README.md for complete instructions.\r\n\r\n### Gradle version\r\n\r\n8.7 (also 8.6 and possibly earlier)\r\n\r\n### Your Environment (optional)\r\n\r\nJava 21, MacOS Sonoma 14.3.1","comments":["For a workaround, [see this.](https:\/\/github.com\/eclipse-store\/store\/issues\/183)"],"labels":["a:bug","to-triage"],"number":28553},{"title":"Add support for running Gradle on Java 22","body":"Fixes #26162 \r\n\r\nOther issues may be present with Kotlin still.\r\n\r\n### Reviewing cheatsheet\r\n\r\nBefore merging the PR, comments starting with \r\n- \u274c \u2753**must** be fixed\r\n- \ud83e\udd14 \ud83d\udc85 **should** be fixed\r\n- \ud83d\udcad **may** be fixed\r\n- \ud83c\udf89 celebrate happy things\r\n","comments":["@bot-gradle test this","<!-- {\"replyTargetCommentId\":null,\"teamCityBuildId\":null,\"teamCityBuildHeadRef\":\"28ed9c0dfc4ef42757ef22500b59a5f7fe499220\",\"teamCityBuildStatus\":\"PENDING\",\"replyApproveReviewId\":null} -->\nI've triggered the following builds for you. Click [here](https:\/\/ge.gradle.org\/scans?search.buildOutcome=failure&amp;search.names=gitCommitId&amp;search.tags=CI&amp;search.values=28ed9c0dfc4ef42757ef22500b59a5f7fe499220) to see all build failures.\n- [PullRequestFeedback build](https:\/\/builds.gradle.org\/viewQueued.html?itemId=80044373)"],"labels":["a:feature","in:groovy-plugin","in:invoking-gradle","1 min review","platform:jvm","platform:documentation","platform:build_infrastructure","platform:core_execution"],"number":28552},{"title":"Fix doc info","body":"<!--- The issue this PR addresses -->\r\n<!-- Fixes #? -->\r\n#28550\r\n### Context\r\n<!--- Why do you believe many users will benefit from this change? -->\r\n<!--- Link to relevant issues or forum discussions here -->\r\n\r\n### Contributor Checklist\r\n- [x] [Review Contribution Guidelines](https:\/\/github.com\/gradle\/gradle\/blob\/master\/CONTRIBUTING.md).\r\n- [x] Make sure that all commits are [signed off](https:\/\/git-scm.com\/docs\/git-commit#Documentation\/git-commit.txt---signoff) to indicate that you agree to the terms of [Developer Certificate of Origin](https:\/\/developercertificate.org\/).\r\n- [x] Make sure all contributed code can be distributed under the terms of the [Apache License 2.0](https:\/\/github.com\/gradle\/gradle\/blob\/master\/LICENSE), e.g. the code was written by yourself or the original code is licensed under [a license compatible to Apache License 2.0](https:\/\/apache.org\/legal\/resolved.html).\r\n- [x] Check [\"Allow edit from maintainers\" option](https:\/\/help.github.com\/articles\/allowing-changes-to-a-pull-request-branch-created-from-a-fork\/) in pull request so that additional changes can be pushed by Gradle team.\r\n- [ ] Provide integration tests (under `<subproject>\/src\/integTest`) to verify changes from a user perspective.\r\n- [ ] Provide unit tests (under `<subproject>\/src\/test`) to verify logic.\r\n- [ ] Update User Guide, DSL Reference, and Javadoc for public-facing changes.\r\n- [ ] Ensure that tests pass sanity check: `.\/gradlew sanityCheck`.\r\n- [ ] Ensure that tests pass locally: `.\/gradlew <changed-subproject>:quickTest`.\r\n\r\n### Reviewing cheatsheet\r\n\r\nBefore merging the PR, comments starting with \r\n- \u274c \u2753**must** be fixed\r\n- \ud83e\udd14 \ud83d\udc85 **should** be fixed\r\n- \ud83d\udcad **may** be fixed\r\n- \ud83c\udf89 celebrate happy things\r\n","comments":["<h3>Change Summary<\/h3> This PR is 50% new code. <table> <tr> <td>Platform<\/td> <td>Added Lines<\/td> <td>% of Total Line Changes<\/td> <td>Deleted Lines<\/td> <td>% of Total Line Changes<\/td> <td>Files Changed<\/td> <td>% of Total Files Changed<\/td> <\/tr>\n<tr> <td>bt_ge_build_cache<\/td> <td>0<\/td> <td>0%<\/td> <td>0<\/td> <td>0%<\/td> <td>0<\/td> <td>0%<\/td> <\/tr>\n<tr> <td>build_infrastructure<\/td> <td>0<\/td> <td>0%<\/td> <td>0<\/td> <td>0%<\/td> <td>0<\/td> <td>0%<\/td> <\/tr>\n<tr> <td>core_configuration<\/td> <td>0<\/td> <td>0%<\/td> <td>0<\/td> <td>0%<\/td> <td>0<\/td> <td>0%<\/td> <\/tr>\n<tr> <td>core_execution<\/td> <td>0<\/td> <td>0%<\/td> <td>0<\/td> <td>0%<\/td> <td>0<\/td> <td>0%<\/td> <\/tr>\n<tr> <td>core_runtime<\/td> <td>0<\/td> <td>0%<\/td> <td>0<\/td> <td>0%<\/td> <td>0<\/td> <td>0%<\/td> <\/tr>\n<tr> <td>documentation<\/td> <td>9<\/td> <td>50%<\/td> <td>9<\/td> <td>50%<\/td> <td>1<\/td> <td>100%<\/td> <\/tr>\n<tr> <td>extensibility<\/td> <td>0<\/td> <td>0%<\/td> <td>0<\/td> <td>0%<\/td> <td>0<\/td> <td>0%<\/td> <\/tr>\n<tr> <td>gradle_enterprise<\/td> <td>0<\/td> <td>0%<\/td> <td>0<\/td> <td>0%<\/td> <td>0<\/td> <td>0%<\/td> <\/tr>\n<tr> <td>ide<\/td> <td>0<\/td> <td>0%<\/td> <td>0<\/td> <td>0%<\/td> <td>0<\/td> <td>0%<\/td> <\/tr>\n<tr> <td>jvm<\/td> <td>0<\/td> <td>0%<\/td> <td>0<\/td> <td>0%<\/td> <td>0<\/td> <td>0%<\/td> <\/tr>\n<tr> <td>kotlin_dsl<\/td> <td>0<\/td> <td>0%<\/td> <td>0<\/td> <td>0%<\/td> <td>0<\/td> <td>0%<\/td> <\/tr>\n<tr> <td>release_coordination<\/td> <td>0<\/td> <td>0%<\/td> <td>0<\/td> <td>0%<\/td> <td>0<\/td> <td>0%<\/td> <\/tr>\n<tr> <td>software<\/td> <td>0<\/td> <td>0%<\/td> <td>0<\/td> <td>0%<\/td> <td>0<\/td> <td>0%<\/td> <\/tr>\n<\/table>\n<automation id=\"summary_table\/summary_table\"\/>"],"labels":["to-triage","from:contributor"],"number":28551},{"title":"Fix doc info","body":"### Issue type\n\nWrong or misleading information\n\n### Problem description\n\nFix lines 5, 15, 25, 71, 88, 92, 93, 97, 161\n\n### Context (optional)\n\n_No response_\n\n### Page with the problem\n\nplatforms\/documentation\/docs\/src\/docs\/design\/gradle-module-metadata-1.0-specification.md","comments":[],"labels":["a:documentation","to-triage"],"number":28550}]
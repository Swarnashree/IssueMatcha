[{"title":"Fix flickering on vulkan when drawing to a render target","body":"Fixed an issue where flickering was happening on the Vulkan and MoltenVK renderers when using a render target.","comments":[],"labels":["bug","engine","graphics","vulkan"],"number":8698},{"title":"Use the 64-bit version of LuaJIT in the editor","body":"### Technical changes\r\n* Use the 64-bit version of LuaJIT to compile Lua scripts when building the project. Previously we used the 32-bit version, which required users to install Rosetta 2 to build their projects on an Apple Silicon Mac.","comments":[],"labels":["task","editor","skip release notes"],"number":8697},{"title":"Fixed property schema validation in the editor","body":"### Technical changes\r\n* Schema validation errors from node properties are now reported correctly instead of throwing an unhelpful exception.","comments":[],"labels":["bug","editor","skip release notes"],"number":8696},{"title":"Add various scene data utility functions to the dev module","body":"### Technical changes\r\n* Added helper functions to inspect the contents of the Scene Cache to the `dev` module.\r\n* Leveraged the pretty-printing capabilities of the `deep-diff2` package to add a `pprint` function to the `dev` module with support for various editor data types. In particular, this helps when inspecting vertex buffers and matrices for the Scene View.\r\n* Added `install-repl-pprint-tap!` and `uninstall-repl-pprint-tap!` to the `dev` module. Call it from your REPL to `pprint` any values sent to the `tap>` function to the REPL.\r\n* You can get the last `pprinted` value using `(dev\/last-pprint)`.","comments":[],"labels":["task","editor","skip release notes"],"number":8695},{"title":"Editor model rendering optimizations and fixes","body":"* Fixed a performance regression in the editor introduced by the recent addition of custom vertex attributes to models.\r\n* Fixed broken preview of model scene files (`.gltf`, `.dae`, etc.). Previously you'd only see the bounding boxes if you opened a `.gltf` file in the editor.\r\n* Fixed leak of OpenGL context used for scene picking hit tests after closing an editor tab.\r\n* The editor will now share vertex buffers among meshes, as long as they do not use any world-space attributes.\r\n* The Coordinate Space setting of declared vertex attributes takes precedence, but the Vertex Space setting on the material will be used as the default for any undeclared vertex attributes where it has relevance.\r\n* The editor will now produce world-space normal attributes correctly, if desired. \r\n* The editor will no longer produce a broken normal matrix for objects that have a non-uniformly scaled parent.\r\n\r\nFixes #8666.","comments":[],"labels":["bug","editor","model","performance"],"number":8694}]
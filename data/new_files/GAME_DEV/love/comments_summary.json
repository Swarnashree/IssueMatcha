[{"issue_title": "Regression 11.5: key events not triggered when an IME language is active (windows)", "summary": "SDL 2.24.2 has a regression causing issues with text input and IME in Love2D, not present in 2.0.18. The IME toolbar is not visible during text input, and `textinput` events are not generated during IME mode. The issue is upstream and not specific to Love2D's code."}, {"issue_title": "Low FPS on certain monitor", "summary": "The issue is related to the demo running under 300 frames per second, possibly due to software restrictions such as vsync being enabled in L\u00d6VE. The user has tested both 11.4 and 11.5 versions of L\u00d6VE with different results on different monitors. The user has also provided screenshots of their graphics driver settings. It is suggested to turn off freesync for the LG display to see if it behaves more consistently with love 11.5. The user has also mentioned that vsync does not affect the frame rate performance in their demo."}, {"issue_title": "Feature request: love.filesystem.newTempFile", "summary": "The issue discusses the potential implementation of a function to create temporary files in the L\u00d6VE game engine. The main motivation behind this is to have a platform-equivalent 'tmpfile' system call to avoid cleanup tasks and to prevent temporary files from accumulating and corrupting save games. However, there are concerns about the feasibility of implementing such a feature, as it might not be safe or atomic across different platforms. Additionally, there are suggestions to consider specific use cases before implementing anything. The discussion also highlights that L\u00d6VE's filesystem.write() function may already provide the required atomicity for most use cases."}, {"issue_title": "Multithreaded job/task system", "summary": "Discussion on the use of threads for network interaction, specifically for real-time networking and UDP. Suggestions include using a dedicated thread or Love2d threads for network activity."}, {"issue_title": "Request: Add x and y params to filedropped() and directorydropped() event callbacks", "summary": "There is a request for a feature in SDL2 to bring a window to the foreground when a drag and drop event occurs or when a mousewheel event occurs. It is noted that SDL2 does not provide this feature, but SDL3 will. A suggestion is made for a library that could potentially be used as a workaround. Additionally, there is a proposal for SDL to have an option for automatically bringing a window to the foreground when a drag and drop event occurs or when a mousewheel event occurs, which could be set with a call like SDL_SetWindowForeground(SDL_DROPFILE | SDL_MOUSEWHEEL)."}]